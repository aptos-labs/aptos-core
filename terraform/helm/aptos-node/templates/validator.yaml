{{- range $i, $e := until (int .Values.numValidators) }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "aptos-validator.fullname" $ }}-{{$i}}-validator
  labels:
    {{- include "aptos-validator.labels" $ | nindent 4 }}
    {{- include "aptos-validator.multiclusterLabels" (tuple $ $i) | nindent 4 }} 
  annotations:
    {{- with $.Values.service.validator.internal.annotations }}
    {{- toYaml $.Values.service.validator.internal.annotations | nindent 4 }}
    {{- end }}
    {{- if $.Values.service.internalDomain }}
    external-dns.alpha.kubernetes.io/hostname: val{{$i}}.{{ $.Values.service.internalDomain }}
    {{- end }}
spec:
  selector:
    {{- include "aptos-validator.selectorLabels" $ | nindent 4 }}
    app.kubernetes.io/name: validator
    app.kubernetes.io/instance: validator-{{$i}}
  type: {{ $.Values.service.validator.internal.type }}
  {{- if $.Values.service.validator.internal.headless }}
  clusterIP: None
  {{- end }}
  ports:
  - name: validator
    port: 6180
  - name: fullnode
    port: 6181
  - name: metrics
    port: 9101
  - name: admin
    port: 9102
  {{- if $.Values.service.validator.enableRestApi }}
  - name: api
    port: 8080
  {{- end }}

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "aptos-validator.fullname" $ }}-{{$i}}-validator-e{{ $.Values.chain.era }}
  labels:
    {{- include "aptos-validator.labels" $ | nindent 4 }}
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: {{ $.Values.validator.storage.class }}
  resources:
    requests:
      storage: {{ $.Values.validator.storage.size }}
  {{- if $.Values.validator.storage.labels }}
  selector:
    matchLabels:
      {{- toYaml $.Values.validator.storage.labels | nindent 6}}
  {{- end }}

---
{{ $validator_statefulset := lookup "apps/v1" "StatefulSet" $.Release.Namespace (printf "%s-%d-validator" (include "aptos-validator.fullname" $) $i) }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "aptos-validator.fullname" $ }}-{{$i}}-validator
  labels:
    {{- include "aptos-validator.labels" $ | nindent 4 }}
    app.kubernetes.io/name: validator
    app.kubernetes.io/instance: validator-{{$i}}
    {{- include "aptos-validator.multiclusterLabels" (tuple $ $i) | nindent 4 }}  
spec:
  serviceName: {{ include "aptos-validator.fullname" $ }}-{{$i}}-validator
  replicas: 1
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      {{- include "aptos-validator.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/name: validator
      app.kubernetes.io/instance: validator-{{$i}}
  template:
    metadata:
      labels:
        {{- include "aptos-validator.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/name: validator
        app.kubernetes.io/instance: validator-{{$i}}
        {{- if $.Values.chain.name }}
        chain_name: {{ $.Values.chain.name }}
        {{- end}}
      annotations:
        checksum/validator.yaml: {{ tpl ($.Files.Get "files/configs/validator.yaml") $ | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9101"
        {{- if $.Values.metrics.destination }}
        aptos.dev/metrics-destination: {{ $.Values.metrics.destination }}
        {{- end}}
        {{- with $.Values.fullnode.podAnnotations }}
        {{- toYaml $.Values.fullnode.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      initContainers:
        - name: run-script
          image: curlimages/curl:latest
          args:
            - sh
            - -c
            - |
              set -x
              cp /opt/aptos/genesis_readonly/* /opt/aptos/genesis
              if [ ! -f /opt/aptos/genesis/genesis.blob ]; then
                genesis_blob_upload_url="{{ $.Values.genesis_blob_upload_url }}"
                genesis_blob_upload_url="$genesis_blob_upload_url&namespace={{ $.Release.Namespace }}&method=GET"
                echo "genesis.blob not found locally, downloading..."
                signed_url=$(curl -s -X GET "$genesis_blob_upload_url")
                curl -o /opt/aptos/genesis/genesis.blob "$signed_url"
              else
                echo "genesis.blob found locally"
              fi
              ls -l /opt/aptos/genesis
          volumeMounts:
            - name: genesis-config
              mountPath: /opt/aptos/genesis_readonly
            - name: writable-genesis
              mountPath: /opt/aptos/genesis
      containers:
      - name: validator
        {{- if and $validator_statefulset (not $.Values.manageImages) }} # if the statefulset already exists and we do not want helm to simply overwrite the image, use the existing image
        image: {{ (first $validator_statefulset.spec.template.spec.containers).image }}
        {{- else }}
        image: {{ $.Values.validator.image.repo }}:{{ $.Values.validator.image.tag | default $.Values.imageTag }}
        {{- end }}
      {{- with $.Values.validator }}
        imagePullPolicy: {{ .image.pullPolicy }}
        args:
          - /bin/bash
          - -c
          - |-
            set -euxo pipefail
            if [[ -f /opt/aptos/data/wipe-db ]]; then
              # Wipe DB
              rm -rf /opt/aptos/data/db
              # Delete the command file so we only wipe the DB once
              rm -vf /opt/aptos/data/wipe-db
            fi
            exec /usr/local/bin/aptos-node -f /opt/aptos/etc/validator.yaml
        resources:
          {{- toYaml .resources | nindent 10 }}
        env:
        - name: RUST_LOG
          value: {{ .rust_log }}
        {{- if .force_enable_telemetry }}
        - name: APTOS_FORCE_ENABLE_TELEMETRY
          value: "true"
        {{- end }}
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: RUST_BACKTRACE
          value: "0"
      {{- end }}
        volumeMounts:
        - name: aptos-config
          mountPath: /opt/aptos/etc
        - name: writable-genesis
          mountPath: /opt/aptos/genesis
        - name: aptos-data
          mountPath: /opt/aptos/data
        ports:
        - containerPort: 6180
        - containerPort: 6181  # VFN
        - containerPort: 6182  # Public
        - containerPort: 8080
          name: api
        - containerPort: 9101
          name: metrics
        - containerPort: 9102
          name: admin
        securityContext:
          {{- if $.Values.enablePrivilegedMode }}
          runAsUser: 0
          privileged: true
          {{- else }}
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          {{- end }}
      {{- with $.Values.validator }}
      {{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- if $.Values.enablePrivilegedMode }}
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
        {{- else }}
        runAsNonRoot: true
        runAsUser: 6180
        runAsGroup: 6180
        fsGroup: 6180
        {{- end }}
        seccompProfile:
          type: RuntimeDefault
      {{- end }}
      volumes:
      - name: aptos-config
        configMap:
          name: {{ include "aptos-validator.fullname" $ }}-{{$i}}
      - name: genesis-config
        # Current implementation of `forge::backend::k8s::stateful_set::{set_identity, get_identity}`
        # depends on the position of this volume item within the parent list.
        secret:
          secretName: {{ include "aptos-validator.fullname" $ }}-{{$i}}-genesis-e{{ $.Values.chain.era }}
      - name: aptos-data
        persistentVolumeClaim:
          claimName: {{ include "aptos-validator.fullname" $ }}-{{$i}}-validator-e{{ $.Values.chain.era }}
      - name: writable-genesis
        emptyDir: {}
      serviceAccountName: {{ include "aptos-validator.fullname" $ }}-validator
      {{- if $.Values.imagePullSecret }}
      imagePullSecrets:
      - name: {{ $.Values.imagePullSecret }}
      {{- end }}
{{- end }}
