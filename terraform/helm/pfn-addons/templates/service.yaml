apiVersion: v1
kind: Service
metadata:
  name: {{ include "pfn-addons.fullname" . }}-fullnode
  labels:
    {{- include "pfn-addons.labels" . | nindent 4 }}
  annotations:
    {{- if eq .Values.ingress.class "alb" }}
    {{- if .Values.ingress.health_check_duration_secs }}
    alb.ingress.kubernetes.io/healthcheck-path: /v1/-/healthy?duration_secs={{ .Values.ingress.health_check_duration_secs }}
    {{- else }}
    alb.ingress.kubernetes.io/healthcheck-path: /v1/-/healthy
    {{- end }}
    {{- end }}
    {{- if eq .Values.ingress.class "gce" }}
    {{- if .Values.ingress.backend_http2 }}
    cloud.google.com/app-protocols: '{"default": "HTTP2"}'
    {{- end }}
    cloud.google.com/backend-config: '{"default":"{{ include "pfn-addons.fullname" . }}"}'
    cloud.google.com/neg: '{"ingress": true}'
    {{- end }}
spec:
  selector:
    app.kubernetes.io/part-of: velor-fullnode
    app.kubernetes.io/name: fullnode
  ports:
  - port: 80
    targetPort: 8080
  type: NodePort
  externalTrafficPolicy: Local
---
{{- if eq .Values.ingress.class "gce" }}
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: {{ include "pfn-addons.fullname" . }}
spec:
  {{- if .Values.ingress.gce_security_policy }}
  securityPolicy:
    name: {{ .Values.ingress.gce_security_policy }}
  {{- end }}
  logging:
    enable: {{ .Values.ingress.logging.enabled }}
  connectionDraining:
    drainingTimeoutSec: 30
  healthCheck:
    checkIntervalSec: 15
    timeoutSec: 5
    healthyThreshold: 1
    unhealthyThreshold: 2
    type: HTTP
    {{- if .Values.ingress.health_check_duration_secs }}
    requestPath: /v1/-/healthy?duration_secs={{ .Values.ingress.health_check_duration_secs }}
    {{- else }}
    requestPath: /v1/-/healthy
    {{- end }}
    # container targetPort
    port: 8080
  {{- if .Values.ingress.enableStickyness }}
  sessionAffinity:
    affinityType: "GENERATED_COOKIE"
    affinityCookieTtlSec: {{ .Values.ingress.cookieDurationSeconds }}
  {{- end }}
---
{{- end }}
