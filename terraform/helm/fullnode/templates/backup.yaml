{{- if $.Values.backup.enable }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "backup.fullname" . }}-backup
  labels:
    {{- include "backup.labels" . | nindent 4 }}
data:
{{ (.Files.Glob "files/backup/*.yaml").AsConfig | indent 2 }}

---
{{ $backup_statefulset := lookup "apps/v1" "StatefulSet" $.Release.Namespace (print (include "backup.fullname" .) "-backup")}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "backup.fullname" . }}-backup
  labels:
    {{- include "backup.labels" . | nindent 4 }}
    app.kubernetes.io/name: backup
spec:
  serviceName: {{ include "backup.fullname" . }}-backup
  replicas: 1
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      {{- include "backup.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/name: backup
  template:
    metadata:
      labels:
        {{- include "backup.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/name: backup
        {{- if or $.Values.chain.label $.Values.chain.name }}
        chain_name: {{ $.Values.chain.label | default $.Values.chain.name }}
        {{- end}}
      annotations:
        {{- if $.Values.metrics.destination }}
        aptos.dev/metrics-destination: {{ $.Values.metrics.destination }}
        {{- end}}
    spec:
      containers:
      - name: backup
        {{- if and $backup_statefulset (not $.Values.manageImages) }} # if the statefulset already exists and we do not want helm to simply overwrite the image, use the existing image
        image: {{ (first $backup_statefulset.spec.template.spec.containers).image }}
        {{- else }}
        image: {{ .Values.backup.image.repo }}:{{ .Values.backup.image.tag | default .Values.imageTag }}
        {{- end }}
        imagePullPolicy: {{ .Values.backup.image.pullPolicy }}
        resources:
          {{- toYaml .Values.backup.resources | nindent 10 }}
        command: ["/usr/local/bin/aptos-debugger"]
        args:
        - "aptos-db"
        - "backup"
        - "continuously"
        - "--metadata-cache-dir"
        - "/tmp/aptos-backup-metadata"
        - "--backup-service-address"
        - "http://{{ include "backup.backupService" . }}"
        {{- with .Values.backup }}
        - "--state-snapshot-interval-epochs"
        - "{{ int .config.state_snapshot_interval_epochs }}"
        - "--transaction-batch-size"
        - "{{ int .config.transaction_batch_size }}"
        {{- if .config.concurrent_data_requests }}
        - "--concurrent-data-requests"
        - "{{ int .config.concurrent_data_requests }}"
        {{- end }}
        - "--command-adapter-config"
        - "/opt/aptos/etc/{{ .config.location }}.yaml"
        env:
        - name: RUST_LOG
          value: "info"
        - name: RUST_BACKTRACE
          value: "1"
        {{- if (include "backup.pushMetricsEndpoint" $) }}
        - name: KUBERNETES_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: PUSH_METRICS_ENDPOINT
          value: "{{- include "backup.pushMetricsEndpoint" $ }}/api/v1/import/prometheus?extra_label=role={{- .jobName | default "db_backup" }}&extra_label=kubernetes_pod_name=$(KUBERNETES_POD_NAME)&extra_label=chain_name={{ $.Values.chain.label | default $.Values.chain.name }}"
        {{- end }}
        {{- include "backup.backupEnvironment" (dict "config" .config "era" $.Values.chain.era) | nindent 8 }}
        volumeMounts:
        - name: backup-config
          mountPath: /opt/aptos/etc
        - name: tmp
          mountPath: /tmp
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
        runAsUser: 6180
        runAsGroup: 6180
        fsGroup: 6180
        seccompProfile:
          type: RuntimeDefault
      {{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      volumes:
      - name: backup-config
        configMap:
          name: {{ include "backup.fullname" . }}-backup
      - name: tmp
        emptyDir: {}
      serviceAccountName: {{ include "backup.serviceAccount" . }}
      {{- if .Values.imagePullSecret }}
      imagePullSecrets:
      - name: {{.Values.imagePullSecret}}
      {{- end }}
{{- end }} # if $.Values.backup.enable
