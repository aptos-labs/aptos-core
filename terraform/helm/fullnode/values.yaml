# -- Default image tag to use for all fullnode images
imageTag: devnet

# -- If true, helm will always override the deployed image with what is configured in the helm values. If not, helm will take the latest image from the currently running workloads, which is useful if you have a separate procedure to update images (e.g. rollout)
manageImages: true

chain:
  # -- Bump this number to wipe the underlying storage
  era: 1
  # -- Name of the testnet to connect to. There must be a corresponding entry in .Values.aptos_chains
  name: devnet
  # -- The value of the `chain_name` label. If empty, defaults to `.Values.chain.name`
  label:
  # -- Kubernetes Configmap from which to load the genesis.blob and waypoint.txt
  genesisConfigmap:
  # -- Kubernetes Secret from which to load the genesis.blob and waypoint.txt
  genesisSecret:

# -- For each supported chain, specify the URLs from which to download the genesis.blob and waypoint.txt
aptos_chains:
  devnet:
    waypoint_txt_url: https://devnet.aptoslabs.com/waypoint.txt
    genesis_blob_url: https://devnet.aptoslabs.com/genesis.blob
  testnet:
    waypoint_txt_url: https://raw.githubusercontent.com/aptos-labs/aptos-networks/main/testnet/genesis_waypoint.txt
    genesis_blob_url: https://raw.githubusercontent.com/aptos-labs/aptos-networks/main/testnet/genesis.blob
  mainnet:
    waypoint_txt_url: https://raw.githubusercontent.com/aptos-labs/aptos-networks/main/mainnet/waypoint.txt
    genesis_blob_url: https://raw.githubusercontent.com/aptos-labs/aptos-networks/main/mainnet/genesis.blob

fullnode:
  # -- Fullnode configuration. See NodeConfig https://github.com/aptos-labs/aptos-core/blob/main/config/src/config/mod.rs
  config:
    full_node_networks:
      # The first item in the array `full_node_networks` must always refer to the public fullnode network
      - network_id: "public"
        identity: {}
        inbound_rate_limit_config:
        outbound_rate_limit_config:

# -- Log level for the fullnode
rust_log: info

image:
  # -- Image repo to use for fullnode images. Fullnodes and validators use the same image
  repo: aptoslabs/validator
  # -- Image tag to use for fullnode images. If set, overrides `imageTag`
  tag:
  # -- Image pull policy to use for fullnode images
  pullPolicy: IfNotPresent

resources:
  limits:
    cpu: 30
    memory: 60Gi
  requests:
    cpu: 30
    memory: 60Gi

nodeSelector: {}
tolerations: []
affinity: {}

storage:
  # -- Kubernetes storage class to use for fullnode persistent storage
  class:
  # -- Size of fullnode persistent storage
  size: 1000Gi
  # -- The name of a VolumeSnapshot to restore from. In unset, the fullnode will start from scratch.
  snapshotRefForRestore:

service:
  # -- The Kubernetes ServiceType to use for the fullnode. Change this to LoadBalancer expose the REST API, aptosnet endpoint externally
  type: ClusterIP
  # -- Whether to expose the node REST API
  exposeApi: true
  # -- Whether to expose the metrics port on fullnodes
  exposeMetrics: false
  # -- Whether to expose the admin port on fullnodes
  exposeAdmin: false
  # -- The externalTrafficPolicy for the fullnode service
  externalTrafficPolicy:
  # -- If set and if the ServiceType is LoadBalancer, allow traffic to fullnode from these CIDRs
  loadBalancerSourceRanges: []
  annotations: {}

ingress:
  # -- Change enabled to true and fill out the rest of the fields to expose the REST API externally via your ingress controller
  enabled: false
  # -- The hostname to use for the ingress
  hostName:
  # -- The ingress class for fullnode ingress. Leaving class empty will result in an ingress that implicity uses the default ingress class
  ingressClassName:
  annotations: {}

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name:
  annotations: {}

logging:
  # -- Address for remote logging
  address:

metrics:
  # -- The upstream sink for metrics. Supported values are "dev" and "prod"
  destination: dev

backup:
  image:
    # -- Image repo to use for backup images
    repo: aptoslabs/tools
    # -- Image tag to use for backup images
    tag:
    # -- Image pull policy to use for backup images
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 8
      memory: 8Gi
    requests:
      cpu: 4
      memory: 8Gi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  # -- Whether to enable backup
  enable: false
  config:
    # -- Which of the below backup configurations to use
    location:
    s3:
      bucket:
    gcs:
      bucket:
    azure:
      account:
      container:
      sas:
    # -- State snapshot interval epochs
    state_snapshot_interval_epochs: 2
    # -- Transaction batch size
    transaction_batch_size: 1000000
    # -- Number of concurrent requests to the PFN backup port
    concurrent_data_requests:

backup_verify:
  # -- The schedule for backup verification
  schedule: "@daily"
  resources:
    limits:
      cpu: 8
      memory: 16Gi
    requests:
      cpu: 8
      memory: 16Gi
  nodeSelector: {}
  tolerations: []
  affinity: {}

backup_compaction:
  # -- The schedule for backup compaction
  schedule: "@daily"
  resources:
    limits:
      cpu: 8
      memory: 32Gi
    requests:
      cpu: 4
      memory: 16Gi
  nodeSelector: {}
  tolerations: []
  affinity: {}

restore:
  image:
    # -- Image repo to use for restore images
    repo: aptoslabs/tools
    # -- Image tag to use for restore images
    tag:
    # -- Image pull policy to use for restore images
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 16
      memory: 120Gi
    requests:
      cpu: 16
      memory: 120Gi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  enabled: false
  config:
    # -- Which of the below backup configurations to use
    location:
    s3:
      bucket:
    gcs:
      bucket:
    azure:
      account:
      container:
      sas:
    # -- List of trusted waypoints for restore
    trusted_waypoints: []
    # -- Number of concurrent downloads for restore
    concurrent_downloads: 16
    # -- If set, specifies a different era to restore other than the default era set in chain.era
    restore_era:
    # -- Increase this value to trigger a restore from scratch, wiping the DB.
    restore_epoch: 0
    # -- Start from genesis.
    start_version: 0
    # -- Restore to the latest version.
    target_version:
