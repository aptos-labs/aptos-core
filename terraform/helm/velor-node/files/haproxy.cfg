# Config manual: https://www.haproxy.com/documentation/haproxy-configuration-manual/latest/
# Values: ./velor-core/terraform/helm/velor-node/values.yaml

## Global settings
global
    # Specify the stdout log format and size
    log stdout len 10240 format raw local0

    # Limit the maximum number of connections to 500 (this is ~5x the validator set size)
    maxconn 500

    # Limit the maximum number of connections per second to 300 (this is ~3x the validator set size)
    maxconnrate 300

    # Limit user privileges
    user {{ $.Values.haproxy.config.user }}

## Default settings
defaults
    # Enable logging of events and traffic
    log global

    # Set the default mode to TCP
    mode tcp
    log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq"

    # Don't log normal events
    # option dontlog-normal

    # Set timeouts for connections
    timeout client 60s
    timeout connect 10s
    timeout server 60s
    timeout queue 10s

    # Prevent long-running HTTP requests
    timeout http-request 60s
    timeout http-keep-alive 5s

## Specify the validator network frontend
frontend fe-{{ include "velor-validator.fullname" $ }}-validator
    bind :6180
    default_backend {{ include "velor-validator.fullname" $ }}-validator

    # Deny requests from blocked IPs
    tcp-request connection silent-drop if { src -n -f /usr/local/etc/haproxy/blocked.ips }

    # Create TCP request bandwidth limits of 25 MB/s (per TCP stream)
    filter bwlim-in incoming-limit default-limit 25m default-period 1s
    filter bwlim-out outgoing-limit default-limit 25m default-period 1s
    tcp-request content set-bandwidth-limit incoming-limit
    tcp-request content set-bandwidth-limit outgoing-limit

    # Create TCP request bandwidth limits of 50 MB/s (per source IP)
    filter bwlim-in incoming-src-limit key src table limit-by-src limit 50m
    filter bwlim-out outgoing-src-limit key src table limit-by-src limit 50m
    tcp-request content set-bandwidth-limit incoming-src-limit
    tcp-request content set-bandwidth-limit outgoing-src-limit

## Specify the validator network backend
backend {{ include "velor-validator.fullname" $ }}-validator
    server {{ include "velor-validator.fullname" $ }}-{{ $.Values.i }}-validator {{ include "velor-validator.fullname" $ }}-{{ $.Values.i }}-validator:6180

    # Create TCP response bandwidth limits of 25 MB/s (per TCP stream)
    filter bwlim-in incoming-limit default-limit 25m default-period 1s
    filter bwlim-out outgoing-limit default-limit 25m default-period 1s
    tcp-response content set-bandwidth-limit incoming-limit
    tcp-response content set-bandwidth-limit outgoing-limit

    # Create TCP response bandwidth limits of 50 MB/s (per source IP)
    filter bwlim-in incoming-src-limit key src table limit-by-src limit 50m
    filter bwlim-out outgoing-src-limit key src table limit-by-src limit 50m
    tcp-response content set-bandwidth-limit incoming-src-limit
    tcp-response content set-bandwidth-limit outgoing-src-limit

## Specify the source IP filter backend
backend limit-by-src
    stick-table type ip size 1m expire 300s store bytes_out_rate(1s),bytes_in_rate(1s)

## Specify the VFN network frontend
frontend fe-{{ include "velor-validator.fullname" $ }}-validator-fn
    bind :6181
    default_backend {{ include "velor-validator.fullname" $ }}-validator-fn

    # Deny requests from blocked IPs
    tcp-request connection silent-drop if { src -n -f /usr/local/etc/haproxy/blocked.ips }

## Specify the VFN network backend
backend {{ include "velor-validator.fullname" $ }}-validator-fn
    server {{ include "velor-validator.fullname" $ }}-{{ $.Values.i }}-validator {{ include "velor-validator.fullname" $ }}-{{ $.Values.i }}-validator:6181

## Specify the validator metrics frontend
frontend validator-metrics
    mode http
    option httplog
    bind :9102
    default_backend validator-metrics

    # Deny requests from blocked IPs
    tcp-request connection reject if { src -n -f /usr/local/etc/haproxy/blocked.ips }

    ## Add the forwarded header
    http-request add-header Forwarded "for=%ci"

## Specify the validator metrics backend
backend validator-metrics
    mode http
    server {{ include "velor-validator.fullname" $ }}-{{ $.Values.i }}-validator {{ include "velor-validator.fullname" $ }}-{{ $.Values.i }}-validator:9101

## Specify the validator admin frontend
frontend validator-admin
    mode http
    option httplog
    bind :9202
    default_backend validator-admin

    # Deny requests from blocked IPs
    tcp-request connection reject if { src -n -f /usr/local/etc/haproxy/blocked.ips }

    ## Add the forwarded header
    http-request add-header Forwarded "for=%ci"

## Specify the validator admin backend
backend validator-admin
    mode http
    server {{ include "velor-validator.fullname" $ }}-{{ $.Values.i }}-validator {{ include "velor-validator.fullname" $ }}-{{ $.Values.i }}-validator:9102

{{- if $.Values.service.validator.enableRestApi }}
## Specify the validator API frontend
frontend validator-api
    mode http
    option httplog
    bind :8180
    default_backend validator-api

    # Deny requests from blocked IPs
    tcp-request connection reject if { src -n -f /usr/local/etc/haproxy/blocked.ips }

    ## Add the forwarded header
    http-request add-header Forwarded "for=%ci"

## Specify the validator API backend
backend validator-api
    mode http
    server {{ include "velor-validator.fullname" $ }}-{{ $.Values.i }}-validator {{ include "velor-validator.fullname" $ }}-{{ $.Values.i }}-validator:8080
{{- end }}

{{- range $index, $config := $.Values.fullnode.groups }}
{{- if lt $.Values.i (int $.Values.numFullnodeGroups) }}

## Specify the PFN network frontend
frontend {{ $config.name }}-velornet
    bind :{{ add 6182 $index }}
    default_backend {{ $config.name }}-velornet

    # Deny requests from blocked IPs
    tcp-request connection reject if { src -n -f /usr/local/etc/haproxy/blocked.ips }

## Specify the PFN network backend
backend {{ $config.name }}-velornet
    default-server maxconn {{ $.Values.fullnode.config.max_inbound_connections }} {{ if $.Values.haproxy.config.send_proxy_protocol }}send-proxy-v2{{ end }}
    server {{ include "velor-validator.fullname" $ }}-{{ $.Values.i }}-{{ $config.name }} {{ include "velor-validator.fullname" $ }}-{{ $.Values.i }}-{{ $config.name }}:6182

## Specify the PFN REST API frontend
frontend {{ $config.name }}-api
    mode http
    option httplog
    bind :{{ add 8080 $index }}
    default_backend {{ $config.name }}-api

    # Deny requests from blocked IPs
    tcp-request connection reject if { src -n -f /usr/local/etc/haproxy/blocked.ips }

    # Add the forwarded header
    http-request add-header Forwarded "for=%ci"

## Specify the PFN REST API backend
backend {{ $config.name }}-api
    mode http
    server {{ include "velor-validator.fullname" $ }}-{{ $.Values.i }}-{{ $config.name }} {{ include "velor-validator.fullname" $ }}-{{ $.Values.i }}-{{ $config.name }}:8080

## Specify the PFN metrics frontend
frontend {{ $config.name }}-metrics
    mode http
    option httplog
    bind :{{ add 9103 $index }}
    default_backend {{ $config.name }}-metrics

    # Deny requests from blocked IPs
    tcp-request connection reject if { src -n -f /usr/local/etc/haproxy/blocked.ips }

    # Add the forwarded header
    http-request add-header Forwarded "for=%ci"

## Specify the PFN metrics backend
backend {{ $config.name }}-metrics
    mode http
    server {{ include "velor-validator.fullname" $ }}-{{ $.Values.i }}-{{ $config.name }} {{ include "velor-validator.fullname" $ }}-{{ $.Values.i }}-{{ $config.name }}:9101

## Specify the PFN admin frontend
frontend {{ $config.name }}-admin
    mode http
    option httplog
    bind :{{ add 9203 $index }}
    default_backend {{ $config.name }}-admin

    # Deny requests from blocked IPs
    tcp-request connection reject if { src -n -f /usr/local/etc/haproxy/blocked.ips }

    # Add the forwarded header
    http-request add-header Forwarded "for=%ci"

## Specify the PFN admin backend
backend {{ $config.name }}-admin
    mode http
    server {{ include "velor-validator.fullname" $ }}-{{ $.Values.i }}-{{ $config.name }} {{ include "velor-validator.fullname" $ }}-{{ $.Values.i }}-{{ $config.name }}:9102

{{- end }}
{{- end }}

## Specify the stats frontend
frontend stats
    mode http
    bind :9101
    http-request use-service prometheus-exporter if { path /metrics }
    stats enable
    stats uri /stats
    monitor-uri /healthy
