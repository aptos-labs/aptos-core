module 0xcafe.Pack {
    struct Foo has drop { x: u64, y: u64 }
    struct Bar has drop { x: u64, y: u64, z: Self.Foo }

    struct T1 has drop { x: u64 }
    struct T2 has drop { x: Self.T1 }
    struct T3 has drop { x: Self.T2 }
    struct T4 has drop { x: Self.T3 }
    struct T5 has drop { x: Self.T4 }
    struct T6 has drop { x: Self.T5 }
    struct T7 has drop { x: Self.T6 }
    struct T8 has drop { x: Self.T7 }
    struct T9 has drop { x: Self.T8 }
    struct T10 has drop { x: Self.T9 }
    struct T11 has drop { x: Self.T10 }
    struct T12 has drop { x: Self.T11 }
    struct T13 has drop { x: Self.T12 }
    struct T14 has drop { x: Self.T13 }
    struct T15 has drop { x: Self.T14 }
    struct T16 has drop { x: Self.T15 }
    struct T17 has drop { x: Self.T16 }
    struct T18 has drop { x: Self.T17 }
    struct T19 has drop { x: Self.T18 }
    struct T20 has drop { x: Self.T19 }
    struct T21 has drop { x: Self.T20 }
    struct T22 has drop { x: Self.T21 }
    struct T23 has drop { x: Self.T22 }
    struct T24 has drop { x: Self.T23 }
    struct T25 has drop { x: Self.T24 }
    struct T26 has drop { x: Self.T25 }
    struct T27 has drop { x: Self.T26 }
    struct T28 has drop { x: Self.T27 }
    struct T29 has drop { x: Self.T28 }
    struct T30 has drop { x: Self.T29 }
    struct T31 has drop { x: Self.T30 }

    public calibrate_pack_foo_impl(n: u64) {
        let i: u64;
    label entry:
        i = 0;
    label loop_start:
        jump_if_false (copy(i) < copy(n)) loop_end;
        i = move(i) + 1;

        _, _, _, _, _, _, _, _, _, _ = (Foo{x:0, y:0}, Foo{x:0, y:0}, Foo{x:0, y:0}, Foo{x:0, y:0}, Foo{x:0, y:0}, Foo{x:0, y:0}, Foo{x:0, y:0}, Foo{x:0, y:0}, Foo{x:0, y:0}, Foo{x:0, y:0});

        jump loop_start;
    label loop_end:
        return;
    }

    public entry calibrate_pack_foo_x100() {
    label b0:
        Self.calibrate_pack_foo_impl(10);
        return;       
    }

    public entry calibrate_pack_foo_x500() {
    label b0:
        Self.calibrate_pack_foo_impl(50);
        return;       
    } 

    public entry calibrate_pack_foo_x1000() {
    label b0:
        Self.calibrate_pack_foo_impl(100);
        return;       
    } 

    public calibrate_pack_bar_impl(n: u64) {
        let i: u64;
    label entry:
        i = 0;
    label loop_start:
        jump_if_false (copy(i) < copy(n)) loop_end;
        i = move(i) + 1;

        _, _, _, _, _, _, _, _, _, _ = (Bar{x:0, y:0, z:Foo{x:0, y:0}}, Bar{x:0, y:0, z:Foo{x:0, y:0}}, Bar{x:0, y:0, z:Foo{x:0, y:0}}, Bar{x:0, y:0, z:Foo{x:0, y:0}}, Bar{x:0, y:0, z:Foo{x:0, y:0}}, Bar{x:0, y:0, z:Foo{x:0, y:0}}, Bar{x:0, y:0, z:Foo{x:0, y:0}}, Bar{x:0, y:0, z:Foo{x:0, y:0}}, Bar{x:0, y:0, z:Foo{x:0, y:0}}, Bar{x:0, y:0, z:Foo{x:0, y:0}});

        jump loop_start;
    label loop_end:
        return;
    }

    public entry calibrate_pack_bar_x100() {
    label b0:
        Self.calibrate_pack_bar_impl(10);
        return;       
    }

    public entry calibrate_pack_bar_x500() {
    label b0:
        Self.calibrate_pack_bar_impl(50);
        return;       
    } 

    public entry calibrate_pack_bar_x1000() {
    label b0:
        Self.calibrate_pack_bar_impl(100);
        return;       
    }     

    public calibrate_pack_t8_impl(n: u64) {
        let i: u64;
    label entry:
        i = 0;
    label loop_start:
        jump_if_false (copy(i) < copy(n)) loop_end;
        i = move(i) + 1;

        _ = T8{x:T7{x:T6{x:T5{x:T4{x:T3{x:T2{x:T1{x:0}}}}}}}};
        _ = T8{x:T7{x:T6{x:T5{x:T4{x:T3{x:T2{x:T1{x:0}}}}}}}};
        _ = T8{x:T7{x:T6{x:T5{x:T4{x:T3{x:T2{x:T1{x:0}}}}}}}};
        _ = T8{x:T7{x:T6{x:T5{x:T4{x:T3{x:T2{x:T1{x:0}}}}}}}};
        _ = T8{x:T7{x:T6{x:T5{x:T4{x:T3{x:T2{x:T1{x:0}}}}}}}};
        _ = T8{x:T7{x:T6{x:T5{x:T4{x:T3{x:T2{x:T1{x:0}}}}}}}};
        _ = T8{x:T7{x:T6{x:T5{x:T4{x:T3{x:T2{x:T1{x:0}}}}}}}};
        _ = T8{x:T7{x:T6{x:T5{x:T4{x:T3{x:T2{x:T1{x:0}}}}}}}};
        _ = T8{x:T7{x:T6{x:T5{x:T4{x:T3{x:T2{x:T1{x:0}}}}}}}};
        _ = T8{x:T7{x:T6{x:T5{x:T4{x:T3{x:T2{x:T1{x:0}}}}}}}};        

        jump loop_start;
    label loop_end:
        return;
    }

    public entry calibrate_pack_t8_x100() {
    label b0:
        Self.calibrate_pack_t8_impl(10);
        return;       
    }

    public entry calibrate_pack_t8_x500() {
    label b0:
        Self.calibrate_pack_t8_impl(50);
        return;       
    } 

    public entry calibrate_pack_t8_x1000() {
    label b0:
        Self.calibrate_pack_t8_impl(100);
        return;       
    }

    public calibrate_pack_t32_impl(n: u64) {
        let i: u64;
    label entry:
        i = 0;
    label loop_start:
        jump_if_false (copy(i) < copy(n)) loop_end;
        i = move(i) + 1;

        _ = T31{x:T30{x:T29{x:T28{x:T27{x:T26{x:T25{x:T24{x:T23{x:T22{x:T21{x:T20{x:T19{x:T18{x:T17{x:T16{x:T15{x:T14{x:T13{x:T12{x:T11{x:T10{x:T9{x:T8{x:T7{x:T6{x:T5{x:T4{x:T3{x:T2{x:T1{x:0}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
        _ = T31{x:T30{x:T29{x:T28{x:T27{x:T26{x:T25{x:T24{x:T23{x:T22{x:T21{x:T20{x:T19{x:T18{x:T17{x:T16{x:T15{x:T14{x:T13{x:T12{x:T11{x:T10{x:T9{x:T8{x:T7{x:T6{x:T5{x:T4{x:T3{x:T2{x:T1{x:0}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
        _ = T31{x:T30{x:T29{x:T28{x:T27{x:T26{x:T25{x:T24{x:T23{x:T22{x:T21{x:T20{x:T19{x:T18{x:T17{x:T16{x:T15{x:T14{x:T13{x:T12{x:T11{x:T10{x:T9{x:T8{x:T7{x:T6{x:T5{x:T4{x:T3{x:T2{x:T1{x:0}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
        _ = T31{x:T30{x:T29{x:T28{x:T27{x:T26{x:T25{x:T24{x:T23{x:T22{x:T21{x:T20{x:T19{x:T18{x:T17{x:T16{x:T15{x:T14{x:T13{x:T12{x:T11{x:T10{x:T9{x:T8{x:T7{x:T6{x:T5{x:T4{x:T3{x:T2{x:T1{x:0}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
        _ = T31{x:T30{x:T29{x:T28{x:T27{x:T26{x:T25{x:T24{x:T23{x:T22{x:T21{x:T20{x:T19{x:T18{x:T17{x:T16{x:T15{x:T14{x:T13{x:T12{x:T11{x:T10{x:T9{x:T8{x:T7{x:T6{x:T5{x:T4{x:T3{x:T2{x:T1{x:0}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
        _ = T31{x:T30{x:T29{x:T28{x:T27{x:T26{x:T25{x:T24{x:T23{x:T22{x:T21{x:T20{x:T19{x:T18{x:T17{x:T16{x:T15{x:T14{x:T13{x:T12{x:T11{x:T10{x:T9{x:T8{x:T7{x:T6{x:T5{x:T4{x:T3{x:T2{x:T1{x:0}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
        _ = T31{x:T30{x:T29{x:T28{x:T27{x:T26{x:T25{x:T24{x:T23{x:T22{x:T21{x:T20{x:T19{x:T18{x:T17{x:T16{x:T15{x:T14{x:T13{x:T12{x:T11{x:T10{x:T9{x:T8{x:T7{x:T6{x:T5{x:T4{x:T3{x:T2{x:T1{x:0}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
        _ = T31{x:T30{x:T29{x:T28{x:T27{x:T26{x:T25{x:T24{x:T23{x:T22{x:T21{x:T20{x:T19{x:T18{x:T17{x:T16{x:T15{x:T14{x:T13{x:T12{x:T11{x:T10{x:T9{x:T8{x:T7{x:T6{x:T5{x:T4{x:T3{x:T2{x:T1{x:0}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
        _ = T31{x:T30{x:T29{x:T28{x:T27{x:T26{x:T25{x:T24{x:T23{x:T22{x:T21{x:T20{x:T19{x:T18{x:T17{x:T16{x:T15{x:T14{x:T13{x:T12{x:T11{x:T10{x:T9{x:T8{x:T7{x:T6{x:T5{x:T4{x:T3{x:T2{x:T1{x:0}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
        _ = T31{x:T30{x:T29{x:T28{x:T27{x:T26{x:T25{x:T24{x:T23{x:T22{x:T21{x:T20{x:T19{x:T18{x:T17{x:T16{x:T15{x:T14{x:T13{x:T12{x:T11{x:T10{x:T9{x:T8{x:T7{x:T6{x:T5{x:T4{x:T3{x:T2{x:T1{x:0}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};              

        jump loop_start;
    label loop_end:
        return;
    }

    public entry calibrate_pack_t32_x100() {
    label b0:
        Self.calibrate_pack_t32_impl(10);
        return;       
    }

    public entry calibrate_pack_t32_x500() {
    label b0:
        Self.calibrate_pack_t32_impl(50);
        return;       
    } 

    public entry calibrate_pack_t32_x1000() {
    label b0:
        Self.calibrate_pack_t32_impl(100);
        return;       
    }         
}