module 0xcafe.FreezeRef {

    public calibrate_freeze_ref_impl(n: u64) {
        let i: u64;
        let a: u64;
    label entry:
        i = 0;
        a = 5;
    label loop_start:
        jump_if_false (copy(i) < copy(n)) loop_end;
        i = move(i) + 1;

        _ = freeze(&mut a);
        _ = freeze(&mut a);
        _ = freeze(&mut a);
        _ = freeze(&mut a);
        _ = freeze(&mut a);
        _ = freeze(&mut a);
        _ = freeze(&mut a);
        _ = freeze(&mut a);
        _ = freeze(&mut a);
        _ = freeze(&mut a);

        jump loop_start;
    label loop_end:
        return;
    }

    public entry calibrate_freeze_ref_x100() {
    label b0:
        Self.calibrate_freeze_ref_impl(10);
        return;       
    }

    public entry calibrate_freeze_ref_x500() {
    label b0:
        Self.calibrate_freeze_ref_impl(50);
        return;       
    } 

    public entry calibrate_freeze_ref_x1000() {
    label b0:
        Self.calibrate_freeze_ref_impl(100);
        return;       
    }                
}    