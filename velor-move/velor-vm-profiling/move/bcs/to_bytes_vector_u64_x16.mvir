module 0x1.M {
    import 0x1.bcs;

    run() {
        let i: u64;
        let x: vector<u64>;

    label entry:
        x = vec_pack_0<u64>();
        i = 0;
    label loop1_start:
        jump_if_false (copy(i) < 16) loop1_end;

        vec_push_back<u64>(&mut x, 100);

        i = move(i) + 1;
        jump loop1_start;
    label loop1_end:

        i = 0;
    label loop2_start:
        jump_if_false (copy(i) < 1000) loop2_end;

        _ = bcs.to_bytes<vector<u64>>(&x);

        i = move(i) + 1;
        jump loop2_start;
    label loop2_end:
        return;
    }
}
