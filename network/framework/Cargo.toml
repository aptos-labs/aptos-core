[package]
name = "velor-network"
description = "Velor networking stack"
version = "0.1.0"

# Workspace inherited keys
authors = { workspace = true }
edition = { workspace = true }
homepage = { workspace = true }
license = { workspace = true }
publish = { workspace = true }
repository = { workspace = true }
rust-version = { workspace = true }

[dependencies]
anyhow = { workspace = true }
velor-bitvec = { workspace = true }
velor-channels = { workspace = true }
velor-compression = { workspace = true }
velor-config = { workspace = true }
velor-crypto = { workspace = true }
velor-id-generator = { workspace = true }
velor-infallible = { workspace = true }
velor-logger = { workspace = true }
velor-memsocket = { workspace = true, optional = true }
velor-metrics-core = { workspace = true }
velor-netcore = { workspace = true }
velor-num-variants = { workspace = true }
velor-peer-monitoring-service-types = { workspace = true }
velor-proptest-helpers = { workspace = true, optional = true }
velor-short-hex-str = { workspace = true }
velor-time-service = { workspace = true }
velor-types = { workspace = true }
arc-swap = { workspace = true }
async-trait = { workspace = true }
bcs = { workspace = true }
bytes = { workspace = true }
futures = { workspace = true }
futures-util = { workspace = true }
hex = { workspace = true }
itertools = { workspace = true }
maplit = { workspace = true }
once_cell = { workspace = true }
ordered-float = { workspace = true }
pin-project = { workspace = true }
proptest = { workspace = true, optional = true }
proptest-derive = { workspace = true, optional = true }
rand = { workspace = true, features = ["small_rng"] }
# Note: we cannot rely on the workspace version of rand. So we use this workaround. See:
# https://github.com/velor-chain/velor-core/blob/main/state-sync/velor-data-client/Cargo.toml#L41.
# See also https://github.com/velor-chain/velor-core/issues/13031
rand_latest = { package = "rand", version = "0.8.5" }
serde = { workspace = true }
serde_bytes = { workspace = true }
serde_json = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true }
tokio-retry = { workspace = true }
tokio-stream = { workspace = true }
tokio-util = { workspace = true }

[dev-dependencies]
velor-bitvec = { workspace = true, features = ["fuzzing"] }
velor-config = { workspace = true, features = ["testing"] }
velor-memsocket = { workspace = true }
velor-netcore = { workspace = true, features = ["testing"] }
velor-proptest-helpers = { workspace = true }
velor-time-service = { workspace = true, features = ["testing"] }
velor-types = { workspace = true, features = ["fuzzing"] }
proptest = { workspace = true }
proptest-derive = { workspace = true }
rand_core = { workspace = true }

[features]
default = []
fuzzing = ["velor-bitvec/fuzzing", "velor-config/fuzzing", "velor-crypto/fuzzing", "velor-types/fuzzing", "velor-proptest-helpers", "velor-time-service/testing", "velor-types/fuzzing", "velor-memsocket/testing", "velor-netcore/fuzzing", "proptest", "proptest-derive"]
testing = ["velor-config/testing", "velor-time-service/testing", "velor-memsocket/testing", "velor-netcore/testing"]

[package.metadata.cargo-machete]
ignored = ["serde_bytes"]
