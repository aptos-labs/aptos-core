Running Move unit tests
[ PASS    ] 0x1::Module::other_module_aborts
[ PASS    ] 0x1::Module::tests_a
[ PASS    ] 0x1::Module::tests_aborts
[ PASS    ] 0x1::Module::tests_b
[ PASS    ] 0x1::Module::tests_c
[ FAIL    ] 0x1::Module::tests_d
0x1::Module::other_module_aborts
Output: Ok(Changes { accounts: {} })
0x1::Module::tests_a
Output: Ok(Changes { accounts: {} })
0x1::Module::tests_aborts
Output: Ok(Changes { accounts: {} })
0x1::Module::tests_b
Output: Ok(Changes { accounts: {0000000000000000000000000000000000000000000000000000000000000001: AccountChanges { modules: {}, resources: {StructTag { address: 0000000000000000000000000000000000000000000000000000000000000001, module: Identifier("Module"), name: Identifier("A"), type_args: [] }: New(b"\x05\0\0\0\0\0\0\0")} }, 0000000000000000000000000000000000000000000000000000000000000002: AccountChanges { modules: {}, resources: {StructTag { address: 0000000000000000000000000000000000000000000000000000000000000001, module: Identifier("Module"), name: Identifier("A"), type_args: [] }: New(b"\x05\0\0\0\0\0\0\0")} }} })
0x1::Module::tests_c
Output: Ok(Changes { accounts: {0000000000000000000000000000000000000000000000000000000000000001: AccountChanges { modules: {}, resources: {StructTag { address: 0000000000000000000000000000000000000000000000000000000000000001, module: Identifier("Module"), name: Identifier("A"), type_args: [] }: New(b"\x05\0\0\0\0\0\0\0")} }, 0000000000000000000000000000000000000000000000000000000000000002: AccountChanges { modules: {}, resources: {StructTag { address: 0000000000000000000000000000000000000000000000000000000000000001, module: Identifier("Module"), name: Identifier("A"), type_args: [] }: New(b"\x06\0\0\0\0\0\0\0")} }} })
0x1::Module::tests_d
Output: Ok(Changes { accounts: {0000000000000000000000000000000000000000000000000000000000000001: AccountChanges { modules: {}, resources: {StructTag { address: 0000000000000000000000000000000000000000000000000000000000000001, module: Identifier("Module"), name: Identifier("B"), type_args: [U64] }: New(b"\x05\0\0\0\0\0\0\0")} }, 0000000000000000000000000000000000000000000000000000000000000002: AccountChanges { modules: {}, resources: {StructTag { address: 0000000000000000000000000000000000000000000000000000000000000001, module: Identifier("Module"), name: Identifier("B"), type_args: [Bool] }: New(b"\x06\0\0\0\0\0\0\0"), StructTag { address: 0000000000000000000000000000000000000000000000000000000000000001, module: Identifier("Module"), name: Identifier("B"), type_args: [U64] }: New(b"\x05\0\0\0\0\0\0\0"), StructTag { address: 0000000000000000000000000000000000000000000000000000000000000001, module: Identifier("Module"), name: Identifier("B"), type_args: [Struct(StructTag { address: 0000000000000000000000000000000000000000000000000000000000000001, module: Identifier("Module"), name: Identifier("C"), type_args: [U64] })] }: New(b"\x05\0\0\0\0\0\0\0")} }} })

Test failures:

Failures in 0x1::Module:

┌── tests_d ──────
│ error[E11001]: test failure
│     ┌─ proposal_test.move:102:9
│     │
│  95 │     fun tests_d(a1: signer, a2: signer)
│     │         ------- In this function in 0x1::Module
│     ·
│ 102 │         assert!(d<u64>(@0x2, 6), 3);
│     │         ^^^^^^ Test was not expected to error, but it aborted with code 3 originating in the module 0000000000000000000000000000000000000000000000000000000000000001::Module rooted here
│ 
│ 
└──────────────────

Test result: FAILED. Total tests: 6; passed: 5; failed: 1
