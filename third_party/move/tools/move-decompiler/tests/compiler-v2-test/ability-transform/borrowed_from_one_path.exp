module 0x42::m {
    struct R has key {
        data: vector<u64>,
    }
    fun f(k: u8, d: &vector<u64>): u64 {
        let _t2;
        if (k == 0u8) _t2 = &borrow_global(0x1).data else _t2 = d;
        *0x1::vector::borrow<u64>(_t2, 0)
    }
}

--- unable to recompile the decompiled code:
exiting with context checking errors
error: cannot use `integer` with an operator which expects a value of type `address`
  ┌─ borrowed_from_one_path.move:7:44
  │
7 │         if (k == 0u8) _t2 = &borrow_global(0x1).data else _t2 = d;
  │                                            ^^^
