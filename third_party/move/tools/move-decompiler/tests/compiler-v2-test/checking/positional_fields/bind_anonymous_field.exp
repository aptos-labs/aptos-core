module 0x42::test {
    enum E1 {
        V1 {
            _0: S0,
        }
        V2 {
            _0: S1,
        }
    }
    struct S0 {
        _0: u8,
    }
    struct S1 {
        _0: bool,
        _1: S0,
    }
    fun match(x: E1) {
        let _t1 = &x;
        if (_t1 is V1) {
            &_t1._0;
            let E1::V1{_0: _t9} = x;
            let S0{_0: _t10} = _t9
        } else if (_t1 is V2) {
            &&_t1._0._1;
            let E1::V2{_0: _t17} = x;
            let S1{_0: _t18,_1: _t19} = _t17;
            let S0{_0: _t20} = _t19
        } else abort 14566554180833181697;
    }
    fun nested(x: S1) {
        let S1{_0: _t2,_1: _t3} = x;
        let S0{_0: _t4} = _t3;
    }
    fun simple(x: S0) {
        let S0{_0: _t2} = x;
    }
}

--- unable to recompile the decompiled code:
exiting with context checking errors
error: unexpected token
   ┌─ bind_anonymous_field.move:23:9
   │
23 │         } else if (_t1 is V2) {
   │         ^
   │         │
   │         Unexpected '}'
   │         Expected ';'
