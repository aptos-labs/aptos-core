module 0x42::objects {
    struct ReaderRef<phantom T: key> has store {
        addr: address,
    }
    public fun get_addr<T: key>(ref: &ReaderRef<T>): address {
        *&ref.addr
    }
}

module 0x42::token {
    use 0x42::objects;
    struct Token has key {
        val: u64,
    }
    public fun get_value(ref: &objects::ReaderRef<Token>): u64 {
        *&borrow_global(objects::get_addr<Token>(ref)).val
    }
}

--- unable to recompile the decompiled code:
exiting with context checking errors
error: unable to infer instantiation of type `&key + struct{val}` (consider providing type arguments or annotating the type)
   ┌─ resources_valid_noacquires.move:16:11
   │
16 │         *&borrow_global(objects::get_addr<Token>(ref)).val
   │           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
