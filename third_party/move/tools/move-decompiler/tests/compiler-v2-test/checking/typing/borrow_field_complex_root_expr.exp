module 0x8675309::M {
    struct S has drop {
        f: u64,
    }
    fun t0(cond: bool, s: &S, s_mut: &mut S) {
        let _t8;
        let _t7;
        let _t6;
        let _t5;
        let _t3;
        if (cond) _t3 = s else _t3 = s;
        &_t3.f;
        if (cond) _t5 = /*freeze*/s_mut else _t5 = s;
        &_t5.f;
        if (cond) _t6 = s else _t6 = /*freeze*/s_mut;
        &_t6.f;
        if (cond) _t7 = s_mut else _t7 = s_mut;
        &_t7.f;
        if (cond) _t8 = s_mut else _t8 = s_mut;
        &mut _t8.f;
        &(&S{f: 0}).f;
    }
}

--- unable to recompile the decompiled code:
exiting with context checking errors
error: cannot assign `&S` to left-hand side of type `&mut S` (mutability mismatch)
   ┌─ borrow_field_complex_root_expr.move:13:46
   │
13 │         if (cond) _t5 = /*freeze*/s_mut else _t5 = s;
   │                                              ^^^
