module 0x42::assign {
    struct T has drop {
        h: u64,
    }
    struct S has drop {
        f: u64,
        g: T,
    }
    fun assign_field(s: &mut S, f: u64) {
        &mut s.f = f;
    }
    fun assign_int(x: &mut u64) {
        *x = 42;
    }
    fun assign_pattern(s: S, f: u64, h: u64): u64 {
        let S{f: _t4,g: _t5} = s;
        let T{h: _t6} = _t5;
        _t4 + _t6
    }
    fun assign_struct(s: &mut S) {
        *s = S{f: 42,g: T{h: 42}};
    }
}

--- unable to recompile the decompiled code:
exiting with context checking errors
error: invalid assignment
   ┌─ assign.move:10:9
   │
10 │         &mut s.f = f;
   │         ^^^^^^^^ Invalid assignment syntax. Expected: a local, a field write, or a deconstructing assignment
