module 0x42::globals {
    struct R has store, key {
        f: u64,
    }
    fun check(a: address): bool {
        exists(a)
    }
    fun publish(s: &signer) {
        move_to(R{f: 1}, s);
    }
    fun read(a: address): u64 {
        *&borrow_global(a).f
    }
    fun write(a: address): u64 {
        &mut borrow_global_mut(a).f = 2;
        9
    }
}

--- unable to recompile the decompiled code:
exiting with context checking errors
error: invalid assignment
   ┌─ globals.move:15:9
   │
15 │         &mut borrow_global_mut(a).f = 2;
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Invalid assignment syntax. Expected: a local, a field write, or a deconstructing assignment
