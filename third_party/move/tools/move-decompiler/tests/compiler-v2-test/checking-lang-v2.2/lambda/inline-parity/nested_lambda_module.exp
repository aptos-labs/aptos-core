module 0x42::Test1 {
    public fun apply(f: |(u64, u64)|(u64), x: u64, y: u64): u64 {
        f(x, y)
    }
}

module 0x42::Test {
    use 0x42::Test1;
    public fun test(): u64 {
        Test1::apply(|(arg0,arg1)| __lambda__1__test(arg0, arg1), 1, Test1::apply(|(arg0,arg1)| __lambda__2__test(arg0, arg1), 2, 1))
    }
    fun __lambda__1__test(x: u64, y: u64): u64 {
        x + y
    }
    fun __lambda__2__test(x: u64, y: u64): u64 {
        x * y
    }
}

--- unable to recompile the decompiled code:
exiting with context checking errors
error: unexpected token
   ┌─ nested_lambda_module.move:10:23
   │
10 │         Test1::apply(|(arg0,arg1)| __lambda__1__test(arg0, arg1), 1, Test1::apply(|(arg0,arg1)| __lambda__2__test(arg0, arg1), 2, 1))
   │                       ^
   │                       │
   │                       Unexpected '('
   │                       Expected a variable or struct or variant name
