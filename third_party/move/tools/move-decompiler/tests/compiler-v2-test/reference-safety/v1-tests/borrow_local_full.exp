module 0x8675309::M {
    struct S {
        f: u64,
        g: u64,
    }
    fun id<T>(r: &T): &T {
        r
    }
    fun id_mut<T>(r: &mut T): &mut T {
        r
    }
    fun t0() {
        let _t0 = 0;
        let _t1 = &mut _t0;
        *&mut _t0;
        *_t1;
        *id_mut<u64>(&mut _t0);
        *&mut _t0;
        let _t2 = &mut _t0;
        *_t2;
        *&_t0;
        *_t2;
        let _t3 = &_t0;
        *_t3;
        *&_t0;
        *_t3;
        _t3 = id<u64>(&_t0);
        *_t3;
        *&_t0;
        *_t3;
    }
}

--- unable to recompile the decompiled code:
exiting with stackless-bytecode checks failed
error: cannot copy local `_t0` which is still mutably borrowed
   ┌─ borrow_local_full.move:15:15
   │
14 │         let _t1 = &mut _t0;
   │                   -------- local `_t0` previously mutably borrowed here
15 │         *&mut _t0;
   │               ^^^ copy attempted here
16 │         *_t1;
   │         ---- conflicting reference `_t1` used here

error: cannot copy local `_t0` which is still mutably borrowed
   ┌─ borrow_local_full.move:21:11
   │
19 │         let _t2 = &mut _t0;
   │                   -------- local `_t0` previously mutably borrowed here
20 │         *_t2;
21 │         *&_t0;
   │           ^^^ copy attempted here
22 │         *_t2;
   │         ---- conflicting reference `_t2` used here
