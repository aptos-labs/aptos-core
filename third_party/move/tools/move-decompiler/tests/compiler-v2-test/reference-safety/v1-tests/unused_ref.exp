module 0x42::m {
    struct Txn {
        sender: address,
    }
    struct X {
    }
    fun borrow<K: copy + drop + store, V: store>(_x: &X, _k: K): &V {
        abort 0
    }
    fun add<K: copy + drop + store, V: store>(_x: &mut X, _k: K, _v: V) {
        abort 0
    }
    fun begin(sender: address): Txn {
        Txn{sender: sender}
    }
    fun borrow_wrong_type() {
        let _t1 = new(&mut begin(0x0));
        add<u64,u64>(&mut _t1, 0, 0);
        borrow<u64,u64>(/*freeze*/&mut _t1, 0);
        abort 42
    }
    fun new(_: &mut Txn): X {
        X{}
    }
}

--- unable to recompile the decompiled code:
exiting with context checking errors
error: cannot pass `integer` to a function which expects argument of type `address`
   ┌─ unused_ref.move:17:34
   │
17 │         let _t1 = new(&mut begin(0x0));
   │                                  ^^^
