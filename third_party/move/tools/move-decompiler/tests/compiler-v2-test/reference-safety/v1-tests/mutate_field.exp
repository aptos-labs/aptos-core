module 0x8675309::M {
    struct S has drop {
        f: u64,
        g: u64,
    }
    fun id<T>(r: &T): &T {
        r
    }
    fun id_mut<T>(r: &mut T): &mut T {
        r
    }
    fun t1(s: &mut S) {
        *&s.f;
        &mut s.g = 0;
        *s = S{f: 0,g: 0};
        *&mut s.f;
        &mut s.g = 0;
        *s = S{f: 0,g: 0};
        *id<u64>(&s.f);
        &mut s.g = 0;
        *s = S{f: 0,g: 0};
        *id_mut<u64>(&mut s.f);
        &mut s.g = 0;
        *s = S{f: 0,g: 0};
    }
}

--- unable to recompile the decompiled code:
exiting with context checking errors
error: invalid assignment
   ┌─ mutate_field.move:14:9
   │
14 │         &mut s.g = 0;
   │         ^^^^^^^^ Invalid assignment syntax. Expected: a local, a field write, or a deconstructing assignment

error: invalid assignment
   ┌─ mutate_field.move:17:9
   │
17 │         &mut s.g = 0;
   │         ^^^^^^^^ Invalid assignment syntax. Expected: a local, a field write, or a deconstructing assignment

error: invalid assignment
   ┌─ mutate_field.move:20:9
   │
20 │         &mut s.g = 0;
   │         ^^^^^^^^ Invalid assignment syntax. Expected: a local, a field write, or a deconstructing assignment

error: invalid assignment
   ┌─ mutate_field.move:23:9
   │
23 │         &mut s.g = 0;
   │         ^^^^^^^^ Invalid assignment syntax. Expected: a local, a field write, or a deconstructing assignment
