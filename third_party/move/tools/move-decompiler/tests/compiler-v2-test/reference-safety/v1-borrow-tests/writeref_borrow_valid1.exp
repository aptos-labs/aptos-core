module 0x8675309::M {
    struct G has copy, drop {
        v1: u64,
        v2: u64,
    }
    struct S has copy, drop {
        g1: G,
        g2: G,
    }
    fun t1(root: &mut S) {
        let _t2 = &mut &mut root.g1.v2;
        let _t1 = &mut root.g2;
        *_t1 = G{v1: 0,v2: 0};
        *_t2 = 0;
        &mut &mut root.g1.v1 = 1;
    }
}

--- unable to recompile the decompiled code:
exiting with context checking errors
error: invalid assignment
   ┌─ writeref_borrow_valid1.move:15:9
   │
15 │         &mut &mut root.g1.v1 = 1;
   │         ^^^^^^^^^^^^^^^^^^^^ Invalid assignment syntax. Expected: a local, a field write, or a deconstructing assignment
