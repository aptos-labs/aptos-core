processed 12 tasks
task 0 lines 3-12:  publish --print-bytecode [module 0x66::test_ok_i8]

== BEGIN Bytecode ==
// Bytecode version v8
module 0x66::test_ok_i8
// Function definition at index 0
public fun f(l0: i8): i8
    move_loc l0
    ld_i8 22
    add
    ld_i8 -45
    add
    // @5
    ret


== END Bytecode ==
task 1 lines 15-24:  publish --print-bytecode [module 0x66::test_some_err_i8]
Error: error: number 288888888888992922 out of range (max 127)
   ┌─ test:19:5
   │
19 │     ld_i8 288888888888992922
   │     ^^^^^^^^^^^^^^^^^^^^^^^^

error: number -2781274937452 out of range (min -128)
   ┌─ test:21:5
   │
21 │     ld_i8 -2781274937452
   │     ^^^^^^^^^^^^^^^^^^^^


task 2 lines 28-37:  publish --print-bytecode [module 0x66::test_ok_i16]

== BEGIN Bytecode ==
// Bytecode version v8
module 0x66::test_ok_i16
// Function definition at index 0
public fun f(l0: i16): i16
    move_loc l0
    ld_i16 22
    add
    ld_i16 -45
    add
    // @5
    ret


== END Bytecode ==
task 3 lines 40-49:  publish --print-bytecode [module 0x66::test_some_err_i16]
Error: error: number 288888888888992922 out of range (max 32767)
   ┌─ test:44:5
   │
44 │     ld_i16 288888888888992922
   │     ^^^^^^^^^^^^^^^^^^^^^^^^^

error: number -2781274937452 out of range (min -32768)
   ┌─ test:46:5
   │
46 │     ld_i16 -2781274937452
   │     ^^^^^^^^^^^^^^^^^^^^^


task 4 lines 53-62:  publish --print-bytecode [module 0x66::test_ok_i32]

== BEGIN Bytecode ==
// Bytecode version v8
module 0x66::test_ok_i32
// Function definition at index 0
public fun f(l0: i32): i32
    move_loc l0
    ld_i32 22
    add
    ld_i32 -45
    add
    // @5
    ret


== END Bytecode ==
task 5 lines 65-74:  publish --print-bytecode [module 0x66::test_some_err_i32]
Error: error: number 288888888888992922 out of range (max 2147483647)
   ┌─ test:69:5
   │
69 │     ld_i32 288888888888992922
   │     ^^^^^^^^^^^^^^^^^^^^^^^^^

error: number -2781274937452 out of range (min -2147483648)
   ┌─ test:71:5
   │
71 │     ld_i32 -2781274937452
   │     ^^^^^^^^^^^^^^^^^^^^^


task 6 lines 78-87:  publish --print-bytecode [module 0x66::test_ok_i64]

== BEGIN Bytecode ==
// Bytecode version v8
module 0x66::test_ok_i64
// Function definition at index 0
public fun f(l0: i64): i64
    move_loc l0
    ld_i64 22
    add
    ld_i64 -45
    add
    // @5
    ret


== END Bytecode ==
task 7 lines 90-99:  publish --print-bytecode [module 0x66::test_some_err_i64]

== BEGIN Bytecode ==
// Bytecode version v8
module 0x66::test_some_err_i64
// Function definition at index 0
public fun f(l0: i64): i64
    move_loc l0
    ld_i64 288888888888992922
    add
    ld_i64 -2781274937452
    add
    // @5
    ret


== END Bytecode ==
task 8 lines 103-112:  publish --print-bytecode [module 0x66::test_ok_i128]

== BEGIN Bytecode ==
// Bytecode version v8
module 0x66::test_ok_i128
// Function definition at index 0
public fun f(l0: i128): i128
    move_loc l0
    ld_i128 22
    add
    ld_i128 -45
    add
    // @5
    ret


== END Bytecode ==
task 9 lines 115-124:  publish --print-bytecode [module 0x66::test_some_err_i128]

== BEGIN Bytecode ==
// Bytecode version v8
module 0x66::test_some_err_i128
// Function definition at index 0
public fun f(l0: i128): i128
    move_loc l0
    ld_i128 288888888888992922
    add
    ld_i128 -2781274937452
    add
    // @5
    ret


== END Bytecode ==
task 10 lines 128-137:  publish --print-bytecode [module 0x66::test_ok_i256]

== BEGIN Bytecode ==
// Bytecode version v8
module 0x66::test_ok_i256
// Function definition at index 0
public fun f(l0: i256): i256
    move_loc l0
    ld_i256 22
    add
    ld_i256 -45
    add
    // @5
    ret


== END Bytecode ==
task 11 lines 140-149:  publish --print-bytecode [module 0x66::test_some_err_i256]

== BEGIN Bytecode ==
// Bytecode version v8
module 0x66::test_some_err_i256
// Function definition at index 0
public fun f(l0: i256): i256
    move_loc l0
    ld_i256 288888888888992922
    add
    ld_i256 -2781274937452
    add
    // @5
    ret


== END Bytecode ==
