
Diagnostics:
warning: [lint] This operation always evaluates to `0`.
   ┌─ tests/model_ast_lints/equal_operands_in_bin_op.move:18:13
   │
18 │         if (x % x == 2) {
   │             ^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(equal_operands_in_bin_op)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#equal_operands_in_bin_op.

warning: [lint] This operation always evaluates to `0`.
   ┌─ tests/model_ast_lints/equal_operands_in_bin_op.move:21:13
   │
21 │         if ((x+1) ^ (x+1) == 2) {
   │             ^^^^^^^^^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(equal_operands_in_bin_op)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#equal_operands_in_bin_op.

warning: [lint] This operation always evaluates to `true`.
   ┌─ tests/model_ast_lints/equal_operands_in_bin_op.move:24:13
   │
24 │         if (x <= x) {
   │             ^^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(equal_operands_in_bin_op)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#equal_operands_in_bin_op.

warning: [lint] This operation always evaluates to `true`.
   ┌─ tests/model_ast_lints/equal_operands_in_bin_op.move:27:13
   │
27 │         if (x >= x) {
   │             ^^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(equal_operands_in_bin_op)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#equal_operands_in_bin_op.

warning: [lint] This operation always evaluates to `true`.
   ┌─ tests/model_ast_lints/equal_operands_in_bin_op.move:30:13
   │
30 │         if (x == x) {
   │             ^^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(equal_operands_in_bin_op)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#equal_operands_in_bin_op.

warning: [lint] This operation always evaluates to the same value: `x | x` and `x & x` can be simplified to `x`.
   ┌─ tests/model_ast_lints/equal_operands_in_bin_op.move:33:13
   │
33 │         if (x | x == 2) {
   │             ^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(equal_operands_in_bin_op)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#equal_operands_in_bin_op.

warning: [lint] This operation always evaluates to the same value: `x | x` and `x & x` can be simplified to `x`.
   ┌─ tests/model_ast_lints/equal_operands_in_bin_op.move:36:13
   │
36 │         if (x & x == 2) {
   │             ^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(equal_operands_in_bin_op)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#equal_operands_in_bin_op.

warning: [lint] This operation always evaluates to `1`.
   ┌─ tests/model_ast_lints/equal_operands_in_bin_op.move:39:13
   │
39 │         if (x / x == 2) {
   │             ^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(equal_operands_in_bin_op)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#equal_operands_in_bin_op.

warning: [lint] This operation always evaluates to `true`.
   ┌─ tests/model_ast_lints/equal_operands_in_bin_op.move:43:13
   │
43 │         if (TWO == TWO) {
   │             ^^^^^^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(equal_operands_in_bin_op)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#equal_operands_in_bin_op.

warning: [lint] This operation always evaluates to `true`.
   ┌─ tests/model_ast_lints/equal_operands_in_bin_op.move:47:13
   │
47 │         if (TWO == 2) {
   │             ^^^^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(equal_operands_in_bin_op)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#equal_operands_in_bin_op.

warning: [lint] This operation always evaluates to `false`.
   ┌─ tests/model_ast_lints/equal_operands_in_bin_op.move:55:13
   │
55 │         if (hnc.n.n.i != hnc.n.n.i) {
   │             ^^^^^^^^^^^^^^^^^^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(equal_operands_in_bin_op)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#equal_operands_in_bin_op.

warning: [lint] This operation always evaluates to `false`.
   ┌─ tests/model_ast_lints/equal_operands_in_bin_op.move:59:13
   │
59 │         if (x < x) {
   │             ^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(equal_operands_in_bin_op)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#equal_operands_in_bin_op.

warning: [lint] This operation always evaluates to `false`.
   ┌─ tests/model_ast_lints/equal_operands_in_bin_op.move:63:13
   │
63 │         if (x > x) {
   │             ^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(equal_operands_in_bin_op)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#equal_operands_in_bin_op.

warning: [lint] This boolean expression can be simplified using idempotence (`a && a` is equivalent to `a`).
   ┌─ tests/model_ast_lints/equal_operands_in_bin_op.move:69:13
   │
69 │         if (b || b) { // This should trigger `simpler_boolean_expression` instead of `equal_operands_in_bin_op`
   │             ^^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(simpler_bool_expression)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#simpler_bool_expression.

warning: [lint] This boolean expression can be simplified using idempotence (`a && a` is equivalent to `a`).
   ┌─ tests/model_ast_lints/equal_operands_in_bin_op.move:73:13
   │
73 │         if (b && b) { // This should trigger `simpler_boolean_expression` instead of `equal_operands_in_bin_op`
   │             ^^^^^^
   │
   = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(simpler_bool_expression)]`.
   = For more information, see https://aptos.dev/en/build/smart-contracts/linter#simpler_bool_expression.
