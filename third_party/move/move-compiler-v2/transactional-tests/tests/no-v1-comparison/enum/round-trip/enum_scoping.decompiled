//**** Cross-compiled for `move` syntax from `tests/no-v1-comparison/enum/enum_scoping.move`

//# publish
module 0x42::m {
    struct Box has drop {
        x: u64,
    }
    enum Inner has drop {
        Inner1 {
            x: u64,
        }
        Inner2 {
            x: u64,
            y: u64,
        }
    }
    enum Outer has drop {
        None,
        One {
            i: Inner,
        }
        Two {
            i: Inner,
            b: Box,
        }
    }
    public fun check_scoping(p0: &Inner): u64 {
        if (p0 is Inner1) ();
        3
    }
    fun t1_check_scoping(): u64 {
        let _t2;
        let _t0 = Outer::One{i: Inner::Inner1{x: 43}};
        let _t1 = &_t0;
        if (_t1 is None) {
            let Outer::None{} = _t0;
            _t2 = 0
        } else if (_t1 is One) {
            let Outer::One{i: _t18} = _t0;
            let _t3 = _t18;
            _t2 = check_scoping(&_t3)
        } else if (_t1 is Two) {
            let Outer::Two{i: _t24, b: _t25} = _t0;
            _t2 = 3
        } else abort 14566554180833181697;
        _t2
    }
}


//# run 0x42::m::t1_check_scoping