//**** Cross-compiled for `move` syntax from `tests/no-v1-comparison/closures/bug_16198.move`

//# publish
module 0xc0ffee::m {
    struct Func has copy, drop {
        _0: ||(||(u64)) has copy + drop,
    }
    fun forty_two(): u64 {
        42
    }
    public fun test(p0: u64) {
        let _t3: ||(||(u64) has drop) has copy + drop = || lambda__2__test(p0);
        let _t4 = _t3();
        if (!(_t4() == 42)) abort 14566554180833181696;
        let _t1 = forty_two();
        let _t10: ||(||(u64) has drop) has copy + drop = || lambda__4__test(_t1);
        let _t11 = _t10();
        if (!(_t11() == 42)) abort 14566554180833181696;
        let _t16: ||(||(||(u64) has drop)) has copy + drop = || lambda__7__test(p0);
        let _t17 = _t16();
        let _t18 = _t17();
        if (!(_t18() == 42)) abort 14566554180833181696;
        let _t24: ||(||(||(||(u64) has drop))) has copy + drop = || lambda__12__test(p0, _t1);
        let _t25 = _t24();
        let _t26 = _t25();
        let _t27 = _t26();
        if (!(_t27() == 84)) abort 14566554180833181696;
        let _t33: ||(||(||(||(u64) has drop))) has copy + drop = || lambda__17__test(p0, _t1);
        let _t34 = _t33();
        let _t35 = _t34();
        let _t36 = _t35();
        if (!(_t36() == 84)) abort 14566554180833181696;
        let Func{_0: _t43} = Func{_0: || lambda__19__test(p0)};
        let _t44 = _t43();
        if (!(_t44() == 42)) abort 14566554180833181696;
    }
    fun lambda__2__test(p0: u64): ||(u64) has drop {
        || lambda__1__test(p0)
    }
    fun lambda__4__test(p0: u64): ||(u64) has drop {
        || lambda__3__test(p0)
    }
    fun lambda__7__test(p0: u64): ||(||(u64) has drop) {
        || lambda__6__test(p0)
    }
    fun lambda__12__test(p0: u64, p1: u64): ||(||(||(u64) has drop)) {
        let _t3: ||u64 has copy + drop = || lambda__8__test(p0);
        p0 = _t3();
        || lambda__11__test(p1, p0)
    }
    fun lambda__17__test(p0: u64, p1: u64): ||(||(||(u64) has drop)) {
        let _t3: ||u64 has copy + drop = || lambda__13__test(p1);
        p1 = _t3();
        || lambda__16__test(p0, p1)
    }
    fun lambda__19__test(p0: u64): ||(u64) {
        || lambda__18__test(p0)
    }
    fun lambda__1__test(p0: u64): u64 {
        p0
    }
    fun lambda__3__test(p0: u64): u64 {
        p0
    }
    fun lambda__5__test(p0: u64): u64 {
        p0
    }
    fun lambda__6__test(p0: u64): ||(u64) has drop {
        || lambda__5__test(p0)
    }
    fun lambda__8__test(p0: u64): u64 {
        p0
    }
    fun lambda__9__test(p0: u64, p1: u64): u64 {
        p1 + p0
    }
    fun lambda__10__test(p0: u64, p1: u64): ||(u64) has drop {
        || lambda__9__test(p0, p1)
    }
    fun lambda__11__test(p0: u64, p1: u64): ||(||(u64) has drop) {
        || lambda__10__test(p0, p1)
    }
    fun lambda__13__test(p0: u64): u64 {
        p0
    }
    fun lambda__14__test(p0: u64, p1: u64): u64 {
        p1 + p0
    }
    fun lambda__15__test(p0: u64, p1: u64): ||(u64) has drop {
        || lambda__14__test(p0, p1)
    }
    fun lambda__16__test(p0: u64, p1: u64): ||(||(u64) has drop) {
        || lambda__15__test(p0, p1)
    }
    fun lambda__18__test(p0: u64): u64 {
        p0
    }
}


//# run 0xc0ffee::m::test --args 42