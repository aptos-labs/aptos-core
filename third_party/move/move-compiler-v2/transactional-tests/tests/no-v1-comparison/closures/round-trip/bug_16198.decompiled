//**** Cross-compiled for `move` syntax from `tests/no-v1-comparison/closures/bug_16198.move`

//# publish
module 0xc0ffee::m {
    struct Func has copy, drop {
        _0: ||(||(u64)) has copy + drop,
    }
    fun forty_two(): u64 {
        42
    }
    public fun test(p0: u64) {
        let _v0: ||(||(u64) has drop) has copy + drop = || lambda__2__test(p0);
        let _v1 = _v0();
        assert!(_v1() == 42, 14566554180833181696);
        let _v2 = forty_two();
        let _v3: ||(||(u64) has drop) has copy + drop = || lambda__4__test(_v2);
        let _v4 = _v3();
        assert!(_v4() == 42, 14566554180833181696);
        let _v5: ||(||(||(u64) has drop)) has copy + drop = || lambda__7__test(p0);
        let _v6 = _v5();
        let _v7 = _v6();
        assert!(_v7() == 42, 14566554180833181696);
        let _v8: ||(||(||(||(u64) has drop))) has copy + drop = || lambda__12__test(p0, _v2);
        let _v9 = _v8();
        let _v10 = _v9();
        let _v11 = _v10();
        assert!(_v11() == 84, 14566554180833181696);
        let _v12: ||(||(||(||(u64) has drop))) has copy + drop = || lambda__17__test(p0, _v2);
        let _v13 = _v12();
        let _v14 = _v13();
        let _v15 = _v14();
        assert!(_v15() == 84, 14566554180833181696);
        let Func{_0: _v16} = Func{_0: || lambda__19__test(p0)};
        let _v17 = _v16();
        assert!(_v17() == 42, 14566554180833181696);
    }
    fun lambda__2__test(p0: u64): ||(u64) has drop {
        || lambda__1__test(p0)
    }
    fun lambda__4__test(p0: u64): ||(u64) has drop {
        || lambda__3__test(p0)
    }
    fun lambda__7__test(p0: u64): ||(||(u64) has drop) {
        || lambda__6__test(p0)
    }
    fun lambda__12__test(p0: u64, p1: u64): ||(||(||(u64) has drop)) {
        let _v0: ||u64 has copy + drop = || lambda__8__test(p0);
        p0 = _v0();
        || lambda__11__test(p1, p0)
    }
    fun lambda__17__test(p0: u64, p1: u64): ||(||(||(u64) has drop)) {
        let _v0: ||u64 has copy + drop = || lambda__13__test(p1);
        p1 = _v0();
        || lambda__16__test(p0, p1)
    }
    fun lambda__19__test(p0: u64): ||(u64) {
        || lambda__18__test(p0)
    }
    fun lambda__1__test(p0: u64): u64 {
        p0
    }
    fun lambda__3__test(p0: u64): u64 {
        p0
    }
    fun lambda__5__test(p0: u64): u64 {
        p0
    }
    fun lambda__6__test(p0: u64): ||(u64) has drop {
        || lambda__5__test(p0)
    }
    fun lambda__8__test(p0: u64): u64 {
        p0
    }
    fun lambda__9__test(p0: u64, p1: u64): u64 {
        p1 + p0
    }
    fun lambda__10__test(p0: u64, p1: u64): ||(u64) has drop {
        || lambda__9__test(p0, p1)
    }
    fun lambda__11__test(p0: u64, p1: u64): ||(||(u64) has drop) {
        || lambda__10__test(p0, p1)
    }
    fun lambda__13__test(p0: u64): u64 {
        p0
    }
    fun lambda__14__test(p0: u64, p1: u64): u64 {
        p1 + p0
    }
    fun lambda__15__test(p0: u64, p1: u64): ||(u64) has drop {
        || lambda__14__test(p0, p1)
    }
    fun lambda__16__test(p0: u64, p1: u64): ||(||(u64) has drop) {
        || lambda__15__test(p0, p1)
    }
    fun lambda__18__test(p0: u64): u64 {
        p0
    }
}


//# run 0xc0ffee::m::test --args 42