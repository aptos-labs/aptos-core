processed 2 tasks

task 0 'publish'. lines 1-21:



task 1 'run'. lines 23-23:
return values: true

>>> V2 Compiler {
== BEGIN Bytecode ==
// Move bytecode v8
module 42.test {


if_then(Arg0: bool, Arg1: u64, Arg2: u64): u64 /* def_idx: 0 */ {
L3:	loc0: u64
B0:
	0: MoveLoc[0](Arg0: bool)
	1: BrFalse(6)
B1:
	2: MoveLoc[1](Arg1: u64)
	3: StLoc[3](loc0: u64)
B2:
	4: MoveLoc[3](loc0: u64)
	5: Ret
B3:
	6: MoveLoc[2](Arg2: u64)
	7: StLoc[3](loc0: u64)
	8: Branch(4)
}
public run(): bool /* def_idx: 1 */ {
L0:	loc0: |u64,u64|u64
L1:	loc1: |bool,u64|u64
L2:	loc2: |u64|u64
L3:	loc3: |bool,u64|u64
B0:
	0: LdTrue
	1: PackClosure#1 if_then(bool, u64, u64): u64
	2: StLoc[0](loc0: |u64,u64|u64)
	3: LdU64(10)
	4: PackClosure#10 if_then(bool, u64, u64): u64
	5: StLoc[1](loc1: |bool,u64|u64)
	6: LdFalse
	7: LdU64(10)
	8: PackClosure#11 if_then(bool, u64, u64): u64
	9: StLoc[2](loc2: |u64|u64)
	10: LdU64(20)
	11: PackClosure#100 if_then(bool, u64, u64): u64
	12: StLoc[3](loc3: |bool,u64|u64)
	13: LdU64(3)
	14: LdU64(4)
	15: MoveLoc[0](loc0: |u64,u64|u64)
	16: CallClosure(|u64,u64|u64)
	17: LdU64(3)
	18: Eq
	19: BrFalse(48)
B1:
	20: LdTrue
	21: LdU64(22222)
	22: MoveLoc[1](loc1: |bool,u64|u64)
	23: CallClosure(|bool,u64|u64)
	24: LdU64(10)
	25: Eq
	26: BrFalse(46)
B2:
	27: LdU64(43)
	28: MoveLoc[2](loc2: |u64|u64)
	29: CallClosure(|u64|u64)
	30: LdU64(43)
	31: Eq
	32: BrFalse(44)
B3:
	33: LdFalse
	34: LdU64(23333)
	35: MoveLoc[3](loc3: |bool,u64|u64)
	36: CallClosure(|bool,u64|u64)
	37: LdU64(20)
	38: Eq
	39: BrFalse(42)
B4:
	40: LdTrue
	41: Ret
B5:
	42: LdU64(14566554180833181696)
	43: Abort
B6:
	44: LdU64(14566554180833181696)
	45: Abort
B7:
	46: LdU64(14566554180833181696)
	47: Abort
B8:
	48: LdU64(14566554180833181696)
	49: Abort
}
}
== END Bytecode ==
}
