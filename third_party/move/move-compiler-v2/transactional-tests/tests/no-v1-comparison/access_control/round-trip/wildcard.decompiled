//**** Cross-compiled for `move` syntax from `tests/no-v1-comparison/access_control/wildcard.move`

//# publish
module 0x42::test {
    struct R has drop, key {
        value: bool,
    }
    fun init(p0: &signer) {
        let _v0 = R{value: true};
        move_to<R>(p0, _v0);
    }
    fun fail1(): bool
        acquires R
        reads 0x43::*::*
    {
        *&borrow_global<R>(@0x1).value
    }
    fun fail2(): bool
        acquires R
        reads *(0x2)
    {
        *&borrow_global<R>(@0x1).value
    }
    fun ok1(): bool
        acquires R
        reads 0x42::*::*
    {
        *&borrow_global<R>(@0x1).value
    }
    fun ok2(): bool
        acquires R
        reads 0x42::test::*
    {
        *&borrow_global<R>(@0x1).value
    }
    fun ok3(): bool
        acquires R
        reads 0x42::test::*
    {
        *&borrow_global<R>(@0x1).value
    }
    fun ok4(): bool
        acquires R
        reads *(0x1)
    {
        *&borrow_global<R>(@0x1).value
    }
}


//# run --verbose --signers 0x1 -- 0x42::test::init

//# run --verbose -- 0x42::test::ok1

//# run --verbose -- 0x42::test::ok2

//# run --verbose -- 0x42::test::ok3

//# run --verbose -- 0x42::test::ok4

//# run --verbose -- 0x42::test::fail1

//# run --verbose -- 0x42::test::fail2