//**** Cross-compiled for `move` syntax from `tests/operator_eval/op_with_side_effect_31.move`

//# publish
module 0xc0ffee::m {
    struct S has drop {
        x: u64,
        y: u64,
        z: u64,
    }
    fun inc_x(p0: &mut S) {
        let _v0 = *&p0.x + 1;
        let _v1 = &mut p0.x;
        *_v1 = _v0;
    }
    fun inc_xx(p0: &mut S, p1: u64) {
        let _v0 = *&p0.x + p1;
        let _v1 = &mut p0.x;
        *_v1 = _v0;
    }
    public fun test1(): u64 {
        let _v0 = S{x: 1, y: 2, z: 3};
        let _v1 = *&(&_v0).x;
        inc_x(&mut _v0);
        let _v2 = *&(&_v0).x;
        let _v3 = _v1 + _v2;
        inc_x(&mut _v0);
        let _v4 = *&(&_v0).x;
        _v3 + _v4
    }
    public fun test2(): u64 {
        let _v0 = S{x: 1, y: 2, z: 3};
        let _v1 = *&(&_v0).x;
        inc_xx(&mut _v0, 3);
        let _v2 = *&(&_v0).x;
        let _v3 = _v1 + _v2;
        inc_xx(&mut _v0, 11);
        let _v4 = *&(&_v0).x;
        _v3 + _v4
    }
}


//# run 0xc0ffee::m::test1

//# run 0xc0ffee::m::test2