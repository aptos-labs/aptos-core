//**** Cross-compiled for `move` syntax from `tests/operator_eval/op_with_side_effect_21.move`

//# publish
module 0xc0ffee::m {
    fun inc(p0: &mut u64): u64 {
        *p0 = *p0 + 1;
        *p0
    }
    public fun test1(): u64 {
        let _t0 = 1;
        let _t3 = inc(&mut _t0);
        let _t5 = inc(&mut _t0);
        let _t7 = inc(&mut _t0);
        let _t9 = inc(&mut _t0);
        let _t10 = _t7 + _t9;
        let _t11 = _t3 + _t10;
        let _t13 = inc(&mut _t0);
        let _t15 = inc(&mut _t0);
        let _t17 = inc(&mut _t0);
        _t11 + _t17
    }
    public fun test2(): u64 {
        let _t0 = 1 + 1;
        let _t1 = _t0;
        let _t7 = inc(&mut _t1);
        let _t9 = inc(&mut _t0);
        let _t11 = inc(&mut _t0);
        let _t13 = inc(&mut _t0);
        let _t14 = _t11 + _t13;
        let _t15 = _t7 + _t14;
        let _t17 = inc(&mut _t0);
        let _t19 = inc(&mut _t0);
        let _t21 = inc(&mut _t0);
        _t15 + _t21
    }
}


//# run 0xc0ffee::m::test1

//# run 0xc0ffee::m::test2