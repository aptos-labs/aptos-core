processed 3 tasks

task 0 'publish'. lines 1-17:
Error: compilation errors:
 error: A sequence within an operand of binary operation `+` can obscure program logic and is not allowed by this compiler.
  ┌─ TEMPFILE:9:9
  │
9 │         inc(&mut x) + { inc(&mut x); inc(&mut x) + inc(&mut x) } + { inc(&mut x); inc(&mut x); inc(&mut x) }
  │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  │         │             │
  │         │             non-empty sequence
  │         binary operation `+`
  │
  = To compile this code, either:
  = 1. upgrade to language version 2.0 or later (which uses strict left-to-right evaluation order),
  = 2. rewrite the code to remove sequences from directly within binary operations,
  =    e.g., save intermediate results providing explicit order.
  = In either of these cases, please ensure to check the code does what you expect it to, because of changed semantics.

error: A sequence within an operand of binary operation `+` can obscure program logic and is not allowed by this compiler.
  ┌─ TEMPFILE:9:9
  │
9 │         inc(&mut x) + { inc(&mut x); inc(&mut x) + inc(&mut x) } + { inc(&mut x); inc(&mut x); inc(&mut x) }
  │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  │         │                                                          │
  │         │                                                          non-empty sequence
  │         binary operation `+`
  │
  = To compile this code, either:
  = 1. upgrade to language version 2.0 or later (which uses strict left-to-right evaluation order),
  = 2. rewrite the code to remove sequences from directly within binary operations,
  =    e.g., save intermediate results providing explicit order.
  = In either of these cases, please ensure to check the code does what you expect it to, because of changed semantics.

error: A sequence within an operand of binary operation `+` can obscure program logic and is not allowed by this compiler.
   ┌─ TEMPFILE:13:9
   │
13 │         inc(&mut {x = x + 1; x}) + { inc(&mut x); inc(&mut x) + inc(&mut x) } + { inc(&mut x); inc(&mut x); inc(&mut x) }
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   │         │        │
   │         │        non-empty sequence
   │         binary operation `+`
   │
   = To compile this code, either:
   = 1. upgrade to language version 2.0 or later (which uses strict left-to-right evaluation order),
   = 2. rewrite the code to remove sequences from directly within binary operations,
   =    e.g., save intermediate results providing explicit order.
   = In either of these cases, please ensure to check the code does what you expect it to, because of changed semantics.

error: A sequence within an operand of binary operation `+` can obscure program logic and is not allowed by this compiler.
   ┌─ TEMPFILE:13:9
   │
13 │         inc(&mut {x = x + 1; x}) + { inc(&mut x); inc(&mut x) + inc(&mut x) } + { inc(&mut x); inc(&mut x); inc(&mut x) }
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   │         │                                                                       │
   │         │                                                                       non-empty sequence
   │         binary operation `+`
   │
   = To compile this code, either:
   = 1. upgrade to language version 2.0 or later (which uses strict left-to-right evaluation order),
   = 2. rewrite the code to remove sequences from directly within binary operations,
   =    e.g., save intermediate results providing explicit order.
   = In either of these cases, please ensure to check the code does what you expect it to, because of changed semantics.



task 1 'run'. lines 19-19:
Error: Function execution failed with VMError: {
    major_status: LINKER_ERROR,
    sub_status: None,
    location: undefined,
    indices: [],
    offsets: [],
}

task 2 'run'. lines 21-21:
Error: Function execution failed with VMError: {
    major_status: LINKER_ERROR,
    sub_status: None,
    location: undefined,
    indices: [],
    offsets: [],
}
