//**** Cross-compiled for `move` syntax from `tests/constants/empty_vectors.move`

//# publish
module 0x42::m {
    use 0x1::vector;
    public entry fun init() {
        let _v0;
        let _v1;
        let _v2 = vector::empty<u64>();
        let _v3 = vector::empty<vector<u8>>();
        vector::reverse<vector<u8>>(&mut _v3);
        while (!vector::is_empty<vector<u8>>(&_v3)) {
            let _v4 = vector::pop_back<vector<u8>>(&mut _v3);
            _v1 = &mut _v2;
            let _v5 = _v4;
            _v0 = vector::length<u8>(&_v5) + 2;
            vector::push_back<u64>(_v1, _v0);
            continue
        };
        let _v6 = vector::empty<u64>();
        let _v7 = vector::empty<u64>();
        vector::reverse<u64>(&mut _v7);
        while (!vector::is_empty<u64>(&_v7)) {
            let _v8 = vector::pop_back<u64>(&mut _v7);
            _v1 = &mut _v6;
            _v0 = _v8 + 3;
            vector::push_back<u64>(_v1, _v0);
            continue
        };
    }
}


//# run 0x42::m::init