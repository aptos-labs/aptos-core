//**** Cross-compiled for `move` syntax from `tests/constants/nonempty_tvectors.move`

//# publish
module 0x42::m {
    use 0x1::string;
    use 0x1::vector;
    use 0x1::bcs;
    public entry fun init() {
        let _v0;
        let _v1 = vector::empty<string::String>();
        let _v2 = vector[vector[3u8]];
        vector::reverse<vector<u8>>(&mut _v2);
        while (!vector::is_empty<vector<u8>>(&_v2)) {
            _v0 = vector::pop_back<vector<u8>>(&mut _v2);
            let _v3 = &mut _v1;
            let _v4 = string::utf8(_v0);
            vector::push_back<string::String>(_v3, _v4);
            continue
        };
        let _v5 = vector::empty<vector<u8>>();
        let _v6 = vector[3];
        vector::reverse<u64>(&mut _v6);
        while (!vector::is_empty<u64>(&_v6)) {
            let _v7 = vector::pop_back<u64>(&mut _v6);
            let _v8 = &mut _v5;
            let _v9 = _v7;
            _v0 = bcs::to_bytes<u64>(&_v9);
            vector::push_back<vector<u8>>(_v8, _v0);
            continue
        };
    }
}


//# run 0x42::m::init