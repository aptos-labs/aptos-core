//**** Cross-compiled for `move` syntax from `tests/constants/nonempty_tvectors.move`

//# publish
module 0x42::m {
    use 0x1::string;
    use 0x1::vector;
    use 0x1::bcs;
    public entry fun init() {
        let _t2;
        let _t0 = vector::empty<string::String>();
        let _t1 = vector[vector[3u8]];
        vector::reverse<vector<u8>>(&mut _t1);
        while (!vector::is_empty<vector<u8>>(&_t1)) {
            _t2 = vector::pop_back<vector<u8>>(&mut _t1);
            let _t15 = &mut _t0;
            let _t17 = string::utf8(_t2);
            vector::push_back<string::String>(_t15, _t17);
            continue
        };
        let _t3 = vector::empty<vector<u8>>();
        let _t4 = vector[3];
        vector::reverse<u64>(&mut _t4);
        while (!vector::is_empty<u64>(&_t4)) {
            let _t24 = vector::pop_back<u64>(&mut _t4);
            let _t5 = &mut _t3;
            let _t7 = _t24;
            _t2 = bcs::to_bytes<u64>(&_t7);
            vector::push_back<vector<u8>>(_t5, _t2);
            continue
        };
    }
}


//# run 0x42::m::init