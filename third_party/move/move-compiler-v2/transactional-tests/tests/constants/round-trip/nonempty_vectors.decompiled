//**** Cross-compiled for `move` syntax from `tests/constants/nonempty_vectors.move`

//# publish
module 0x42::m {
    use 0x1::vector;
    public entry fun init() {
        let _t5;
        let _t2;
        let _t0 = vector::empty<u64>();
        let _t1 = vector[vector[1u8]];
        vector::reverse<vector<u8>>(&mut _t1);
        while (!vector::is_empty<vector<u8>>(&_t1)) {
            let _t14 = vector::pop_back<vector<u8>>(&mut _t1);
            _t2 = &mut _t0;
            let _t4 = _t14;
            _t5 = vector::length<u8>(&_t4) + 2;
            vector::push_back<u64>(_t2, _t5);
            continue
        };
        let _t6 = vector::empty<u64>();
        let _t7 = vector[3];
        vector::reverse<u64>(&mut _t7);
        while (!vector::is_empty<u64>(&_t7)) {
            let _t28 = vector::pop_back<u64>(&mut _t7);
            _t2 = &mut _t6;
            _t5 = _t28 + 3;
            vector::push_back<u64>(_t2, _t5);
            continue
        };
    }
}


//# run 0x42::m::init