//**** Cross-compiled for `move` syntax from `tests/constants/empty_vectors2.move`

//# publish
module 0x42::m {
    use 0x1::vector;
    public entry fun init() {
        let _t6;
        let _t3;
        let _t0 = vector[vector[]];
        let _t14 = *vector::borrow<vector<vector<u8>>>(&_t0, 0);
        let _t1 = vector::empty<u64>();
        let _t2 = _t14;
        vector::reverse<vector<u8>>(&mut _t2);
        while (!vector::is_empty<vector<u8>>(&_t2)) {
            let _t20 = vector::pop_back<vector<u8>>(&mut _t2);
            _t3 = &mut _t1;
            let _t5 = _t20;
            _t6 = vector::length<u8>(&_t5) + 2;
            vector::push_back<u64>(_t3, _t6);
            continue
        };
        let _t7 = vector[vector[]];
        let _t32 = *vector::borrow<vector<u64>>(&_t7, 0);
        let _t8 = vector::empty<u64>();
        let _t9 = _t32;
        vector::reverse<u64>(&mut _t9);
        while (!vector::is_empty<u64>(&_t9)) {
            let _t38 = vector::pop_back<u64>(&mut _t9);
            _t3 = &mut _t8;
            _t6 = _t38 + 3;
            vector::push_back<u64>(_t3, _t6);
            continue
        };
    }
}


//# run 0x42::m::init