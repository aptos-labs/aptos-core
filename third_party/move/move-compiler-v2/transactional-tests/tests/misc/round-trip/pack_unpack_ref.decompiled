//**** Cross-compiled for `move` syntax from `tests/misc/pack_unpack_ref.move`

//# publish
module 0x42::pack_unpack_ref {
    struct G has drop {
        x1: u64,
        x2: u64,
        s: S,
    }
    struct S has drop {
        f: u64,
        g: u64,
    }
    fun unpack_ref_G() {
        let _t0 = S{f: 0, g: 1};
        let _t1 = G{x1: 2, x2: 3, s: _t0};
        let _t2 = &mut _t1;
        let _t3 = &mut _t2.x1;
        let _t4 = &mut _t2.x2;
        let _t5 = &mut _t2.s;
        let _t6 = &mut _t5.f;
        let _t7 = &mut _t5.g;
        if (!(*_t6 == 0)) abort 0;
        if (!(*_t7 == 1)) abort 1;
        if (!(*_t3 == 2)) abort 2;
        if (!(*_t4 == 3)) abort 3;
        *_t3 = *_t3 + 1;
        *_t4 = *_t4 + 1;
        *_t6 = *_t6 + 1;
        *_t7 = *_t7 + 1;
        if (!(*_t6 == 1)) abort 0;
        if (!(*_t7 == 2)) abort 1;
        if (!(*_t3 == 3)) abort 2;
        if (!(*_t4 == 4)) abort 3;
    }
}


//# run  0x42::pack_unpack_ref::unpack_ref_G