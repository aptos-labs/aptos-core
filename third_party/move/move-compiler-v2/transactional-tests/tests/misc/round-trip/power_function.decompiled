//**** Cross-compiled for `move` syntax from `tests/misc/power_function.move`

//# publish
module 0x42::power_function {
    public fun pow(p0: u64, p1: u64): u64 {
        let _v0;
        'l0: loop {
            if (!(p1 == 0)) {
                _v0 = p0;
                let _v1 = 1;
                loop {
                    if (!(_v1 < p1)) break 'l0;
                    _v0 = _v0 * p0;
                    _v1 = _v1 + 1
                }
            };
            return 1
        };
        _v0
    }
    public fun test_pow() {
        assert!(pow(2, 0) == 1, 0);
        assert!(pow(2, 1) == 2, 1);
        assert!(pow(2, 2) == 4, 2);
        assert!(pow(2, 3) == 8, 3);
        assert!(pow(3, 3) == 27, 4);
        assert!(pow(5, 4) == 625, 5);
    }
}


//# run 0x42::power_function::test_pow