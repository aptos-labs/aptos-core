//**** Cross-compiled for `move` syntax from `tests/misc/power_function.move`

//# publish
module 0x42::power_function {
    public fun pow(p0: u64, p1: u64): u64 {
        let _t2;
        'l0: loop {
            if (!(p1 == 0)) {
                _t2 = p0;
                let _t3 = 1;
                loop {
                    if (!(_t3 < p1)) break 'l0;
                    _t2 = _t2 * p0;
                    _t3 = _t3 + 1
                }
            };
            return 1
        };
        _t2
    }
    public fun test_pow() {
        if (!(pow(2, 0) == 1)) abort 0;
        if (!(pow(2, 1) == 2)) abort 1;
        if (!(pow(2, 2) == 4)) abort 2;
        if (!(pow(2, 3) == 8)) abort 3;
        if (!(pow(3, 3) == 27)) abort 4;
        if (!(pow(5, 4) == 625)) abort 5;
    }
}


//# run 0x42::power_function::test_pow