//**** Cross-compiled for `move` syntax from `tests/misc/borrowed_from_one_path.move`

//# publish
module 0x42::m {
    struct R has key {
        data: vector<u64>,
    }
    fun f(p0: u8, p1: &vector<u64>): u64
        acquires R
    {
        let _v0;
        if (p0 == 0u8) _v0 = &borrow_global<R>(@0x1).data else _v0 = p1;
        *0x1::vector::borrow<u64>(_v0, 0)
    }
    fun g(p0: u8, p1: &mut vector<u64>)
        acquires R
    {
        let _v0;
        if (p0 == 0u8) _v0 = &mut borrow_global_mut<R>(@0x1).data else _v0 = p1;
        let _v1 = 0x1::vector::borrow_mut<u64>(_v0, 0);
        *_v1 = 1;
    }
}
