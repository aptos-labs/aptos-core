//**** Cross-compiled for `move` syntax from `tests/misc/nested_mutate.move`

//# publish
module 0xc0ffee::m {
    struct T has copy, drop {
        y: u64,
    }
    struct S has copy, drop {
        x: T,
    }
    fun foo(p0: S, p1: S): S {
        let _v0 = *&(&(&p1).x).y;
        let _v1 = &mut (&mut (&mut p0).x).y;
        *_v1 = _v0;
        let _v2 = *&(&(&p0).x).y;
        let _v3 = &mut _v2;
        *_v3 = 1;
        p0
    }
    public fun test() {
        let _v0 = S{x: T{y: 42}};
        let _v1 = S{x: T{y: 43}};
        let _v2 = foo(_v0, _v1);
        assert!(*&(&(&_v2).x).y == 43, 0);
    }
}


//# run 0xc0ffee::m::test