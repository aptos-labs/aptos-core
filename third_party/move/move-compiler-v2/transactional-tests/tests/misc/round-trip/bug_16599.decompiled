//**** Cross-compiled for `move` syntax from `tests/misc/bug_16599.move`

//# publish
module 0xcafe::m0 {
    enum E has copy, drop {
        E1,
    }
    struct S has copy, drop {
        x: bool,
    }
    fun f(p0: S) {
        let _t2 = E::E1{};
        if (!(&_t2 is E1)) abort 14566554180833181697;
        let E::E1{} = _t2;
        let _t13 = *&(&p0).x;
        let _t3 = true;
        let _t15 = &mut _t3;
        *_t15 = _t13;
        let _t4 = 0u8;
        let _t5 = &mut _t4;
        *_t5 = 123u8;
    }
    fun test() {
        f(S{x: true});
    }
}


//# run 0xCAFE::m0::test

//# publish
module 0xcafe::m1 {
    enum E has copy, drop {
        E1,
    }
    struct S has copy, drop {
        x: bool,
    }
    fun f(p0: S, p1: u64) {
        if (p1 == 10) abort 0;
        let _t12 = *&(&p0).x;
        let _t14 = &mut (&mut p0).x;
        *_t14 = _t12;
        let _t3 = 3u8;
        let _t4 = &mut _t3;
        *_t4 = 123u8;
    }
    fun test() {
        f(S{x: true}, 20);
    }
}


//# run 0xCAFE::m1::test