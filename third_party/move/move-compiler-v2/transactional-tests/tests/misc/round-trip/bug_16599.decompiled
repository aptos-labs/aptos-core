//**** Cross-compiled for `move` syntax from `tests/misc/bug_16599.move`

//# publish
module 0xcafe::m0 {
    enum E has copy, drop {
        E1,
    }
    struct S has copy, drop {
        x: bool,
    }
    fun f(p0: S) {
        let _v0 = E::E1{};
        assert!(&_v0 is E1, 14566554180833181697);
        let E::E1{} = _v0;
        let _v1 = *&(&p0).x;
        let _v2 = true;
        let _v3 = &mut _v2;
        *_v3 = _v1;
        let _v4 = 0u8;
        let _v5 = &mut _v4;
        *_v5 = 123u8;
    }
    fun test() {
        f(S{x: true});
    }
}


//# run 0xCAFE::m0::test

//# publish
module 0xcafe::m1 {
    enum E has copy, drop {
        E1,
    }
    struct S has copy, drop {
        x: bool,
    }
    fun f(p0: S, p1: u64) {
        if (p1 == 10) abort 0;
        let _v0 = *&(&p0).x;
        let _v1 = &mut (&mut p0).x;
        *_v1 = _v0;
        let _v2 = 3u8;
        let _v3 = &mut _v2;
        *_v3 = 123u8;
    }
    fun test() {
        f(S{x: true}, 20);
    }
}


//# run 0xCAFE::m1::test