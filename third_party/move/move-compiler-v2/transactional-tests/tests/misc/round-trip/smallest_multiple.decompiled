//**** Cross-compiled for `move` syntax from `tests/misc/smallest_multiple.move`

//# publish
module 0xc0ffee::smallest_multiple {
    public fun smallest_multiple(p0: u64): u64 {
        let _v0 = 1;
        let _v1 = 1;
        while (_v1 <= p0) {
            _v0 = lcm(_v0, _v1);
            _v1 = _v1 + 1
        };
        _v0
    }
    public fun lcm(p0: u64, p1: u64): u64 {
        let _v0 = p0 * p1;
        let _v1 = gcd(p0, p1);
        _v0 / _v1
    }
    public fun gcd(p0: u64, p1: u64): u64 {
        if (p1 == 0) return p0;
        let _v0 = p0 % p1;
        gcd(p1, _v0)
    }
    public fun test_smallest_multiple() {
        assert!(smallest_multiple(10) == 2520, 0);
        assert!(smallest_multiple(20) == 232792560, 1);
    }
}


//# run 0xc0ffee::smallest_multiple::test_smallest_multiple