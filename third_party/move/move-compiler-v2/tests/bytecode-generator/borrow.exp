
Diagnostics:
warning: Unused parameter `param`. Consider removing or prefixing with an underscore: `_param`
   ┌─ tests/bytecode-generator/borrow.move:12:15
   │
12 │     fun local(param: u64): u64 {
   │               ^^^^^

warning: Unused parameter `param`. Consider removing or prefixing with an underscore: `_param`
   ┌─ tests/bytecode-generator/borrow.move:29:19
   │
29 │     fun mut_local(param: u64): u64 {
   │                   ^^^^^

// -- Model dump before bytecode pipeline
module 0x42::borrow {
    struct S {
        f: u64,
    }
    private fun field(s: &S): u64 {
        {
          let r: &u64 = Borrow(Immutable)(select borrow::S.f<&S>(s));
          Deref(r)
        }
    }
    private fun local(param: u64): u64 {
        {
          let r: &u64 = Borrow(Immutable)(33);
          Deref(r)
        }
    }
    private fun param(param: u64): u64 {
        {
          let r: &u64 = Borrow(Immutable)(param);
          Deref(r)
        }
    }
    private fun mut_field(s: &mut S): u64 {
        {
          let r: &mut u64 = Borrow(Mutable)(select borrow::S.f<&mut S>(s));
          r = 22;
          Deref(r)
        }
    }
    private fun mut_local(param: u64): u64 {
        {
          let local: u64 = 33;
          {
            let r: &mut u64 = Borrow(Mutable)(local);
            r = 22;
            Deref(r)
          }
        }
    }
    private fun mut_param(param: u64): u64 {
        {
          let r: &mut u64 = Borrow(Mutable)(param);
          r = 22;
          Deref(r)
        }
    }
} // end 0x42::borrow

// -- Sourcified model before bytecode pipeline
module 0x42::borrow {
    struct S {
        f: u64,
    }
    fun field(s: &S): u64 {
        let r = &s.f;
        *r
    }
    fun local(param: u64): u64 {
        let r = &33;
        *r
    }
    fun param(param: u64): u64 {
        let r = &param;
        *r
    }
    fun mut_field(s: &mut S): u64 {
        let r = &mut s.f;
        *r = 22;
        *r
    }
    fun mut_local(param: u64): u64 {
        let local = 33;
        let r = &mut local;
        *r = 22;
        *r
    }
    fun mut_param(param: u64): u64 {
        let r = &mut param;
        *r = 22;
        *r
    }
}

============ initial bytecode ================

[variant baseline]
fun borrow::field($t0: &0x42::borrow::S): u64 {
     var $t1: u64
     var $t2: &u64
  0: $t2 := borrow_field<0x42::borrow::S>.f($t0)
  1: $t1 := read_ref($t2)
  2: return $t1
}


[variant baseline]
fun borrow::local($t0: u64): u64 {
     var $t1: u64
     var $t2: &u64
     var $t3: u64
  0: $t3 := 33
  1: $t2 := borrow_local($t3)
  2: $t1 := read_ref($t2)
  3: return $t1
}


[variant baseline]
fun borrow::param($t0: u64): u64 {
     var $t1: u64
     var $t2: &u64
  0: $t2 := borrow_local($t0)
  1: $t1 := read_ref($t2)
  2: return $t1
}


[variant baseline]
fun borrow::mut_field($t0: &mut 0x42::borrow::S): u64 {
     var $t1: u64
     var $t2: &mut u64
     var $t3: u64
  0: $t2 := borrow_field<0x42::borrow::S>.f($t0)
  1: $t3 := 22
  2: write_ref($t2, $t3)
  3: $t1 := read_ref($t2)
  4: return $t1
}


[variant baseline]
fun borrow::mut_local($t0: u64): u64 {
     var $t1: u64
     var $t2: u64
     var $t3: &mut u64
     var $t4: u64
  0: $t2 := 33
  1: $t3 := borrow_local($t2)
  2: $t4 := 22
  3: write_ref($t3, $t4)
  4: $t1 := read_ref($t3)
  5: return $t1
}


[variant baseline]
fun borrow::mut_param($t0: u64): u64 {
     var $t1: u64
     var $t2: &mut u64
     var $t3: u64
  0: $t2 := borrow_local($t0)
  1: $t3 := 22
  2: write_ref($t2, $t3)
  3: $t1 := read_ref($t2)
  4: return $t1
}


============ disassembled file-format ==================
// Move bytecode v7
module 42.borrow {
struct S {
	f: u64
}

field(Arg0: &S): u64 /* def_idx: 0 */ {
B0:
	0: MoveLoc[0](Arg0: &S)
	1: ImmBorrowField[0](S.f: u64)
	2: ReadRef
	3: Ret
}
local(Arg0: u64): u64 /* def_idx: 1 */ {
L1:	loc0: u64
B0:
	0: LdU64(33)
	1: StLoc[1](loc0: u64)
	2: ImmBorrowLoc[1](loc0: u64)
	3: ReadRef
	4: Ret
}
param(Arg0: u64): u64 /* def_idx: 2 */ {
B0:
	0: ImmBorrowLoc[0](Arg0: u64)
	1: ReadRef
	2: Ret
}
mut_field(Arg0: &mut S): u64 /* def_idx: 3 */ {
L1:	loc0: &mut u64
B0:
	0: MoveLoc[0](Arg0: &mut S)
	1: MutBorrowField[0](S.f: u64)
	2: StLoc[1](loc0: &mut u64)
	3: LdU64(22)
	4: CopyLoc[1](loc0: &mut u64)
	5: WriteRef
	6: MoveLoc[1](loc0: &mut u64)
	7: ReadRef
	8: Ret
}
mut_local(Arg0: u64): u64 /* def_idx: 4 */ {
L1:	loc0: u64
L2:	loc1: &mut u64
B0:
	0: LdU64(33)
	1: StLoc[1](loc0: u64)
	2: MutBorrowLoc[1](loc0: u64)
	3: StLoc[2](loc1: &mut u64)
	4: LdU64(22)
	5: CopyLoc[2](loc1: &mut u64)
	6: WriteRef
	7: MoveLoc[2](loc1: &mut u64)
	8: ReadRef
	9: Ret
}
mut_param(Arg0: u64): u64 /* def_idx: 5 */ {
L1:	loc0: &mut u64
B0:
	0: MutBorrowLoc[0](Arg0: u64)
	1: StLoc[1](loc0: &mut u64)
	2: LdU64(22)
	3: CopyLoc[1](loc0: &mut u64)
	4: WriteRef
	5: MoveLoc[1](loc0: &mut u64)
	6: ReadRef
	7: Ret
}
}
============ bytecode verification succeeded ========
