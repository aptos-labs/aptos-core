// -- Model dump before bytecode pipeline
module 0x815::m {
    enum Positional {
        A {
            0: u8,
        }
        B {
            0: u8,
        }
    }
    private fun test_common_access(): u8 {
        {
          let x: Positional = pack m::Positional::A(42);
          select_variants m::Positional.A.0|m::Positional.B.0<Positional>(x) = 19;
          20
        }
    }
} // end 0x815::m

// -- Sourcified model before bytecode pipeline
module 0x815::m {
    enum Positional has drop {
        A {
            0: u8,
        }
        B {
            0: u8,
        }
    }
    fun test_common_access(): u8 {
        let x = Positional::A(42u8);
        x.0 = 19u8;
        20u8
    }
}

============ initial bytecode ================

[variant baseline]
fun m::test_common_access(): u8 {
     var $t0: u8
     var $t1: 0x815::m::Positional
     var $t2: u8
     var $t3: u8
     var $t4: &mut u8
     var $t5: &mut 0x815::m::Positional
  0: $t2 := 42
  1: $t1 := pack_variant 0x815::m::Positional::A($t2)
  2: $t3 := 19
  3: $t5 := borrow_local($t1)
  4: $t4 := borrow_variant_field<0x815::m::Positional::A|B>.0($t5)
  5: write_ref($t4, $t3)
  6: $t0 := 20
  7: return $t0
}


============ bytecode verification succeeded ========
