
============ disassembled file-format ==================
// Move bytecode v8
module 42.m {
use 0000000000000000000000000000000000000000000000000000000000000001::vector;


struct E<Key> has copy, drop, store {
	key: Key
}
struct Option<Element> has copy, drop, store {
	vec: vector<Element>
}

public destroy_none<Element>(t: Option<Element>) /* def_idx: 0 */ {
B0:
	0: ImmBorrowLoc[0](t: Option<Element>)
	1: Call is_none<Element>(&Option<Element>): bool
	2: BrFalse(7)
B1:
	3: MoveLoc[0](t: Option<Element>)
	4: UnpackGeneric[0](Option<Element>)
	5: VecUnpack(2, 0)
	6: Ret
B2:
	7: LdU64(262144)
	8: Abort
}
public foo<Key: drop + store>(data: E<Key>, v: &mut Key) /* def_idx: 1 */ {
B0:
	0: MoveLoc[0](data: E<Key>)
	1: UnpackGeneric[1](E<Key>)
	2: PackGeneric[1](E<Key>)
	3: UnpackGeneric[1](E<Key>)
	4: MoveLoc[1](v: &mut Key)
	5: WriteRef
	6: Ret
}
public is_none<Element>(t: &Option<Element>): bool /* def_idx: 2 */ {
B0:
	0: MoveLoc[0](t: &Option<Element>)
	1: ImmBorrowFieldGeneric[0](Option.vec: vector<Element>)
	2: Call vector::is_empty<Element>(&vector<Element>): bool
	3: Ret
}
}
============ bytecode verification succeeded ========
