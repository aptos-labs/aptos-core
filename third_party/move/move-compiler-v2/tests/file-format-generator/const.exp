
Diagnostics:
warning: Unused local variable `const_true`. Consider removing or prefixing with an underscore: `_const_true`
  ┌─ tests/file-format-generator/const.move:3:13
  │
3 │         let const_true = u(true);
  │             ^^^^^^^^^^

warning: Unused local variable `const_false`. Consider removing or prefixing with an underscore: `_const_false`
  ┌─ tests/file-format-generator/const.move:4:13
  │
4 │         let const_false = u(false);
  │             ^^^^^^^^^^^

warning: Unused local variable `hex_u8`. Consider removing or prefixing with an underscore: `_hex_u8`
  ┌─ tests/file-format-generator/const.move:5:13
  │
5 │         let hex_u8: u8 = u(0x1);
  │             ^^^^^^

warning: Unused local variable `hex_u16`. Consider removing or prefixing with an underscore: `_hex_u16`
  ┌─ tests/file-format-generator/const.move:6:13
  │
6 │         let hex_u16: u16 = u(0x1BAE);
  │             ^^^^^^^

warning: Unused local variable `hex_u32`. Consider removing or prefixing with an underscore: `_hex_u32`
  ┌─ tests/file-format-generator/const.move:7:13
  │
7 │         let hex_u32: u32 = u(0xDEAD80);
  │             ^^^^^^^

warning: Unused local variable `hex_u64`. Consider removing or prefixing with an underscore: `_hex_u64`
  ┌─ tests/file-format-generator/const.move:8:13
  │
8 │         let hex_u64: u64 = u(0xCAFE);
  │             ^^^^^^^

warning: Unused local variable `hex_u128`. Consider removing or prefixing with an underscore: `_hex_u128`
  ┌─ tests/file-format-generator/const.move:9:13
  │
9 │         let hex_u128: u128 = u(0xDEADBEEF);
  │             ^^^^^^^^

warning: Unused local variable `hex_u256`. Consider removing or prefixing with an underscore: `_hex_u256`
   ┌─ tests/file-format-generator/const.move:10:13
   │
10 │         let hex_u256: u256 = u(0x1123_456A_BCDE_F);
   │             ^^^^^^^^

warning: Unused local variable `a`. Consider removing or prefixing with an underscore: `_a`
   ┌─ tests/file-format-generator/const.move:11:13
   │
11 │         let a = u(@0x42);
   │             ^

warning: Unused local variable `vec`. Consider removing or prefixing with an underscore: `_vec`
   ┌─ tests/file-format-generator/const.move:12:13
   │
12 │         let vec = u(vector[1, 2, 3]);
   │             ^^^

warning: Unused local variable `s`. Consider removing or prefixing with an underscore: `_s`
   ┌─ tests/file-format-generator/const.move:13:13
   │
13 │         let s = u(b"Hello!\n");
   │             ^


Diagnostics:
warning: Unused assignment to `const_true`. Consider removing or prefixing with an underscore: `_const_true`
  ┌─ tests/file-format-generator/const.move:3:26
  │
3 │         let const_true = u(true);
  │                          ^^^^^^^

warning: Unused assignment to `const_false`. Consider removing or prefixing with an underscore: `_const_false`
  ┌─ tests/file-format-generator/const.move:4:27
  │
4 │         let const_false = u(false);
  │                           ^^^^^^^^

warning: Unused assignment to `hex_u8`. Consider removing or prefixing with an underscore: `_hex_u8`
  ┌─ tests/file-format-generator/const.move:5:26
  │
5 │         let hex_u8: u8 = u(0x1);
  │                          ^^^^^^

warning: Unused assignment to `hex_u16`. Consider removing or prefixing with an underscore: `_hex_u16`
  ┌─ tests/file-format-generator/const.move:6:28
  │
6 │         let hex_u16: u16 = u(0x1BAE);
  │                            ^^^^^^^^^

warning: Unused assignment to `hex_u32`. Consider removing or prefixing with an underscore: `_hex_u32`
  ┌─ tests/file-format-generator/const.move:7:28
  │
7 │         let hex_u32: u32 = u(0xDEAD80);
  │                            ^^^^^^^^^^^

warning: Unused assignment to `hex_u64`. Consider removing or prefixing with an underscore: `_hex_u64`
  ┌─ tests/file-format-generator/const.move:8:28
  │
8 │         let hex_u64: u64 = u(0xCAFE);
  │                            ^^^^^^^^^

warning: Unused assignment to `hex_u128`. Consider removing or prefixing with an underscore: `_hex_u128`
  ┌─ tests/file-format-generator/const.move:9:30
  │
9 │         let hex_u128: u128 = u(0xDEADBEEF);
  │                              ^^^^^^^^^^^^^

warning: Unused assignment to `hex_u256`. Consider removing or prefixing with an underscore: `_hex_u256`
   ┌─ tests/file-format-generator/const.move:10:30
   │
10 │         let hex_u256: u256 = u(0x1123_456A_BCDE_F);
   │                              ^^^^^^^^^^^^^^^^^^^^^

warning: Unused assignment to `a`. Consider removing or prefixing with an underscore: `_a`
   ┌─ tests/file-format-generator/const.move:11:17
   │
11 │         let a = u(@0x42);
   │                 ^^^^^^^^

warning: Unused assignment to `vec`. Consider removing or prefixing with an underscore: `_vec`
   ┌─ tests/file-format-generator/const.move:12:19
   │
12 │         let vec = u(vector[1, 2, 3]);
   │                   ^^^^^^^^^^^^^^^^^^

warning: Unused assignment to `s`. Consider removing or prefixing with an underscore: `_s`
   ┌─ tests/file-format-generator/const.move:13:17
   │
13 │         let s = u(b"Hello!\n");
   │                 ^^^^^^^^^^^^^^


============ disassembled file-format ==================
// Move bytecode v7
module 42.constant {


test_constans() /* def_idx: 0 */ {
B0:
	0: LdTrue
	1: Call u<bool>(bool): bool
	2: LdFalse
	3: Call u<bool>(bool): bool
	4: LdU8(1)
	5: Call u<u8>(u8): u8
	6: LdU16(7086)
	7: Call u<u16>(u16): u16
	8: LdU32(14593408)
	9: Call u<u32>(u32): u32
	10: LdU64(51966)
	11: Call u<u64>(u64): u64
	12: LdU128(3735928559)
	13: Call u<u128>(u128): u128
	14: LdU256(301490978409967)
	15: Call u<u256>(u256): u256
	16: LdConst[0](Address: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 66])
	17: Call u<address>(address): address
	18: LdConst[1](Vector(U64): [3, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0])
	19: Call u<vector<u64>>(vector<u64>): vector<u64>
	20: LdConst[2](Vector(U8): [7, 72, 101, 108, 108, 111, 33, 10])
	21: Call u<vector<u8>>(vector<u8>): vector<u8>
	22: Pop
	23: Pop
	24: Pop
	25: Pop
	26: Pop
	27: Pop
	28: Pop
	29: Pop
	30: Pop
	31: Pop
	32: Pop
	33: Ret
}
u<Ty0>(Arg0: Ty0): Ty0 /* def_idx: 1 */ {
B0:
	0: MoveLoc[0](Arg0: Ty0)
	1: Ret
}
}
============ bytecode verification succeeded ========
