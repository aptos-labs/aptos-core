
============ disassembled file-format ==================
// Move bytecode v8
module 42.m {
use 0000000000000000000000000000000000000000000000000000000000000001::vector;


struct E<Ty0> has copy, drop, store {
	key: Ty0
}
struct Option<Ty0> has copy, drop, store {
	vec: vector<Ty0>
}

public destroy_none<Ty0>(Arg0: Option<Ty0>) /* def_idx: 0 */ {
B0:
	0: ImmBorrowLoc[0](Arg0: Option<Ty0>)
	1: Call is_none<Ty0>(&Option<Ty0>): bool
	2: BrFalse(7)
B1:
	3: MoveLoc[0](Arg0: Option<Ty0>)
	4: UnpackGeneric[0](Option<Ty0>)
	5: VecUnpack(2, 0)
	6: Ret
B2:
	7: LdU64(262144)
	8: Abort
}
public foo<Ty0: drop + store>(Arg0: E<Ty0>, Arg1: &mut Ty0) /* def_idx: 1 */ {
B0:
	0: MoveLoc[0](Arg0: E<Ty0>)
	1: UnpackGeneric[1](E<Ty0>)
	2: PackGeneric[1](E<Ty0>)
	3: UnpackGeneric[1](E<Ty0>)
	4: MoveLoc[1](Arg1: &mut Ty0)
	5: WriteRef
	6: Ret
}
public is_none<Ty0>(Arg0: &Option<Ty0>): bool /* def_idx: 2 */ {
B0:
	0: MoveLoc[0](Arg0: &Option<Ty0>)
	1: ImmBorrowFieldGeneric[0](Option.vec: vector<Ty0>)
	2: Call vector::is_empty<Ty0>(&vector<Ty0>): bool
	3: Ret
}
}
============ bytecode verification succeeded ========
