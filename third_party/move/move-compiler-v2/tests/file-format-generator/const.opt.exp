
Diagnostics:
warning: This assignment/binding to the left-hand-side variable `const_true` is unused. Consider removing this assignment/binding, or prefixing the left-hand-side variable with an underscore (e.g., `_const_true`), or renaming to `_`
  ┌─ tests/file-format-generator/const.move:3:26
  │
3 │         let const_true = u(true);
  │                          ^^^^^^^

warning: This assignment/binding to the left-hand-side variable `const_false` is unused. Consider removing this assignment/binding, or prefixing the left-hand-side variable with an underscore (e.g., `_const_false`), or renaming to `_`
  ┌─ tests/file-format-generator/const.move:4:27
  │
4 │         let const_false = u(false);
  │                           ^^^^^^^^

warning: This assignment/binding to the left-hand-side variable `hex_u8` is unused. Consider removing this assignment/binding, or prefixing the left-hand-side variable with an underscore (e.g., `_hex_u8`), or renaming to `_`
  ┌─ tests/file-format-generator/const.move:5:26
  │
5 │         let hex_u8: u8 = u(0x1);
  │                          ^^^^^^

warning: This assignment/binding to the left-hand-side variable `hex_u16` is unused. Consider removing this assignment/binding, or prefixing the left-hand-side variable with an underscore (e.g., `_hex_u16`), or renaming to `_`
  ┌─ tests/file-format-generator/const.move:6:28
  │
6 │         let hex_u16: u16 = u(0x1BAE);
  │                            ^^^^^^^^^

warning: This assignment/binding to the left-hand-side variable `hex_u32` is unused. Consider removing this assignment/binding, or prefixing the left-hand-side variable with an underscore (e.g., `_hex_u32`), or renaming to `_`
  ┌─ tests/file-format-generator/const.move:7:28
  │
7 │         let hex_u32: u32 = u(0xDEAD80);
  │                            ^^^^^^^^^^^

warning: This assignment/binding to the left-hand-side variable `hex_u64` is unused. Consider removing this assignment/binding, or prefixing the left-hand-side variable with an underscore (e.g., `_hex_u64`), or renaming to `_`
  ┌─ tests/file-format-generator/const.move:8:28
  │
8 │         let hex_u64: u64 = u(0xCAFE);
  │                            ^^^^^^^^^

warning: This assignment/binding to the left-hand-side variable `hex_u128` is unused. Consider removing this assignment/binding, or prefixing the left-hand-side variable with an underscore (e.g., `_hex_u128`), or renaming to `_`
  ┌─ tests/file-format-generator/const.move:9:30
  │
9 │         let hex_u128: u128 = u(0xDEADBEEF);
  │                              ^^^^^^^^^^^^^

warning: This assignment/binding to the left-hand-side variable `hex_u256` is unused. Consider removing this assignment/binding, or prefixing the left-hand-side variable with an underscore (e.g., `_hex_u256`), or renaming to `_`
   ┌─ tests/file-format-generator/const.move:10:30
   │
10 │         let hex_u256: u256 = u(0x1123_456A_BCDE_F);
   │                              ^^^^^^^^^^^^^^^^^^^^^

warning: This assignment/binding to the left-hand-side variable `a` is unused. Consider removing this assignment/binding, or prefixing the left-hand-side variable with an underscore (e.g., `_a`), or renaming to `_`
   ┌─ tests/file-format-generator/const.move:11:17
   │
11 │         let a = u(@0x42);
   │                 ^^^^^^^^

warning: This assignment/binding to the left-hand-side variable `vec` is unused. Consider removing this assignment/binding, or prefixing the left-hand-side variable with an underscore (e.g., `_vec`), or renaming to `_`
   ┌─ tests/file-format-generator/const.move:12:19
   │
12 │         let vec = u(vector[1, 2, 3]);
   │                   ^^^^^^^^^^^^^^^^^^

warning: This assignment/binding to the left-hand-side variable `s` is unused. Consider removing this assignment/binding, or prefixing the left-hand-side variable with an underscore (e.g., `_s`), or renaming to `_`
   ┌─ tests/file-format-generator/const.move:13:17
   │
13 │         let s = u(b"Hello!\n");
   │                 ^^^^^^^^^^^^^^


============ disassembled file-format ==================
// Move bytecode v8
module 42.constant {


test_constans() /* def_idx: 0 */ {
B0:
	0: LdTrue
	1: Call u<bool>(bool): bool
	2: Pop
	3: LdFalse
	4: Call u<bool>(bool): bool
	5: Pop
	6: LdU8(1)
	7: Call u<u8>(u8): u8
	8: Pop
	9: LdU16(7086)
	10: Call u<u16>(u16): u16
	11: Pop
	12: LdU32(14593408)
	13: Call u<u32>(u32): u32
	14: Pop
	15: LdU64(51966)
	16: Call u<u64>(u64): u64
	17: Pop
	18: LdU128(3735928559)
	19: Call u<u128>(u128): u128
	20: Pop
	21: LdU256(301490978409967)
	22: Call u<u256>(u256): u256
	23: Pop
	24: LdConst[0](Address: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 66])
	25: Call u<address>(address): address
	26: Pop
	27: LdConst[1](Vector(U64): [3, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0])
	28: Call u<vector<u64>>(vector<u64>): vector<u64>
	29: Pop
	30: LdConst[2](Vector(U8): [7, 72, 101, 108, 108, 111, 33, 10])
	31: Call u<vector<u8>>(vector<u8>): vector<u8>
	32: Pop
	33: Ret
}
u<T>(x: T): T /* def_idx: 1 */ {
B0:
	0: MoveLoc[0](x: T)
	1: Ret
}
}
============ bytecode verification succeeded ========
