// -- Model dump before first bytecode pipeline
module 0xc0ffee::m {
    struct Bug16195 {
        0: |()||()|u64 with copy + drop,
    }
    struct Bug16195_variant1 {
        0: |()||()|u64 with copy + drop,
    }
    struct Bug16195_variant2 {
        0: |()||()||()||()||()|u64 with copy + drop,
    }
    struct Bug16195_variant3 {
        0: ||()|||()|u64 with copy + drop,
    }
    struct Bug16195_variant4 {
        0: ||()|||()|u64 with copy + drop,
    }
    struct Bug16195_variant5 {
        0: |()||()|bool with copy + drop,
    }
    struct Bug16195_variant6 {
        0: |()||()||()||()||()|bool with copy + drop,
    }
    struct Bug16195_variant7 {
        0: |()||bool|bool with copy + drop,
    }
    struct Bug16195_variant8 {
        0: |bool||()|bool with copy + drop,
    }
    public fun test_bug16195(): u64 {
        {
          let f: Bug16195 = pack m::Bug16195(closure#0m::__lambda__2__test_bug16195());
          ((f)())()
        }
    }
    public fun test_bug16195_OR_mix1(a: bool): bool {
        {
          let f: Bug16195_variant5 = pack m::Bug16195_variant5(closure#0m::__lambda__2__test_bug16195_OR_mix1());
          Or(((f)())(), a)
        }
    }
    public fun test_bug16195_OR_mix2(a: bool,b: bool): bool {
        {
          let f: Bug16195_variant5 = pack m::Bug16195_variant5(closure#0m::__lambda__2__test_bug16195_OR_mix2());
          Or(Or(((f)())(), a), b)
        }
    }
    public fun test_bug16195_OR_mix3(a: bool): bool {
        {
          let f: Bug16195_variant6 = pack m::Bug16195_variant6(closure#0m::__lambda__5__test_bug16195_OR_mix3());
          Or((((((f)())())())())(), a)
        }
    }
    public fun test_bug16195_OR_mix4(a: bool,b: bool): bool {
        {
          let f: Bug16195_variant6 = pack m::Bug16195_variant6(closure#0m::__lambda__5__test_bug16195_OR_mix4());
          Or(Or((((((f)())())())())(), a), b)
        }
    }
    public fun test_bug16195_OR_mix5(a: bool): bool {
        {
          let f: Bug16195_variant7 = pack m::Bug16195_variant7(closure#1m::__lambda__2__test_bug16195_OR_mix5(a));
          Or(((f)())(true), a)
        }
    }
    public fun test_bug16195_OR_mix6(a: bool): bool {
        {
          let f: Bug16195_variant8 = pack m::Bug16195_variant8(closure#0m::__lambda__2__test_bug16195_OR_mix6());
          Or(((f)(true))(), a)
        }
    }
    public fun test_bug16195_variant1(): u64 {
        {
          let f: Bug16195_variant1 = pack m::Bug16195_variant1(closure#0m::__lambda__2__test_bug16195_variant1());
          ((f)())()
        }
    }
    public fun test_bug16195_variant2(): u64 {
        {
          let f: Bug16195_variant2 = pack m::Bug16195_variant2(closure#0m::__lambda__5__test_bug16195_variant2());
          (((((f)())())())())()
        }
    }
    public fun test_bug16195_variant3(): u64 {
        {
          let _arg: |()| = closure#0m::__lambda__1__test_bug16195_variant3();
          {
            let f: Bug16195_variant3 = pack m::Bug16195_variant3(closure#0m::__lambda__3__test_bug16195_variant3());
            ((f)(_arg))()
          }
        }
    }
    public fun test_bug16195_variant4(): u64 {
        {
          let _arg: |()| = closure#0m::__lambda__1__test_bug16195_variant4();
          {
            let f: Bug16195_variant4 = pack m::Bug16195_variant4(closure#0m::__lambda__3__test_bug16195_variant4());
            ((f)(_arg))()
          }
        }
    }
    public fun test_regular_OR_case1(a: u64,b: u64): bool {
        Or(Gt<u64>(a, 10), Gt<u64>(b, 20))
    }
    public fun test_regular_OR_case2(a: u64,b: u64,c: u64): bool {
        Or(Or(Gt<u64>(a, 10), Gt<u64>(b, 20)), Gt<u64>(c, 20))
    }
    private fun __lambda__1__test_bug16195(): u64 {
        42
    }
    private fun __lambda__2__test_bug16195(): |()|u64 {
        closure#0m::__lambda__1__test_bug16195()
    }
    private fun __lambda__1__test_bug16195_OR_mix1(): bool {
        true
    }
    private fun __lambda__2__test_bug16195_OR_mix1(): |()|bool {
        closure#0m::__lambda__1__test_bug16195_OR_mix1()
    }
    private fun __lambda__1__test_bug16195_OR_mix2(): bool {
        true
    }
    private fun __lambda__2__test_bug16195_OR_mix2(): |()|bool {
        closure#0m::__lambda__1__test_bug16195_OR_mix2()
    }
    private fun __lambda__1__test_bug16195_OR_mix3(): bool {
        true
    }
    private fun __lambda__2__test_bug16195_OR_mix3(): |()|bool {
        closure#0m::__lambda__1__test_bug16195_OR_mix3()
    }
    private fun __lambda__3__test_bug16195_OR_mix3(): |()||()|bool {
        closure#0m::__lambda__2__test_bug16195_OR_mix3()
    }
    private fun __lambda__4__test_bug16195_OR_mix3(): |()||()||()|bool {
        closure#0m::__lambda__3__test_bug16195_OR_mix3()
    }
    private fun __lambda__5__test_bug16195_OR_mix3(): |()||()||()||()|bool {
        closure#0m::__lambda__4__test_bug16195_OR_mix3()
    }
    private fun __lambda__1__test_bug16195_OR_mix4(): bool {
        true
    }
    private fun __lambda__2__test_bug16195_OR_mix4(): |()|bool {
        closure#0m::__lambda__1__test_bug16195_OR_mix4()
    }
    private fun __lambda__3__test_bug16195_OR_mix4(): |()||()|bool {
        closure#0m::__lambda__2__test_bug16195_OR_mix4()
    }
    private fun __lambda__4__test_bug16195_OR_mix4(): |()||()||()|bool {
        closure#0m::__lambda__3__test_bug16195_OR_mix4()
    }
    private fun __lambda__5__test_bug16195_OR_mix4(): |()||()||()||()|bool {
        closure#0m::__lambda__4__test_bug16195_OR_mix4()
    }
    private fun __lambda__1__test_bug16195_OR_mix5(a: bool,x: bool): bool {
        Or(x, a)
    }
    private fun __lambda__2__test_bug16195_OR_mix5(a: bool): |bool|bool {
        closure#1m::__lambda__1__test_bug16195_OR_mix5(a)
    }
    private fun __lambda__1__test_bug16195_OR_mix6(x: bool): bool {
        Or(x, true)
    }
    private fun __lambda__2__test_bug16195_OR_mix6(x: bool): |()|bool {
        closure#1m::__lambda__1__test_bug16195_OR_mix6(x)
    }
    private fun __lambda__1__test_bug16195_variant1(): u64 {
        42
    }
    private fun __lambda__2__test_bug16195_variant1(): |()|u64 {
        closure#0m::__lambda__1__test_bug16195_variant1()
    }
    private fun __lambda__1__test_bug16195_variant2(): u64 {
        42
    }
    private fun __lambda__2__test_bug16195_variant2(): |()|u64 {
        closure#0m::__lambda__1__test_bug16195_variant2()
    }
    private fun __lambda__3__test_bug16195_variant2(): |()||()|u64 {
        closure#0m::__lambda__2__test_bug16195_variant2()
    }
    private fun __lambda__4__test_bug16195_variant2(): |()||()||()|u64 {
        closure#0m::__lambda__3__test_bug16195_variant2()
    }
    private fun __lambda__5__test_bug16195_variant2(): |()||()||()||()|u64 {
        closure#0m::__lambda__4__test_bug16195_variant2()
    }
    private fun __lambda__1__test_bug16195_variant3() {
        Tuple()
    }
    private fun __lambda__2__test_bug16195_variant3(): u64 {
        42
    }
    private fun __lambda__3__test_bug16195_variant3(_arg: |()|): |()|u64 {
        closure#0m::__lambda__2__test_bug16195_variant3()
    }
    private fun __lambda__1__test_bug16195_variant4() {
        Tuple()
    }
    private fun __lambda__2__test_bug16195_variant4(): u64 {
        42
    }
    private fun __lambda__3__test_bug16195_variant4(_arg: |()|): |()|u64 {
        closure#0m::__lambda__2__test_bug16195_variant4()
    }
} // end 0xc0ffee::m

// -- Sourcified model before first bytecode pipeline
module 0xc0ffee::m {
    struct Bug16195 has copy, drop {
        0: |()||()|u64 with copy + drop,
    }
    struct Bug16195_variant1 has copy, drop {
        0: |()||()|u64 with copy + drop,
    }
    struct Bug16195_variant2 has copy, drop {
        0: |()||()||()||()||()|u64 with copy + drop,
    }
    struct Bug16195_variant3 has copy, drop {
        0: ||()|||()|u64 with copy + drop,
    }
    struct Bug16195_variant4 has copy, drop {
        0: ||()|||()|u64 with copy + drop,
    }
    struct Bug16195_variant5 has copy, drop {
        0: |()||()|bool with copy + drop,
    }
    struct Bug16195_variant6 has copy, drop {
        0: |()||()||()||()||()|bool with copy + drop,
    }
    struct Bug16195_variant7 has copy, drop {
        0: |()||bool|bool with copy + drop,
    }
    struct Bug16195_variant8 has copy, drop {
        0: |bool||()|bool with copy + drop,
    }
    public fun test_bug16195(): u64 {
        let f = Bug16195(|()| __lambda__2__test_bug16195());
        f()()
    }
    public fun test_bug16195_OR_mix1(a: bool): bool {
        let f = Bug16195_variant5(|()| __lambda__2__test_bug16195_OR_mix1());
        f()() || a
    }
    public fun test_bug16195_OR_mix2(a: bool, b: bool): bool {
        let f = Bug16195_variant5(|()| __lambda__2__test_bug16195_OR_mix2());
        f()() || a || b
    }
    public fun test_bug16195_OR_mix3(a: bool): bool {
        let f = Bug16195_variant6(|()| __lambda__5__test_bug16195_OR_mix3());
        f()()()()() || a
    }
    public fun test_bug16195_OR_mix4(a: bool, b: bool): bool {
        let f = Bug16195_variant6(|()| __lambda__5__test_bug16195_OR_mix4());
        f()()()()() || a || b
    }
    public fun test_bug16195_OR_mix5(a: bool): bool {
        let f = Bug16195_variant7(|()| __lambda__2__test_bug16195_OR_mix5(a));
        f()(true) || a
    }
    public fun test_bug16195_OR_mix6(a: bool): bool {
        let f = Bug16195_variant8(|arg0| __lambda__2__test_bug16195_OR_mix6(arg0));
        f(true)() || a
    }
    public fun test_bug16195_variant1(): u64 {
        let f = Bug16195_variant1(|()| __lambda__2__test_bug16195_variant1());
        f()()
    }
    public fun test_bug16195_variant2(): u64 {
        let f = Bug16195_variant2(|()| __lambda__5__test_bug16195_variant2());
        f()()()()()
    }
    public fun test_bug16195_variant3(): u64 {
        let _arg = |()| __lambda__1__test_bug16195_variant3();
        let f = Bug16195_variant3(|arg0| __lambda__3__test_bug16195_variant3(arg0));
        f(_arg)()
    }
    public fun test_bug16195_variant4(): u64 {
        let _arg = |()| __lambda__1__test_bug16195_variant4();
        let f = Bug16195_variant4(|arg0| __lambda__3__test_bug16195_variant4(arg0));
        f(_arg)()
    }
    public fun test_regular_OR_case1(a: u64, b: u64): bool {
        a > 10 || b > 20
    }
    public fun test_regular_OR_case2(a: u64, b: u64, c: u64): bool {
        a > 10 || b > 20 || c > 20
    }
    fun __lambda__1__test_bug16195(): u64 {
        42
    }
    fun __lambda__2__test_bug16195(): |()|u64 {
        |()| __lambda__1__test_bug16195()
    }
    fun __lambda__1__test_bug16195_OR_mix1(): bool {
        true
    }
    fun __lambda__2__test_bug16195_OR_mix1(): |()|bool {
        |()| __lambda__1__test_bug16195_OR_mix1()
    }
    fun __lambda__1__test_bug16195_OR_mix2(): bool {
        true
    }
    fun __lambda__2__test_bug16195_OR_mix2(): |()|bool {
        |()| __lambda__1__test_bug16195_OR_mix2()
    }
    fun __lambda__1__test_bug16195_OR_mix3(): bool {
        true
    }
    fun __lambda__2__test_bug16195_OR_mix3(): |()|bool {
        |()| __lambda__1__test_bug16195_OR_mix3()
    }
    fun __lambda__3__test_bug16195_OR_mix3(): |()||()|bool {
        |()| __lambda__2__test_bug16195_OR_mix3()
    }
    fun __lambda__4__test_bug16195_OR_mix3(): |()||()||()|bool {
        |()| __lambda__3__test_bug16195_OR_mix3()
    }
    fun __lambda__5__test_bug16195_OR_mix3(): |()||()||()||()|bool {
        |()| __lambda__4__test_bug16195_OR_mix3()
    }
    fun __lambda__1__test_bug16195_OR_mix4(): bool {
        true
    }
    fun __lambda__2__test_bug16195_OR_mix4(): |()|bool {
        |()| __lambda__1__test_bug16195_OR_mix4()
    }
    fun __lambda__3__test_bug16195_OR_mix4(): |()||()|bool {
        |()| __lambda__2__test_bug16195_OR_mix4()
    }
    fun __lambda__4__test_bug16195_OR_mix4(): |()||()||()|bool {
        |()| __lambda__3__test_bug16195_OR_mix4()
    }
    fun __lambda__5__test_bug16195_OR_mix4(): |()||()||()||()|bool {
        |()| __lambda__4__test_bug16195_OR_mix4()
    }
    fun __lambda__1__test_bug16195_OR_mix5(a: bool, x: bool): bool {
        x || a
    }
    fun __lambda__2__test_bug16195_OR_mix5(a: bool): |bool|bool {
        |arg0| __lambda__1__test_bug16195_OR_mix5(a, arg0)
    }
    fun __lambda__1__test_bug16195_OR_mix6(x: bool): bool {
        x || true
    }
    fun __lambda__2__test_bug16195_OR_mix6(x: bool): |()|bool {
        |()| __lambda__1__test_bug16195_OR_mix6(x)
    }
    fun __lambda__1__test_bug16195_variant1(): u64 {
        42
    }
    fun __lambda__2__test_bug16195_variant1(): |()|u64 {
        |()| __lambda__1__test_bug16195_variant1()
    }
    fun __lambda__1__test_bug16195_variant2(): u64 {
        42
    }
    fun __lambda__2__test_bug16195_variant2(): |()|u64 {
        |()| __lambda__1__test_bug16195_variant2()
    }
    fun __lambda__3__test_bug16195_variant2(): |()||()|u64 {
        |()| __lambda__2__test_bug16195_variant2()
    }
    fun __lambda__4__test_bug16195_variant2(): |()||()||()|u64 {
        |()| __lambda__3__test_bug16195_variant2()
    }
    fun __lambda__5__test_bug16195_variant2(): |()||()||()||()|u64 {
        |()| __lambda__4__test_bug16195_variant2()
    }
    fun __lambda__1__test_bug16195_variant3() {
    }
    fun __lambda__2__test_bug16195_variant3(): u64 {
        42
    }
    fun __lambda__3__test_bug16195_variant3(_arg: |()|): |()|u64 {
        |()| __lambda__2__test_bug16195_variant3()
    }
    fun __lambda__1__test_bug16195_variant4() {
    }
    fun __lambda__2__test_bug16195_variant4(): u64 {
        42
    }
    fun __lambda__3__test_bug16195_variant4(_arg: |()|): |()|u64 {
        |()| __lambda__2__test_bug16195_variant4()
    }
}
