// -- Model dump before bytecode pipeline
module 0x42::LambdaReturn {
    public fun inline_apply2(f: |u64|u64,b: u64): u64 {
        return (f)(b)
    }
    private fun test_lambda_symbol_param() {
        {
          let a: u64 = LambdaReturn::inline_apply2(closure#0LambdaReturn::__lambda__1__test_lambda_symbol_param(), 3);
          if Eq<u64>(a, 3) {
            Tuple()
          } else {
            Abort(0)
          };
          Tuple()
        }
    }
    private fun __lambda__1__test_lambda_symbol_param(x: u64): u64 {
        x
    }
} // end 0x42::LambdaReturn

// -- Sourcified model before bytecode pipeline
module 0x42::LambdaReturn {
    public fun inline_apply2(f: |u64|u64, b: u64): u64 {
        f(b)
    }
    fun test_lambda_symbol_param() {
        let a = inline_apply2(|arg0| __lambda__1__test_lambda_symbol_param(arg0), 3);
        if (a == 3) () else abort 0;
    }
    fun __lambda__1__test_lambda_symbol_param(x: u64): u64 {
        x
    }
}
