============ initial bytecode ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: u8
  0: $t2 := 42
  1: $t1 := borrow_local($t2)
  2: $t0 := read_ref($t1)
  3: return $t0
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: u8
     # live vars:
  0: $t2 := 42
     # live vars: $t2
  1: $t1 := borrow_local($t2)
     # live vars: $t1
  2: $t0 := read_ref($t1)
     # live vars: $t0
  3: return $t0
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: u8
     # live vars:
  0: $t2 := 42
     # live vars: $t2
  1: $t1 := borrow_local($t2)
     # live vars: $t1
  2: $t0 := read_ref($t1)
     # live vars: $t0
  3: return $t0
}

============ after ReferenceSafetyProcessor: ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: u8
     # live vars:
     # refs: []
     #
  0: $t2 := 42
     # live vars: $t2
     # refs: []
     #
  1: $t1 := borrow_local($t2)
     # live vars: $t1
     # refs: [$t1 => #1]
     # #1
     #   <no edges>
     # #root
     #   => #1 via [value] at line 4
     #
  2: $t0 := read_ref($t1)
     # live vars: $t0
     # refs: []
     #
  3: return $t0
}

============ after AbortAnalysisProcessor: ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: u8
     # abort state: {returns}
     # live vars:
     # refs: []
     #
  0: $t2 := 42
     # abort state: {returns}
     # live vars: $t2
     # refs: []
     #
  1: $t1 := borrow_local($t2)
     # abort state: {returns}
     # live vars: $t1
     # refs: [$t1 => #1]
     # #1
     #   <no edges>
     # #root
     #   => #1 via [value] at line 4
     #
  2: $t0 := read_ref($t1)
     # abort state: {returns}
     # live vars: $t0
     # refs: []
     #
  3: return $t0
}

============ after AbilityProcessor: ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: u8
  0: $t2 := 42
  1: $t1 := borrow_local($t2)
  2: $t0 := read_ref($t1)
  3: return $t0
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: u8
     # live vars:
  0: $t2 := 42
     # live vars: $t2
  1: $t1 := borrow_local($t2)
     # live vars: $t1
  2: $t0 := read_ref($t1)
     # live vars: $t0
  3: return $t0
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: u8
     # live vars:
  0: $t2 := 42
     # live vars: $t2
  1: $t1 := borrow_local($t2)
     # live vars: $t1
  2: $t0 := read_ref($t1)
     # live vars: $t0
  3: return $t0
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: u8
     # live vars:
  0: $t2 := 42
     # live vars: $t2
  1: $t1 := borrow_local($t2)
     # live vars: $t1
  2: $t0 := read_ref($t1)
     # live vars: $t0
  3: return $t0
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: u8
     # live vars:
  0: $t2 := 42
     # live vars: $t2
  1: $t1 := borrow_local($t2)
     # live vars: $t1
  2: $t0 := read_ref($t1)
     # live vars: $t0
  3: return $t0
}


============ disassembled file-format ==================
// Move bytecode v7
module 42.explicate_drop {


test0(): u8 /* def_idx: 0 */ {
L0:	loc0: u8
B0:
	0: LdU8(42)
	1: StLoc[0](loc0: u8)
	2: ImmBorrowLoc[0](loc0: u8)
	3: ReadRef
	4: Ret
}
}
============ bytecode verification succeeded ========
