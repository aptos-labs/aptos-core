============ initial bytecode ================

[variant baseline]
fun m::test(): u64 {
     var $t0: u64
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
  0: $t1 := 1
  1: $t3 := 1
  2: $t2 := +($t1, $t3)
  3: $t1 := infer($t2)
  4: $t4 := 2
  5: $t0 := +($t4, $t1)
  6: return $t0
}

============ after DeadStoreElimination: ================

[variant baseline]
fun m::test(): u64 {
     var $t0: u64
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
  0: $t1 := 1
  1: $t3 := 1
  2: $t2 := +($t1, $t3)
  3: $t1 := move($t2)
  4: $t4 := 2
  5: $t0 := +($t4, $t1)
  6: return $t0
}

============ after VariableCoalescingAnnotator: ================

[variant baseline]
fun m::test(): u64 {
     var $t0: u64
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     # live vars:
     # events: b:$t1
  0: $t1 := 1
     # live vars: $t1
     # events: b:$t3
  1: $t3 := 1
     # live vars: $t1, $t3
     # events: e:$t3, b:$t2
  2: $t2 := +($t1, $t3)
     # live vars: $t2
     # events: e:$t2
  3: $t1 := move($t2)
     # live vars: $t1
     # events: b:$t4
  4: $t4 := 2
     # live vars: $t1, $t4
     # events: e:$t1, e:$t4, b:$t0
  5: $t0 := +($t4, $t1)
     # live vars: $t0
     # events: e:$t0
  6: return $t0
}

============ after VariableCoalescingTransformer: ================

[variant baseline]
fun m::test(): u64 {
     var $t0: u64 [unused]
     var $t1: u64
     var $t2: u64 [unused]
     var $t3: u64
     var $t4: u64 [unused]
  0: $t1 := 1
  1: $t3 := 1
  2: $t3 := +($t1, $t3)
  3: $t1 := move($t3)
  4: $t3 := 2
  5: $t1 := +($t3, $t1)
  6: return $t1
}

============ after DeadStoreElimination: ================

[variant baseline]
fun m::test(): u64 {
     var $t0: u64 [unused]
     var $t1: u64
     var $t2: u64 [unused]
     var $t3: u64
     var $t4: u64 [unused]
  0: $t1 := 1
  1: $t3 := 1
  2: $t3 := +($t1, $t3)
  3: $t1 := move($t3)
  4: $t3 := 2
  5: $t1 := +($t3, $t1)
  6: return $t1
}


============ disassembled file-format ==================
// Move bytecode v7
module c0ffee.m {


test(): u64 /* def_idx: 0 */ {
L0:	loc0: u64
L1:	loc1: u64
B0:
	0: LdU64(1)
	1: LdU64(1)
	2: Add
	3: StLoc[1](loc1: u64)
	4: LdU64(2)
	5: MoveLoc[1](loc1: u64)
	6: Add
	7: Ret
}
}
============ bytecode verification succeeded ========
