============ initial bytecode ================

[variant baseline]
fun <SELF>_0::main() {
     var $t0: u64
     var $t1: u64
     var $t2: bool
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: bool
     var $t9: u64
     var $t10: u64
     var $t11: u64
  0: $t2 := true
  1: if ($t2) goto 2 else goto 11
  2: label L0
  3: $t3 := 1
  4: $t0 := infer($t3)
  5: $t4 := move($t0)
  6: $t1 := infer($t4)
  7: $t5 := 5
  8: $t0 := infer($t5)
  9: $t6 := infer($t1)
 10: goto 14
 11: label L1
 12: $t7 := 0
 13: $t0 := infer($t7)
 14: label L2
 15: $t9 := copy($t0)
 16: $t10 := 5
 17: $t8 := ==($t9, $t10)
 18: if ($t8) goto 19 else goto 21
 19: label L3
 20: goto 24
 21: label L4
 22: $t11 := 42
 23: abort($t11)
 24: label L5
 25: return ()
}

============ after DeadStoreElimination: ================

[variant baseline]
fun <SELF>_0::main() {
     var $t0: u64
     var $t1: u64 [unused]
     var $t2: bool
     var $t3: u64 [unused]
     var $t4: u64 [unused]
     var $t5: u64
     var $t6: u64 [unused]
     var $t7: u64
     var $t8: bool
     var $t9: u64
     var $t10: u64
     var $t11: u64
  0: $t2 := true
  1: if ($t2) goto 2 else goto 15
  2: label L0
  3: $t5 := 5
  4: $t0 := move($t5)
  5: label L2
  6: $t9 := copy($t0)
  7: $t10 := 5
  8: $t8 := ==($t9, $t10)
  9: if ($t8) goto 10 else goto 12
 10: label L3
 11: return ()
 12: label L4
 13: $t11 := 42
 14: abort($t11)
 15: label L1
 16: $t7 := 0
 17: $t0 := move($t7)
 18: goto 5
}

============ after VariableCoalescingAnnotator: ================

[variant baseline]
fun <SELF>_0::main() {
     var $t0: u64
     var $t1: u64 [unused]
     var $t2: bool
     var $t3: u64 [unused]
     var $t4: u64 [unused]
     var $t5: u64
     var $t6: u64 [unused]
     var $t7: u64
     var $t8: bool
     var $t9: u64
     var $t10: u64
     var $t11: u64
     # live vars:
     # events: b:$t2
  0: $t2 := true
     # live vars: $t2
     # events: e:$t2
  1: if ($t2) goto 2 else goto 15
     # live vars:
  2: label L0
     # live vars:
     # events: b:$t5
  3: $t5 := 5
     # live vars: $t5
     # events: e:$t5, b:$t0
  4: $t0 := move($t5)
     # live vars: $t0
  5: label L2
     # live vars: $t0
     # events: b:$t9
  6: $t9 := copy($t0)
     # live vars: $t9
     # events: b:$t10
  7: $t10 := 5
     # live vars: $t9, $t10
     # events: e:$t9, e:$t10, b:$t8
  8: $t8 := ==($t9, $t10)
     # live vars: $t8
     # events: e:$t8
  9: if ($t8) goto 10 else goto 12
     # live vars:
 10: label L3
     # live vars:
 11: return ()
     # live vars:
 12: label L4
     # live vars:
     # events: b:$t11
 13: $t11 := 42
     # live vars: $t11
     # events: e:$t11
 14: abort($t11)
     # live vars:
 15: label L1
     # live vars:
     # events: b:$t7
 16: $t7 := 0
     # live vars: $t7
     # events: e:$t7
 17: $t0 := move($t7)
     # live vars: $t0
     # events: e:$t0
 18: goto 5
}

============ after VariableCoalescingTransformer: ================

[variant baseline]
fun <SELF>_0::main() {
     var $t0: u64 [unused]
     var $t1: u64 [unused]
     var $t2: bool
     var $t3: u64 [unused]
     var $t4: u64 [unused]
     var $t5: u64
     var $t6: u64 [unused]
     var $t7: u64 [unused]
     var $t8: bool [unused]
     var $t9: u64
     var $t10: u64
     var $t11: u64 [unused]
  0: $t2 := true
  1: if ($t2) goto 2 else goto 15
  2: label L0
  3: $t5 := 5
  4: $t5 := move($t5)
  5: label L2
  6: $t9 := copy($t5)
  7: $t10 := 5
  8: $t2 := ==($t9, $t10)
  9: if ($t2) goto 10 else goto 12
 10: label L3
 11: return ()
 12: label L4
 13: $t9 := 42
 14: abort($t9)
 15: label L1
 16: $t9 := 0
 17: $t5 := move($t9)
 18: goto 5
}

============ after DeadStoreElimination: ================

[variant baseline]
fun <SELF>_0::main() {
     var $t0: u64 [unused]
     var $t1: u64 [unused]
     var $t2: bool
     var $t3: u64 [unused]
     var $t4: u64 [unused]
     var $t5: u64
     var $t6: u64 [unused]
     var $t7: u64 [unused]
     var $t8: bool [unused]
     var $t9: u64
     var $t10: u64
     var $t11: u64 [unused]
  0: $t2 := true
  1: if ($t2) goto 2 else goto 14
  2: label L0
  3: $t5 := 5
  4: label L2
  5: $t9 := copy($t5)
  6: $t10 := 5
  7: $t2 := ==($t9, $t10)
  8: if ($t2) goto 9 else goto 11
  9: label L3
 10: return ()
 11: label L4
 12: $t9 := 42
 13: abort($t9)
 14: label L1
 15: $t9 := 0
 16: $t5 := move($t9)
 17: goto 4
}


============ disassembled file-format ==================
// Move bytecode v7
script {


main() /* def_idx: 0 */ {
L0:	loc0: u64
B0:
	0: LdU64(5)
	1: StLoc[0](loc0: u64)
B1:
	2: CopyLoc[0](loc0: u64)
	3: LdU64(5)
	4: Eq
	5: BrFalse(7)
B2:
	6: Ret
B3:
	7: LdU64(42)
	8: Abort
B4:
	9: LdU64(0)
	10: StLoc[0](loc0: u64)
	11: Branch(2)
}
}
============ bytecode verification succeeded ========
