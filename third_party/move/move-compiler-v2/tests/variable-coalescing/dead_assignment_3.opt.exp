============ initial bytecode ================

[variant baseline]
public fun m::test($t0: bool): u32 {
     var $t1: u32
     var $t2: u32
  0: $t2 := 1
  1: if ($t0) goto 2 else goto 7
  2: label L0
  3: $t2 := infer($t2)
  4: $t2 := infer($t2)
  5: $t1 := infer($t2)
  6: goto 10
  7: label L1
  8: $t2 := infer($t2)
  9: $t1 := 9
 10: label L2
 11: return $t1
}


Diagnostics:
warning: Unused assignment to `y`. Consider removing or prefixing with an underscore: `_y`
   ┌─ tests/variable-coalescing/dead_assignment_3.move:10:13
   │
10 │             y = y;
   │             ^^^^^

============ after DeadStoreElimination: ================

[variant baseline]
public fun m::test($t0: bool): u32 {
     var $t1: u32
     var $t2: u32
  0: $t2 := 1
  1: if ($t0) goto 2 else goto 6
  2: label L0
  3: $t1 := move($t2)
  4: label L2
  5: return $t1
  6: label L1
  7: $t1 := 9
  8: goto 4
}

============ after VariableCoalescingAnnotator: ================

[variant baseline]
public fun m::test($t0: bool): u32 {
     var $t1: u32
     var $t2: u32
     # live vars: $t0
     # events: b:$t0, b:$t2
  0: $t2 := 1
     # live vars: $t0, $t2
     # events: e:$t0
  1: if ($t0) goto 2 else goto 6
     # live vars: $t2
  2: label L0
     # live vars: $t2
     # events: b:$t1
  3: $t1 := move($t2)
     # live vars: $t1
  4: label L2
     # live vars: $t1
  5: return $t1
     # live vars: $t2
     # events: e:$t2
  6: label L1
     # live vars:
  7: $t1 := 9
     # live vars: $t1
     # events: e:$t1
  8: goto 4
}

============ after VariableCoalescingTransformer: ================

[variant baseline]
public fun m::test($t0: bool): u32 {
     var $t1: u32
     var $t2: u32
  0: $t2 := 1
  1: if ($t0) goto 2 else goto 6
  2: label L0
  3: $t1 := move($t2)
  4: label L2
  5: return $t1
  6: label L1
  7: $t1 := 9
  8: goto 4
}

============ after DeadStoreElimination: ================

[variant baseline]
public fun m::test($t0: bool): u32 {
     var $t1: u32
     var $t2: u32
  0: $t2 := 1
  1: if ($t0) goto 2 else goto 6
  2: label L0
  3: $t1 := move($t2)
  4: label L2
  5: return $t1
  6: label L1
  7: $t1 := 9
  8: goto 4
}


============ disassembled file-format ==================
// Move bytecode v8
module c0ffee.m {


public test(p: bool): u32 /* def_idx: 0 */ {
L1:	y: u32
L2:	return: u32
B0:
	0: LdU32(1)
	1: StLoc[1](y: u32)
	2: MoveLoc[0](p: bool)
	3: BrFalse(8)
B1:
	4: MoveLoc[1](y: u32)
	5: StLoc[2](return: u32)
B2:
	6: MoveLoc[2](return: u32)
	7: Ret
B3:
	8: LdU32(9)
	9: StLoc[2](return: u32)
	10: Branch(6)
}
}
============ bytecode verification succeeded ========
