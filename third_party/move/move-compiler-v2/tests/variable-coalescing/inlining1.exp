============ initial bytecode ================

[variant baseline]
public fun Test::test(): u64 {
     var $t0: u64
     var $t1: u64
     var $t2: u64
     var $t3: u64
  0: $t2 := 10
  1: $t1 := infer($t2)
  2: $t3 := infer($t1)
  3: $t0 := 3
  4: return $t0
}

============ after DeadStoreElimination: ================

[variant baseline]
public fun Test::test(): u64 {
     var $t0: u64
     var $t1: u64 [unused]
     var $t2: u64 [unused]
     var $t3: u64 [unused]
  0: $t0 := 3
  1: return $t0
}

============ after VariableCoalescingAnnotator: ================

[variant baseline]
public fun Test::test(): u64 {
     var $t0: u64
     var $t1: u64 [unused]
     var $t2: u64 [unused]
     var $t3: u64 [unused]
     # live vars:
     # events: b:$t0
  0: $t0 := 3
     # live vars: $t0
     # events: e:$t0
  1: return $t0
}

============ after VariableCoalescingTransformer: ================

[variant baseline]
public fun Test::test(): u64 {
     var $t0: u64
     var $t1: u64 [unused]
     var $t2: u64 [unused]
     var $t3: u64 [unused]
  0: $t0 := 3
  1: return $t0
}

============ after DeadStoreElimination: ================

[variant baseline]
public fun Test::test(): u64 {
     var $t0: u64
     var $t1: u64 [unused]
     var $t2: u64 [unused]
     var $t3: u64 [unused]
  0: $t0 := 3
  1: return $t0
}


============ disassembled file-format ==================
// Move bytecode v8
module 42.Test {


public test(): u64 /* def_idx: 0 */ {
B0:
	0: LdU64(3)
	1: Ret
}
}
============ bytecode verification succeeded ========
