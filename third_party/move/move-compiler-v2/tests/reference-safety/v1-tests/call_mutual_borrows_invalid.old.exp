
Diagnostics:
error: mutable reference in local `s1` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/call_mutual_borrows_invalid.move:15:17
   │
14 │         let f = freeze(s1);
   │                 ---------- previous freeze
15 │         mut_imm(s1, f);
   │         --------^^----
   │         │       │
   │         │       requirement enforced here
   │         conflicting reference `f` used here

error: mutable reference in value requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/call_mutual_borrows_invalid.move:15:9
   │
14 │         let f = freeze(s1);
   │                 ---------- previous freeze
15 │         mut_imm(s1, f);
   │         ^^^^^^^^^^^^^^ requirement enforced here
16 │         let f = &s1.f;
   │                 ----- conflicting reference `s1` used here

error: mutable reference in local `s1` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/call_mutual_borrows_invalid.move:17:17
   │
16 │         let f = &s1.f;
   │                 ----- previous field borrow
17 │         mut_imm(s1, f);
   │         --------^^----
   │         │       │
   │         │       requirement enforced here
   │         conflicting reference `f` used here

error: mutable reference in value requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/call_mutual_borrows_invalid.move:17:9
   │
16 │         let f = &s1.f;
   │                 ----- previous field borrow
17 │         mut_imm(s1, f);
   │         ^^^^^^^^^^^^^^ requirement enforced here
18 │         let f = &s1.f;
   │                 ----- conflicting reference `s1` used here

error: cannot mutably borrow since immutable references exist
   ┌─ tests/reference-safety/v1-tests/call_mutual_borrows_invalid.move:19:17
   │
18 │         let f = &s1.f;
   │                 ----- previous field borrow
19 │         mut_imm(&mut s1.f, f);
   │         --------^^^^^^^^^----
   │         │       │
   │         │       mutable borrow attempted here
   │         requirement enforced here
20 │         let f = id(&s1.f);
   │                    ----- conflicting reference `s1` used here

error: cannot mutably borrow since immutable references exist
   ┌─ tests/reference-safety/v1-tests/call_mutual_borrows_invalid.move:21:16
   │
20 │         let f = id(&s1.f);
   │                 ---------
   │                 │  │
   │                 │  previous field borrow
   │                 used by call result
21 │         id_mut(&mut s1.f); *f;
   │         -------^^^^^^^^^-  -- conflicting reference `f` used here
   │         │      │
   │         │      mutable borrow attempted here
   │         requirement enforced here

error: same mutable reference in local `s1` is also used in other value in argument list
   ┌─ tests/reference-safety/v1-tests/call_mutual_borrows_invalid.move:23:9
   │
13 │     fun t0(s1: &mut S, _s2: &mut S) {
   │            -- previous mutable local borrow
   ·
23 │         mut_mut(s1, s1);
   │         ^^^^^^^^^^^^^^^ requirement enforced here

error: mutable reference in local `s1` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/call_mutual_borrows_invalid.move:25:17
   │
24 │         let f = &mut s1.f;
   │                 --------- previous mutable field borrow
25 │         mut_mut(s1, f);
   │         --------^^----
   │         │       │
   │         │       requirement enforced here
   │         conflicting reference `f` used here

error: mutable reference in value requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/call_mutual_borrows_invalid.move:25:9
   │
24 │         let f = &mut s1.f;
   │                 --------- previous mutable field borrow
25 │         mut_mut(s1, f);
   │         ^^^^^^^^^^^^^^ requirement enforced here
26 │         mut_mut(&mut s1.f, s1);
   │                 --------- conflicting reference `s1` used here

error: mutable reference in local `s1` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/call_mutual_borrows_invalid.move:26:9
   │
26 │         mut_mut(&mut s1.f, s1);
   │         ^^^^^^^^^^^^^^^^^^^^^^
   │         │       │
   │         │       previous mutable field borrow
   │         requirement enforced here

error: mutable reference in local `s1` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/call_mutual_borrows_invalid.move:28:9
   │
27 │         let s = id_mut(s1);
   │                 ---------- previous mutable call result
28 │         id_mut(s1);
   │         ^^^^^^^^^^ requirement enforced here
29 │         *s;
   │         -- conflicting reference `s` used here

error: mutable reference in local `s1` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/call_mutual_borrows_invalid.move:31:17
   │
30 │         let f = id_mut(&mut s1.f);
   │                 -----------------
   │                 │      │
   │                 │      previous mutable field borrow
   │                 used by mutable call result
31 │         mut_mut(s1, f);
   │         --------^^----
   │         │       │
   │         │       requirement enforced here
   │         conflicting reference `f` used here

error: mutable reference in value requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/call_mutual_borrows_invalid.move:31:9
   │
30 │         let f = id_mut(&mut s1.f);
   │                 -----------------
   │                 │      │
   │                 │      previous mutable field borrow
   │                 used by mutable call result
31 │         mut_mut(s1, f);
   │         ^^^^^^^^^^^^^^ requirement enforced here
32 │         mut_mut(id_mut(&mut s1.f), s1);
   │                        --------- conflicting reference `s1` used here

error: mutable reference in local `s1` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/call_mutual_borrows_invalid.move:32:9
   │
32 │         mut_mut(id_mut(&mut s1.f), s1);
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   │         │       │      │
   │         │       │      previous mutable field borrow
   │         │       used by mutable call result
   │         requirement enforced here
