
Diagnostics:
error: same mutable reference in value is also used in other value in argument list
  ┌─ tests/reference-safety/multiple_use_invalid.move:5:9
  │
5 │         s(&mut s.x, &mut s.x)
  │         ^^^^^^^^^^^^^^^^^^^^^
  │         │ │         │
  │         │ │         previous mutable field borrow
  │         │ previous mutable field borrow
  │         requirement enforced here

error: mutable reference in local `r` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/multiple_use_invalid.move:11:11
   │
11 │         s(r, x)
   │         --^----
   │         │ │
   │         │ requirement enforced here
   │         conflicting reference `x` used here

error: same mutable reference in local `x` is also used in other value in argument list
   ┌─ tests/reference-safety/multiple_use_invalid.move:11:9
   │
 9 │         let r = &mut s.x;
   │                 -------- previous mutable field borrow
10 │         let x = r;
11 │         s(r, x)
   │         ^^^^^^^ requirement enforced here

error: same mutable reference in local `r2` is also used in other value in argument list
   ┌─ tests/reference-safety/multiple_use_invalid.move:20:9
   │
18 │         let r1 = &mut x;
   │                  ------ previous mutable local borrow
19 │         let r2 = &mut x;
   │                  ------ previous mutable local borrow
20 │         s(r1, r2)
   │         ^^^^^^^^^ requirement enforced here

error: cannot implicitly freeze local `r1`  since multiple mutable references exist
   ┌─ tests/reference-safety/multiple_use_invalid.move:27:9
   │
25 │         let r1 = &mut x;
   │                  ------ originating mutable local borrow
26 │         let r2 = &mut x;
   │                  ------ conflicting mutable local borrow
27 │         r1 == r2
   │         ^^ implicitly frozen here
