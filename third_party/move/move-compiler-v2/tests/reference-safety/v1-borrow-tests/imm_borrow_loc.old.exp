
Diagnostics:
error: cannot immutably borrow since mutable references exist
   ┌─ tests/reference-safety/v1-borrow-tests/imm_borrow_loc.move:27:17
   │
24 │         let returned_ref = bump_and_pick(account, &mut b1, &mut b2);
   │                            ----------------------------------------
   │                            │                      │
   │                            │                      previous mutable local borrow
   │                            used by call result
   ·
27 │         assert!(b1.f != 0, 42);
   │                 ^^--
   │                 │
   │                 requirement enforced here
   │                 immutable borrow attempted here
28 │         assert!(b2.f != 0, 42);
29 │         assert!((returned_ref == &b1.f) != (returned_ref == &b2.f), 42);
   │                  ------------ conflicting reference `returned_ref` used here

error: cannot immutably borrow since mutable references exist
   ┌─ tests/reference-safety/v1-borrow-tests/imm_borrow_loc.move:28:17
   │
24 │         let returned_ref = bump_and_pick(account, &mut b1, &mut b2);
   │                            ----------------------------------------
   │                            │                               │
   │                            │                               previous mutable local borrow
   │                            used by call result
   ·
28 │         assert!(b2.f != 0, 42);
   │                 ^^--
   │                 │
   │                 requirement enforced here
   │                 immutable borrow attempted here
29 │         assert!((returned_ref == &b1.f) != (returned_ref == &b2.f), 42);
   │                  ------------ conflicting reference `returned_ref` used here

error: cannot immutably borrow since mutable references exist
   ┌─ tests/reference-safety/v1-borrow-tests/imm_borrow_loc.move:29:35
   │
24 │         let returned_ref = bump_and_pick(account, &mut b1, &mut b2);
   │                            ----------------------------------------
   │                            │                      │
   │                            │                      previous mutable local borrow
   │                            used by call result
   ·
29 │         assert!((returned_ref == &b1.f) != (returned_ref == &b2.f), 42);
   │                 ------------------^^---     ------------ conflicting reference `returned_ref` used here
   │                 │                 │
   │                 │                 immutable borrow attempted here
   │                 requirement enforced here

error: cannot immutably borrow since mutable references exist
   ┌─ tests/reference-safety/v1-borrow-tests/imm_borrow_loc.move:29:62
   │
24 │         let returned_ref = bump_and_pick(account, &mut b1, &mut b2);
   │                            ----------------------------------------
   │                            │                               │
   │                            │                               previous mutable local borrow
   │                            used by call result
   ·
29 │         assert!((returned_ref == &b1.f) != (returned_ref == &b2.f), 42);
   │                                            ------------------^^---
   │                                            │                 │
   │                                            │                 immutable borrow attempted here
   │                                            requirement enforced here
30 │
31 │         *result = *returned_ref;
   │                   ------------- conflicting reference `returned_ref` used here
