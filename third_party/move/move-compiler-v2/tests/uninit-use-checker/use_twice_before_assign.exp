
Diagnostics:
warning: Unused local variable `y`. Consider removing or prefixing with an underscore: `_y`
  ┌─ tests/uninit-use-checker/use_twice_before_assign.move:4:9
  │
4 │     let y = x + x;
  │         ^

============ initial bytecode ================

[variant baseline]
fun <SELF>_0::main() {
     var $t0: u64
     var $t1: u64
     var $t2: u64
  0: $t2 := infer($t0)
  1: $t1 := +($t2, $t0)
  2: return ()
}


Diagnostics:
error: use of unassigned local `x`
  ┌─ tests/uninit-use-checker/use_twice_before_assign.move:4:13
  │
4 │     let y = x + x;
  │             ^

error: use of unassigned local `x`
  ┌─ tests/uninit-use-checker/use_twice_before_assign.move:4:13
  │
4 │     let y = x + x;
  │             ^^^^^

============ after uninitialized_use_checker: ================

[variant baseline]
fun <SELF>_0::main() {
     var $t0: u64
     var $t1: u64
     var $t2: u64
     # before: { no: $t0, $t1, $t2 }, after: { no: $t0, $t1 }
  0: $t2 := infer($t0)
     # before: { no: $t0, $t1 }, after: { no: $t0 }
  1: $t1 := +($t2, $t0)
     # before: { no: $t0 }, after: { no: $t0 }
  2: return ()
}
