============ initial bytecode ================

[variant baseline]
fun <SELF>_0::main() {
     var $t0: u64
     var $t1: u64
     var $t2: bool
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: u64
     var $t8: u64
     var $t9: u64
  0: $t2 := true
  1: if ($t2) goto 2 else goto 6
  2: label L0
  3: $t3 := 0
  4: $t1 := infer($t3)
  5: goto 10
  6: label L1
  7: $t4 := 42
  8: $t0 := infer($t4)
  9: $t5 := infer($t0)
 10: label L2
 11: $t7 := infer($t1)
 12: $t8 := 0
 13: $t6 := ==($t7, $t8)
 14: if ($t6) goto 15 else goto 17
 15: label L3
 16: goto 20
 17: label L4
 18: $t9 := 42
 19: abort($t9)
 20: label L5
 21: return ()
}


Diagnostics:
error: use of possibly unassigned local `y`
   ┌─ tests/uninit-use-checker/v1-commands/else_assigns_if_doesnt.move:11:13
   │
11 │     assert!(y == 0, 42);
   │             ^

============ after uninitialized_use_checker: ================

[variant baseline]
fun <SELF>_0::main() {
     var $t0: u64
     var $t1: u64
     var $t2: bool
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: u64
     var $t8: u64
     var $t9: u64
     # before: { no: $t0, $t1, $t2, $t3, $t4, $t5, $t6, $t7, $t8, $t9 }, after: { no: $t0, $t1, $t3, $t4, $t5, $t6, $t7, $t8, $t9 }
  0: $t2 := true
     # before: { no: $t0, $t1, $t3, $t4, $t5, $t6, $t7, $t8, $t9 }, after: { no: $t0, $t1, $t3, $t4, $t5, $t6, $t7, $t8, $t9 }
  1: if ($t2) goto 2 else goto 6
     # before: { no: $t0, $t1, $t3, $t4, $t5, $t6, $t7, $t8, $t9 }, after: { no: $t0, $t1, $t3, $t4, $t5, $t6, $t7, $t8, $t9 }
  2: label L0
     # before: { no: $t0, $t1, $t3, $t4, $t5, $t6, $t7, $t8, $t9 }, after: { no: $t0, $t1, $t4, $t5, $t6, $t7, $t8, $t9 }
  3: $t3 := 0
     # before: { no: $t0, $t1, $t4, $t5, $t6, $t7, $t8, $t9 }, after: { no: $t0, $t4, $t5, $t6, $t7, $t8, $t9 }
  4: $t1 := infer($t3)
     # before: { no: $t0, $t4, $t5, $t6, $t7, $t8, $t9 }, after: { no: $t0, $t4, $t5, $t6, $t7, $t8, $t9 }
  5: goto 10
     # before: { no: $t0, $t1, $t3, $t4, $t5, $t6, $t7, $t8, $t9 }, after: { no: $t0, $t1, $t3, $t4, $t5, $t6, $t7, $t8, $t9 }
  6: label L1
     # before: { no: $t0, $t1, $t3, $t4, $t5, $t6, $t7, $t8, $t9 }, after: { no: $t0, $t1, $t3, $t5, $t6, $t7, $t8, $t9 }
  7: $t4 := 42
     # before: { no: $t0, $t1, $t3, $t5, $t6, $t7, $t8, $t9 }, after: { no: $t1, $t3, $t5, $t6, $t7, $t8, $t9 }
  8: $t0 := infer($t4)
     # before: { no: $t1, $t3, $t5, $t6, $t7, $t8, $t9 }, after: { no: $t1, $t3, $t6, $t7, $t8, $t9 }
  9: $t5 := infer($t0)
     # before: { no: $t6, $t7, $t8, $t9 }{ maybe: $t0, $t1, $t3, $t4, $t5 }, after: { no: $t6, $t7, $t8, $t9 }{ maybe: $t0, $t1, $t3, $t4, $t5 }
 10: label L2
     # before: { no: $t6, $t7, $t8, $t9 }{ maybe: $t0, $t1, $t3, $t4, $t5 }, after: { no: $t6, $t8, $t9 }{ maybe: $t0, $t1, $t3, $t4, $t5 }
 11: $t7 := infer($t1)
     # before: { no: $t6, $t8, $t9 }{ maybe: $t0, $t1, $t3, $t4, $t5 }, after: { no: $t6, $t9 }{ maybe: $t0, $t1, $t3, $t4, $t5 }
 12: $t8 := 0
     # before: { no: $t6, $t9 }{ maybe: $t0, $t1, $t3, $t4, $t5 }, after: { no: $t9 }{ maybe: $t0, $t1, $t3, $t4, $t5 }
 13: $t6 := ==($t7, $t8)
     # before: { no: $t9 }{ maybe: $t0, $t1, $t3, $t4, $t5 }, after: { no: $t9 }{ maybe: $t0, $t1, $t3, $t4, $t5 }
 14: if ($t6) goto 15 else goto 17
     # before: { no: $t9 }{ maybe: $t0, $t1, $t3, $t4, $t5 }, after: { no: $t9 }{ maybe: $t0, $t1, $t3, $t4, $t5 }
 15: label L3
     # before: { no: $t9 }{ maybe: $t0, $t1, $t3, $t4, $t5 }, after: { no: $t9 }{ maybe: $t0, $t1, $t3, $t4, $t5 }
 16: goto 20
     # before: { no: $t9 }{ maybe: $t0, $t1, $t3, $t4, $t5 }, after: { no: $t9 }{ maybe: $t0, $t1, $t3, $t4, $t5 }
 17: label L4
     # before: { no: $t9 }{ maybe: $t0, $t1, $t3, $t4, $t5 }, after: { maybe: $t0, $t1, $t3, $t4, $t5 }
 18: $t9 := 42
     # before: { maybe: $t0, $t1, $t3, $t4, $t5 }, after: { maybe: $t0, $t1, $t3, $t4, $t5 }
 19: abort($t9)
     # before: { no: $t9 }{ maybe: $t0, $t1, $t3, $t4, $t5 }, after: { no: $t9 }{ maybe: $t0, $t1, $t3, $t4, $t5 }
 20: label L5
     # before: { no: $t9 }{ maybe: $t0, $t1, $t3, $t4, $t5 }, after: { no: $t9 }{ maybe: $t0, $t1, $t3, $t4, $t5 }
 21: return ()
}
