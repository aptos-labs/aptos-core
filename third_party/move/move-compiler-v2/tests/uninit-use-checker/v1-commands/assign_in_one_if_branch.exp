============ initial bytecode ================

[variant baseline]
fun <SELF>_0::main() {
     var $t0: u64
     var $t1: u64
     var $t2: bool
     var $t3: u64
     var $t4: bool
     var $t5: u64
     var $t6: bool
     var $t7: u64
  0: $t2 := true
  1: if ($t2) goto 2 else goto 6
  2: label L0
  3: $t3 := 5
  4: $t0 := infer($t3)
  5: goto 7
  6: label L1
  7: label L2
  8: $t4 := true
  9: if ($t4) goto 10 else goto 14
 10: label L3
 11: $t5 := 5
 12: $t1 := infer($t5)
 13: goto 15
 14: label L4
 15: label L5
 16: $t7 := infer($t0)
 17: $t6 := ==($t7, $t1)
 18: return ()
}


Diagnostics:
error: use of possibly unassigned local `x`
  ┌─ tests/uninit-use-checker/v1-commands/assign_in_one_if_branch.move:7:5
  │
7 │     x == y;
  │     ^

error: use of possibly unassigned local `y`
  ┌─ tests/uninit-use-checker/v1-commands/assign_in_one_if_branch.move:7:5
  │
7 │     x == y;
  │     ^^^^^^

============ after uninitialized_use_checker: ================

[variant baseline]
fun <SELF>_0::main() {
     var $t0: u64
     var $t1: u64
     var $t2: bool
     var $t3: u64
     var $t4: bool
     var $t5: u64
     var $t6: bool
     var $t7: u64
     # before: { no: $t0, $t1, $t2, $t3, $t4, $t5, $t6, $t7 }, after: { no: $t0, $t1, $t3, $t4, $t5, $t6, $t7 }
  0: $t2 := true
     # before: { no: $t0, $t1, $t3, $t4, $t5, $t6, $t7 }, after: { no: $t0, $t1, $t3, $t4, $t5, $t6, $t7 }
  1: if ($t2) goto 2 else goto 6
     # before: { no: $t0, $t1, $t3, $t4, $t5, $t6, $t7 }, after: { no: $t0, $t1, $t3, $t4, $t5, $t6, $t7 }
  2: label L0
     # before: { no: $t0, $t1, $t3, $t4, $t5, $t6, $t7 }, after: { no: $t0, $t1, $t4, $t5, $t6, $t7 }
  3: $t3 := 5
     # before: { no: $t0, $t1, $t4, $t5, $t6, $t7 }, after: { no: $t1, $t4, $t5, $t6, $t7 }
  4: $t0 := infer($t3)
     # before: { no: $t1, $t4, $t5, $t6, $t7 }, after: { no: $t1, $t4, $t5, $t6, $t7 }
  5: goto 7
     # before: { no: $t0, $t1, $t3, $t4, $t5, $t6, $t7 }, after: { no: $t0, $t1, $t3, $t4, $t5, $t6, $t7 }
  6: label L1
     # before: { no: $t1, $t4, $t5, $t6, $t7 }{ maybe: $t0, $t3 }, after: { no: $t1, $t4, $t5, $t6, $t7 }{ maybe: $t0, $t3 }
  7: label L2
     # before: { no: $t1, $t4, $t5, $t6, $t7 }{ maybe: $t0, $t3 }, after: { no: $t1, $t5, $t6, $t7 }{ maybe: $t0, $t3 }
  8: $t4 := true
     # before: { no: $t1, $t5, $t6, $t7 }{ maybe: $t0, $t3 }, after: { no: $t1, $t5, $t6, $t7 }{ maybe: $t0, $t3 }
  9: if ($t4) goto 10 else goto 14
     # before: { no: $t1, $t5, $t6, $t7 }{ maybe: $t0, $t3 }, after: { no: $t1, $t5, $t6, $t7 }{ maybe: $t0, $t3 }
 10: label L3
     # before: { no: $t1, $t5, $t6, $t7 }{ maybe: $t0, $t3 }, after: { no: $t1, $t6, $t7 }{ maybe: $t0, $t3 }
 11: $t5 := 5
     # before: { no: $t1, $t6, $t7 }{ maybe: $t0, $t3 }, after: { no: $t6, $t7 }{ maybe: $t0, $t3 }
 12: $t1 := infer($t5)
     # before: { no: $t6, $t7 }{ maybe: $t0, $t3 }, after: { no: $t6, $t7 }{ maybe: $t0, $t3 }
 13: goto 15
     # before: { no: $t1, $t5, $t6, $t7 }{ maybe: $t0, $t3 }, after: { no: $t1, $t5, $t6, $t7 }{ maybe: $t0, $t3 }
 14: label L4
     # before: { no: $t6, $t7 }{ maybe: $t0, $t1, $t3, $t5 }, after: { no: $t6, $t7 }{ maybe: $t0, $t1, $t3, $t5 }
 15: label L5
     # before: { no: $t6, $t7 }{ maybe: $t0, $t1, $t3, $t5 }, after: { no: $t6 }{ maybe: $t0, $t1, $t3, $t5 }
 16: $t7 := infer($t0)
     # before: { no: $t6 }{ maybe: $t0, $t1, $t3, $t5 }, after: { maybe: $t0, $t1, $t3, $t5 }
 17: $t6 := ==($t7, $t1)
     # before: { maybe: $t0, $t1, $t3, $t5 }, after: { maybe: $t0, $t1, $t3, $t5 }
 18: return ()
}
