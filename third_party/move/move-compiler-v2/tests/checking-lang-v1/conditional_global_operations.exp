
Diagnostics:
error: type `R` is missing required ability `store` (type was inferred)
   ┌─ tests/checking-lang-v1/conditional_global_operations.move:15:9
   │
15 │         move_to(s, Box<R> { f: R {} });
   │         ^^^^^^^
   │
   = required by instantiating type parameter `T` of struct `Box`
   = required by instantiating type parameter `T:key` of function `move_to`

error: type `T` is missing required ability `store`
   ┌─ tests/checking-lang-v1/conditional_global_operations.move:16:23
   │
16 │         borrow_global<Box<T>>(a1);
   │                       ^^^^^^
   │
   = required by instantiating type parameter `T` of struct `Box`
   = required by instantiating type parameter `T:key` of function `borrow_global`

error: type `T` is missing required ability `store`
   ┌─ tests/checking-lang-v1/conditional_global_operations.move:17:27
   │
17 │         borrow_global_mut<Box<Box<T>>>(a1);
   │                           ^^^^^^^^^^^
   │
   = required by instantiating type parameter `T` of struct `Box`
   = required by instantiating type parameter `T` of struct `Box`
   = required by instantiating type parameter `T:key` of function `borrow_global_mut`

error: type `R` is missing required ability `store`
   ┌─ tests/checking-lang-v1/conditional_global_operations.move:18:43
   │
18 │         Pair { f1: _, f2: _ } = move_from<Pair<S, R>>(a1);
   │                                           ^^^^^^^^^^
   │
   = required by instantiating type parameter `T2` of struct `Pair`
   = required by instantiating type parameter `T:key` of function `move_from`

error: type `T` is missing required ability `store`
   ┌─ tests/checking-lang-v1/conditional_global_operations.move:19:16
   │
19 │         exists<Pair<Box<T>, S>>(a1);
   │                ^^^^^^^^^^^^^^^
   │
   = required by instantiating type parameter `T` of struct `Box`
   = required by instantiating type parameter `T1` of struct `Pair`
   = required by instantiating type parameter `T:key` of function `exists`

error: type `K` is missing required ability `store`
   ┌─ tests/checking-lang-v1/conditional_global_operations.move:21:23
   │
21 │         borrow_global<Box<K>>(a1);
   │                       ^^^^^^
   │
   = required by instantiating type parameter `T` of struct `Box`
   = required by instantiating type parameter `T:key` of function `borrow_global`

error: type `K` is missing required ability `store`
   ┌─ tests/checking-lang-v1/conditional_global_operations.move:22:27
   │
22 │         borrow_global_mut<Pair<S, K>>(a1);
   │                           ^^^^^^^^^^
   │
   = required by instantiating type parameter `T2` of struct `Pair`
   = required by instantiating type parameter `T:key` of function `borrow_global_mut`
