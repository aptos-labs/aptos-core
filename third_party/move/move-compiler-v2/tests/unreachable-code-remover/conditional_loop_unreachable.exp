============ initial bytecode ================

[variant baseline]
fun m::test($t0: bool, $t1: bool) {
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: u64
  0: label L0
  1: if ($t0) goto 2 else goto 23
  2: label L2
  3: if ($t1) goto 4 else goto 14
  4: label L5
  5: label L8
  6: goto 5
  7: label L9
  8: $t2 := 0
  9: $t4 := infer($t2)
 10: $t5 := 1
 11: $t3 := +($t4, $t5)
 12: $t2 := infer($t3)
 13: goto 16
 14: label L6
 15: goto 27
 16: label L7
 17: $t6 := 0
 18: $t8 := infer($t6)
 19: $t9 := 1
 20: $t7 := +($t8, $t9)
 21: $t6 := infer($t7)
 22: goto 25
 23: label L3
 24: goto 27
 25: label L4
 26: goto 0
 27: label L1
 28: return ()
}


Diagnostics:
warning: Unused assignment to `i`. Consider removing or prefixing with an underscore: `_i`
  ┌─ tests/unreachable-code-remover/conditional_loop_unreachable.move:7:17
  │
7 │                 i = i + 1;
  │                 ^^^^^^^^^

warning: Unused assignment to `i`. Consider removing or prefixing with an underscore: `_i`
   ┌─ tests/unreachable-code-remover/conditional_loop_unreachable.move:12:13
   │
12 │             i = i + 1;
   │             ^^^^^^^^^

============ after UnreachableCodeProcessor: ================

[variant baseline]
fun m::test($t0: bool, $t1: bool) {
     var $t2: u64 [unused]
     var $t3: u64 [unused]
     var $t4: u64 [unused]
     var $t5: u64 [unused]
     var $t6: u64 [unused]
     var $t7: u64 [unused]
     var $t8: u64 [unused]
     var $t9: u64 [unused]
     # maybe
  0: if ($t0) goto 3 else goto 1
     # maybe
  1: label L9
     # maybe
  2: goto 11
     # maybe
  3: label L2
     # maybe
  4: if ($t1) goto 5 else goto 7
     # maybe
  5: label L10
     # maybe
  6: goto 9
     # maybe
  7: label L11
     # maybe
  8: goto 11
     # maybe
  9: label L8
     # maybe
 10: goto 9
     # maybe
 11: label L1
     # maybe
 12: return ()
}

============ after UnreachableCodeRemover: ================

[variant baseline]
fun m::test($t0: bool, $t1: bool) {
     var $t2: u64 [unused]
     var $t3: u64 [unused]
     var $t4: u64 [unused]
     var $t5: u64 [unused]
     var $t6: u64 [unused]
     var $t7: u64 [unused]
     var $t8: u64 [unused]
     var $t9: u64 [unused]
  0: if ($t0) goto 3 else goto 1
  1: label L9
  2: goto 11
  3: label L2
  4: if ($t1) goto 5 else goto 7
  5: label L10
  6: goto 9
  7: label L11
  8: goto 11
  9: label L8
 10: goto 9
 11: label L1
 12: return ()
}


============ disassembled file-format ==================
// Move bytecode v7
module c0ffee.m {


test(Arg0: bool, Arg1: bool) /* def_idx: 0 */ {
B0:
	0: MoveLoc[0](Arg0: bool)
	1: BrTrue(3)
B1:
	2: Branch(8)
B2:
	3: MoveLoc[1](Arg1: bool)
	4: BrFalse(6)
B3:
	5: Branch(7)
B4:
	6: Branch(8)
B5:
	7: Branch(7)
B6:
	8: Ret
}
}
============ bytecode verification succeeded ========
