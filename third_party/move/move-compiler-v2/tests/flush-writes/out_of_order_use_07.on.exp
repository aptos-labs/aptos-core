============ after FlushWritesProcessor: ================

[variant baseline]
fun m::consume_2($t0: u64, $t1: u64) {
     # live vars: $t0, $t1
  0: return ()
}


[variant baseline]
fun m::consume_4($t0: u64, $t1: u64, $t2: u64, $t3: u64) {
     # live vars: $t0, $t1, $t2, $t3
  0: return ()
}


[variant baseline]
fun m::one(): u64 {
     var $t0: u64
     # live vars:
  0: $t0 := 1
     # live vars: $t0
  1: return $t0
}


[variant baseline]
public fun m::test() {
     var $t0: u64
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64 [unused]
     var $t7: u64 [unused]
     var $t8: u64 [unused]
     var $t9: u64 [unused]
     # live vars:
  0: $t0 := m::one()
     # live vars: $t0
  1: $t1 := m::one()
     # live vars: $t0, $t1
  2: $t2 := m::one()
     # live vars: $t0, $t1, $t2
  3: $t3 := m::one()
     # live vars: $t0, $t1, $t2, $t3
  4: $t4 := m::one()
     # live vars: $t0, $t1, $t2, $t3, $t4
  5: $t5 := m::one()
     # live vars: $t0, $t1, $t2, $t3, $t4, $t5
  6: $t0 := move($t0)
     # live vars: $t0, $t1, $t2, $t3, $t4, $t5
  7: $t1 := move($t1)
     # live vars: $t0, $t1, $t2, $t3, $t4, $t5
  8: $t2 := move($t2)
     # live vars: $t0, $t1, $t2, $t3, $t4, $t5
  9: m::consume_4($t0, $t1, $t2, $t3)
     # live vars: $t4, $t5
 10: $t4 := move($t4)
     # live vars: $t4, $t5
 11: m::consume_2($t4, $t5)
     # live vars:
 12: return ()
}


============ disassembled file-format ==================
// Move bytecode v8
module c0ffee.m {


consume_2(_a: u64, _b: u64) /* def_idx: 0 */ {
B0:
	0: Ret
}
consume_4(_a: u64, _b: u64, _c: u64, _d: u64) /* def_idx: 1 */ {
B0:
	0: Ret
}
one(): u64 /* def_idx: 2 */ {
B0:
	0: LdU64(1)
	1: Ret
}
public test() /* def_idx: 3 */ {
L0:	f: u64
L1:	e: u64
L2:	d: u64
L3:	c: u64
L4:	b: u64
L5:	a: u64
B0:
	0: Call one(): u64
	1: Call one(): u64
	2: Call one(): u64
	3: Call one(): u64
	4: Call one(): u64
	5: Call one(): u64
	6: StLoc[0](f: u64)
	7: StLoc[1](e: u64)
	8: Call consume_4(u64, u64, u64, u64)
	9: MoveLoc[1](e: u64)
	10: MoveLoc[0](f: u64)
	11: Call consume_2(u64, u64)
	12: Ret
}
}
============ bytecode verification succeeded ========
