// -- Model dump before first bytecode pipeline
module 0x42::tuple {
    struct S {
        f: u64,
    }
    private fun tuple(x: u64): (u64, S) {
        Tuple(x, pack tuple::S(Add<u64>(x, 1)))
    }
    private fun use_tuple(x: u64): u64 {
        {
          let (x: u64, tuple::S{ f: y }): (u64, S) = tuple::tuple(x);
          Add<u64>(x, y)
        }
    }
} // end 0x42::tuple

// -- Sourcified model before first bytecode pipeline
module 0x42::tuple {
    struct S {
        f: u64,
    }
    fun tuple(x: u64): (u64, S) {
        (x, S{f: x + 1})
    }
    fun use_tuple(x: u64): u64 {
        let (x,S{f: y}) = tuple(x);
        x + y
    }
}
