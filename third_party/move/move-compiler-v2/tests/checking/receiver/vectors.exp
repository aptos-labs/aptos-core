// -- Model dump before first bytecode pipeline
module 0x1::vector {
    private fun receiver<T>(self: vector<T>,_y: T) {
        Tuple()
    }
    private fun receiver_ref<T>(self: &vector<T>,_y: T) {
        Tuple()
    }
    private fun receiver_ref_mut<T>(self: &mut vector<T>,_y: T) {
        Tuple()
    }
    private fun test_call_styles(s: vector<u64>,x: u64) {
        vector::receiver<u64>(s, x);
        vector::receiver_ref<u64>(Borrow(Immutable)(s), x);
        vector::receiver_ref_mut<u64>(Borrow(Mutable)(s), x);
        Tuple()
    }
} // end 0x1::vector

// -- Sourcified model before first bytecode pipeline
module 0x1::vector {
    fun receiver<T>(self: vector<T>, _y: T) {
    }
    fun receiver_ref<T>(self: &vector<T>, _y: T) {
    }
    fun receiver_ref_mut<T>(self: &mut vector<T>, _y: T) {
    }
    fun test_call_styles(s: vector<u64>, x: u64) {
        receiver<u64>(s, x);
        receiver_ref<u64>(&s, x);
        receiver_ref_mut<u64>(&mut s, x);
    }
}
