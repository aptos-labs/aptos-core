
Diagnostics:
warning: Unused parameter `a`. Consider removing or prefixing with an underscore: `_a`
   ┌─ tests/checking/access_specifiers/access_ok.move:35:12
   │
35 │     fun f9(a: address) acquires *(a) {
   │            ^

warning: Unused parameter `x`. Consider removing or prefixing with an underscore: `_x`
   ┌─ tests/checking/access_specifiers/access_ok.move:38:13
   │
38 │     fun f10(x: u64) acquires *(make_up_address(x)) {
   │             ^

warning: Unused parameter `x`. Consider removing or prefixing with an underscore: `_x`
   ┌─ tests/checking/access_specifiers/access_ok.move:41:25
   │
41 │     fun make_up_address(x: u64): address {
   │                         ^

// -- Model dump before bytecode pipeline
module 0x42::m {
    struct T {
        dummy_field: bool,
    }
    struct G<T> {
        dummy_field: bool,
    }
    struct R {
        dummy_field: bool,
    }
    struct S {
        dummy_field: bool,
    }
    private fun f1()
        acquires S(*)
     {
        Tuple()
    }
    private fun f10(x: u64)
        acquires *(m::make_up_address(x))
     {
        Tuple()
    }
    private fun f11()
        !reads *(0x42)
        !reads *(0x43)
     {
        Tuple()
    }
    private fun f12()
     {
        Tuple()
    }
    private fun f2()
        reads S(*)
     {
        Tuple()
    }
    private fun f3()
        writes S(*)
     {
        Tuple()
    }
    private fun f4()
        acquires S(*)
     {
        Tuple()
    }
    private fun f5()
        acquires 0x42::*(*)
     {
        Tuple()
    }
    private fun f6()
        acquires 0x42::m::*(*)
     {
        Tuple()
    }
    private fun f7()
        acquires *(*)
     {
        Tuple()
    }
    private fun f8()
        acquires *(0x42)
     {
        Tuple()
    }
    private fun f9(a: address)
        acquires *(a)
     {
        Tuple()
    }
    private fun f_multiple()
        acquires R(*)
        reads R(*)
        writes T(*)
        writes S(*)
        reads G<u64>(*)
     {
        Tuple()
    }
    private fun make_up_address(x: u64): address {
        0x42
    }
} // end 0x42::m

// -- Sourcified model before bytecode pipeline
module 0x42::m {
    struct T has store {
    }
    struct G<phantom T> has store {
    }
    struct R has store {
    }
    struct S has store {
    }
    fun f1()
        acquires S
    {
    }
    fun f10(x: u64)
        acquires *(m::make_up_address(x))
    {
    }
    fun f11()
        !reads *(0x42)
        !reads *(0x43)
    {
    }
    fun f12()
    {
    }
    fun f2()
        reads S
    {
    }
    fun f3()
        writes S
    {
    }
    fun f4()
        acquires S
    {
    }
    fun f5()
        acquires 0x42::*
    {
    }
    fun f6()
        acquires 0x42::m::*
    {
    }
    fun f7()
        acquires *
    {
    }
    fun f8()
        acquires *(0x42)
    {
    }
    fun f9(a: address)
        acquires *(a)
    {
    }
    fun f_multiple()
        acquires R
        reads R
        writes T
        writes S
        reads G<u64>
    {
    }
    fun make_up_address(x: u64): address {
        0x42
    }
}
