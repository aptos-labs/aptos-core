============ initial bytecode ================

[variant baseline]
public fun m::make($t0: u64, $t1: u64, $t2: u64, $t3: &0xc0ffee::m::S, $t4: u64): 0xc0ffee::m::Wrap {
     var $t5: 0xc0ffee::m::Wrap
     var $t6: u64
     var $t7: &u64
  0: $t7 := borrow_field<0xc0ffee::m::S>.x($t3)
  1: $t6 := read_ref($t7)
  2: $t5 := pack 0xc0ffee::m::Wrap($t0, $t1, $t2, $t6, $t4)
  3: return $t5
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
public fun m::make($t0: u64, $t1: u64, $t2: u64, $t3: &0xc0ffee::m::S, $t4: u64): 0xc0ffee::m::Wrap {
     var $t5: 0xc0ffee::m::Wrap
     var $t6: u64
     var $t7: &u64
     # live vars: $t0, $t1, $t2, $t3, $t4
  0: $t7 := borrow_field<0xc0ffee::m::S>.x($t3)
     # live vars: $t0, $t1, $t2, $t4, $t7
  1: $t6 := read_ref($t7)
     # live vars: $t0, $t1, $t2, $t4, $t6
  2: $t5 := pack 0xc0ffee::m::Wrap($t0, $t1, $t2, $t6, $t4)
     # live vars: $t5
  3: return $t5
}


============ disassembled file-format ==================
// Move bytecode v7
module c0ffee.m {
struct S {
	x: u64
}
struct Wrap {
	a: u64,
	b: u64,
	c: u64,
	d: u64,
	e: u64
}

public make(Arg0: u64, Arg1: u64, Arg2: u64, Arg3: &S, Arg4: u64): Wrap /* def_idx: 0 */ {
L5:	loc0: u64
B0:
	0: MoveLoc[3](Arg3: &S)
	1: ImmBorrowField[0](S.x: u64)
	2: ReadRef
	3: StLoc[5](loc0: u64)
	4: MoveLoc[0](Arg0: u64)
	5: MoveLoc[1](Arg1: u64)
	6: MoveLoc[2](Arg2: u64)
	7: MoveLoc[5](loc0: u64)
	8: MoveLoc[4](Arg4: u64)
	9: Pack[1](Wrap)
	10: Ret
}
}
============ bytecode verification succeeded ========
