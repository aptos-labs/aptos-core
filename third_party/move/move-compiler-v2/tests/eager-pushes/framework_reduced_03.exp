============ initial bytecode ================

[variant baseline]
public fun m::make($t0: u64, $t1: u64, $t2: u64, $t3: address, $t4: u64): 0xc0ffee::m::Wrap {
     var $t5: 0xc0ffee::m::Wrap
     var $t6: &0xc0ffee::m::S
     var $t7: u64
     var $t8: &u64
     var $t9: u64
     var $t10: &u64
  0: $t6 := borrow_global<0xc0ffee::m::S>($t3)
  1: $t8 := borrow_field<0xc0ffee::m::S>.x($t6)
  2: $t7 := read_ref($t8)
  3: $t10 := borrow_field<0xc0ffee::m::S>.y($t6)
  4: $t9 := read_ref($t10)
  5: $t5 := pack 0xc0ffee::m::Wrap($t0, $t1, $t2, $t7, $t4, $t9)
  6: return $t5
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
public fun m::make($t0: u64, $t1: u64, $t2: u64, $t3: address, $t4: u64): 0xc0ffee::m::Wrap {
     var $t5: 0xc0ffee::m::Wrap
     var $t6: &0xc0ffee::m::S
     var $t7: u64
     var $t8: &u64
     var $t9: u64
     var $t10: &u64 [unused]
     # live vars: $t0, $t1, $t2, $t3, $t4
  0: $t6 := borrow_global<0xc0ffee::m::S>($t3)
     # live vars: $t0, $t1, $t2, $t4, $t6
  1: $t8 := borrow_field<0xc0ffee::m::S>.x($t6)
     # live vars: $t0, $t1, $t2, $t4, $t6, $t8
  2: $t7 := read_ref($t8)
     # live vars: $t0, $t1, $t2, $t4, $t6, $t7
  3: $t8 := borrow_field<0xc0ffee::m::S>.y($t6)
     # live vars: $t0, $t1, $t2, $t4, $t7, $t8
  4: $t9 := read_ref($t8)
     # live vars: $t0, $t1, $t2, $t4, $t7, $t9
  5: $t5 := pack 0xc0ffee::m::Wrap($t0, $t1, $t2, $t7, $t4, $t9)
     # live vars: $t5
  6: return $t5
}


============ disassembled file-format ==================
// Move bytecode v7
module c0ffee.m {
struct S has key {
	x: u64,
	y: u64
}
struct Wrap {
	a: u64,
	b: u64,
	c: u64,
	d: u64,
	e: u64,
	f: u64
}

public make(Arg0: u64, Arg1: u64, Arg2: u64, Arg3: address, Arg4: u64): Wrap /* def_idx: 0 */ {
L5:	loc0: &S
L6:	loc1: u64
L7:	loc2: u64
B0:
	0: MoveLoc[3](Arg3: address)
	1: ImmBorrowGlobal[0](S)
	2: StLoc[5](loc0: &S)
	3: CopyLoc[5](loc0: &S)
	4: ImmBorrowField[0](S.x: u64)
	5: ReadRef
	6: MoveLoc[5](loc0: &S)
	7: ImmBorrowField[1](S.y: u64)
	8: ReadRef
	9: StLoc[6](loc1: u64)
	10: StLoc[7](loc2: u64)
	11: MoveLoc[0](Arg0: u64)
	12: MoveLoc[1](Arg1: u64)
	13: MoveLoc[2](Arg2: u64)
	14: MoveLoc[7](loc2: u64)
	15: MoveLoc[4](Arg4: u64)
	16: MoveLoc[6](loc1: u64)
	17: Pack[1](Wrap)
	18: Ret
}
}
============ bytecode verification succeeded ========
