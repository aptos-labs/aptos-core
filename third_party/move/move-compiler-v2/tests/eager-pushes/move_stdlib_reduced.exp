============ initial bytecode ================

[variant baseline]
fun m::bar($t0: &mut u64, $t1: u64) {
  0: write_ref($t0, $t1)
  1: return ()
}


[variant baseline]
public fun m::foo($t0: &mut u64, $t1: u64) {
     var $t2: bool
     var $t3: u64
     var $t4: u64
     var $t5: &mut u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: u64
  0: label L0
  1: $t3 := infer($t1)
  2: $t4 := 0
  3: $t2 := >($t3, $t4)
  4: if ($t2) goto 5 else goto 14
  5: label L2
  6: $t5 := infer($t0)
  7: $t6 := m::one()
  8: m::bar($t5, $t6)
  9: $t8 := infer($t1)
 10: $t9 := 1
 11: $t7 := -($t8, $t9)
 12: $t1 := infer($t7)
 13: goto 16
 14: label L3
 15: goto 18
 16: label L4
 17: goto 0
 18: label L1
 19: return ()
}


[variant baseline]
fun m::one(): u64 {
     var $t0: u64
  0: $t0 := 1
  1: return $t0
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun m::bar($t0: &mut u64, $t1: u64) {
     # live vars: $t0, $t1
  0: write_ref($t0, $t1)
     # live vars:
  1: return ()
}


[variant baseline]
public fun m::foo($t0: &mut u64, $t1: u64) {
     var $t2: bool
     var $t3: u64
     var $t4: u64
     var $t5: &mut u64
     var $t6: u64 [unused]
     var $t7: u64 [unused]
     var $t8: u64 [unused]
     var $t9: u64 [unused]
     # live vars: $t0, $t1
  0: label L0
     # live vars: $t0, $t1
  1: $t3 := copy($t1)
     # live vars: $t0, $t1, $t3
  2: $t4 := 0
     # live vars: $t0, $t1, $t3, $t4
  3: $t2 := >($t3, $t4)
     # live vars: $t0, $t1, $t2
  4: if ($t2) goto 5 else goto 14
     # live vars: $t0, $t1
  5: label L2
     # live vars: $t0, $t1
  6: $t5 := copy($t0)
     # live vars: $t0, $t1, $t5
  7: $t3 := m::one()
     # live vars: $t0, $t1, $t3, $t5
  8: m::bar($t5, $t3)
     # live vars: $t0, $t1
  9: $t3 := move($t1)
     # live vars: $t0, $t3
 10: $t4 := 1
     # live vars: $t0, $t3, $t4
 11: $t3 := -($t3, $t4)
     # live vars: $t0, $t3
 12: $t1 := move($t3)
     # live vars: $t0, $t1
 13: goto 0
     # live vars: $t0, $t1
 14: label L3
     # live vars: $t0
 15: drop($t0)
     # live vars:
 16: return ()
}


[variant baseline]
fun m::one(): u64 {
     var $t0: u64
     # live vars:
  0: $t0 := 1
     # live vars: $t0
  1: return $t0
}


============ disassembled file-format ==================
// Move bytecode v7
module c0ffee.m {


bar(Arg0: &mut u64, Arg1: u64) /* def_idx: 0 */ {
B0:
	0: MoveLoc[1](Arg1: u64)
	1: MoveLoc[0](Arg0: &mut u64)
	2: WriteRef
	3: Ret
}
public foo(Arg0: &mut u64, Arg1: u64) /* def_idx: 1 */ {
B0:
	0: CopyLoc[1](Arg1: u64)
	1: LdU64(0)
	2: Gt
	3: BrFalse(12)
B1:
	4: CopyLoc[0](Arg0: &mut u64)
	5: Call one(): u64
	6: Call bar(&mut u64, u64)
	7: MoveLoc[1](Arg1: u64)
	8: LdU64(1)
	9: Sub
	10: StLoc[1](Arg1: u64)
	11: Branch(0)
B2:
	12: MoveLoc[0](Arg0: &mut u64)
	13: Pop
	14: Ret
}
one(): u64 /* def_idx: 2 */ {
B0:
	0: LdU64(1)
	1: Ret
}
}
============ bytecode verification succeeded ========
