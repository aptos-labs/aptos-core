// -- Model dump before first bytecode pipeline
module 0x8675309::M {
    struct R {
        f: u64,
    }
    private fun t0() {
        {
          let (): () = Tuple();
          {
            let x: u64 = 0;
            x;
            {
              let (x: u64, b: bool, M::R{ f }): (u64, bool, R) = Tuple(0, false, pack M::R(0));
              x;
              b;
              f;
              Tuple()
            }
          }
        }
    }
} // end 0x8675309::M

// -- Sourcified model before first bytecode pipeline
module 0x8675309::M {
    struct R {
        f: u64,
    }
    fun t0() {
        let () = ();
        let x = 0;
        x;
        let (x,b,R{f: f}) = (0, false, R{f: 0});
        x;
        b;
        f;
    }
}


Diagnostics:
warning: Expression value unused and side-effect free, so eliminated as dead code
  ┌─ tests/simplifier-elimination/bind_with_type_annot.move:6:25
  │
6 │         let x: u64 = 0; x;
  │                         ^

warning: Expression value unused and side-effect free, so eliminated as dead code
  ┌─ tests/simplifier-elimination/bind_with_type_annot.move:7:68
  │
7 │         let (x, b, R{f}): (u64, bool, R) = (0, false, R { f: 0 }); x; b; f;
  │                                                                    ^

warning: Expression value unused and side-effect free, so eliminated as dead code
  ┌─ tests/simplifier-elimination/bind_with_type_annot.move:7:71
  │
7 │         let (x, b, R{f}): (u64, bool, R) = (0, false, R { f: 0 }); x; b; f;
  │                                                                       ^

warning: Expression value unused and side-effect free, so eliminated as dead code
  ┌─ tests/simplifier-elimination/bind_with_type_annot.move:7:74
  │
7 │         let (x, b, R{f}): (u64, bool, R) = (0, false, R { f: 0 }); x; b; f;
  │                                                                          ^

// -- Model dump before second bytecode pipeline
module 0x8675309::M {
    struct R {
        f: u64,
    }
    private fun t0() {
        {
          let (x: u64, b: bool, M::R{ f }): (u64, bool, R) = Tuple(0, false, pack M::R(0));
          Tuple()
        }
    }
} // end 0x8675309::M


============ bytecode verification succeeded ========
