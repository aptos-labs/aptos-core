============ initial bytecode ================

[variant baseline]
fun m::copy_kill($t0: u64): u64 {
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: u64
  0: $t2 := infer($t0)
  1: $t3 := infer($t2)
  2: $t5 := infer($t0)
  3: $t6 := 1
  4: $t4 := +($t5, $t6)
  5: $t0 := infer($t4)
  6: $t7 := infer($t3)
  7: $t1 := +($t7, $t2)
  8: return $t1
}


Diagnostics:
warning: Unused assignment to `p`. Consider removing or prefixing with an underscore: `_p`
  ┌─ tests/copy-propagation/straight_line_kills.move:5:9
  │
5 │         p = p + 1;
  │         ^^^^^^^^^

============ after DeadStoreElimination: ================

[variant baseline]
fun m::copy_kill($t0: u64): u64 {
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: u64
  0: $t2 := copy($t0)
  1: $t3 := copy($t2)
  2: $t5 := move($t0)
  3: $t6 := 1
  4: $t4 := +($t5, $t6)
  5: $t7 := move($t3)
  6: $t1 := +($t7, $t2)
  7: return $t1
}
