============ initial bytecode ================

[variant baseline]
fun m::test($t0: u64): bool {
     var $t1: bool
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
  0: $t2 := infer($t0)
  1: $t3 := infer($t2)
  2: $t4 := infer($t3)
  3: $t6 := infer($t0)
  4: $t7 := 1
  5: $t5 := +($t6, $t7)
  6: $t3 := infer($t5)
  7: $t8 := infer($t2)
  8: $t1 := ==($t8, $t4)
  9: return $t1
}


Diagnostics:
warning: Unused assignment to `b`. Consider removing or prefixing with an underscore: `_b`
  ┌─ tests/copy-propagation/seq_kills_1.move:7:9
  │
7 │         b = p + 1; // kill b := a, which removes the whole copy chain
  │         ^^^^^^^^^

============ after DeadStoreElimination: ================

[variant baseline]
fun m::test($t0: u64): bool {
     var $t1: bool
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
  0: $t2 := copy($t0)
  1: $t3 := copy($t2)
  2: $t4 := move($t3)
  3: $t6 := move($t0)
  4: $t7 := 1
  5: $t5 := +($t6, $t7)
  6: $t8 := move($t2)
  7: $t1 := ==($t8, $t4)
  8: return $t1
}
