============ initial bytecode ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: u64
  0: $t2 := infer($t0)
  1: $t3 := 0
  2: label L0
  3: $t5 := infer($t3)
  4: $t6 := 10
  5: $t4 := <($t5, $t6)
  6: if ($t4) goto 7 else goto 14
  7: label L2
  8: $t2 := infer($t0)
  9: $t8 := infer($t3)
 10: $t9 := 1
 11: $t7 := +($t8, $t9)
 12: $t3 := infer($t7)
 13: goto 16
 14: label L3
 15: goto 18
 16: label L4
 17: goto 2
 18: label L1
 19: $t1 := infer($t2)
 20: return $t1
}

============ after DeadStoreElimination: ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: u64
  0: $t2 := copy($t0)
  1: $t3 := 0
  2: label L0
  3: $t5 := copy($t3)
  4: $t6 := 10
  5: $t4 := <($t5, $t6)
  6: if ($t4) goto 7 else goto 14
  7: label L2
  8: $t2 := copy($t0)
  9: $t8 := move($t3)
 10: $t9 := 1
 11: $t7 := +($t8, $t9)
 12: $t3 := move($t7)
 13: goto 2
 14: label L3
 15: $t1 := move($t2)
 16: return $t1
}
