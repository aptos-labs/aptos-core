============ initial bytecode ================

[variant baseline]
fun m::add($t0: u64, $t1: u64): u64 {
     var $t2: u64
     var $t3: u64
  0: $t3 := infer($t0)
  1: $t2 := +($t3, $t1)
  2: return $t2
}


[variant baseline]
public fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
  0: $t2 := infer($t0)
  1: $t5 := infer($t0)
  2: $t6 := 1
  3: $t4 := +($t5, $t6)
  4: $t0 := infer($t4)
  5: $t3 := infer($t0)
  6: $t1 := m::add($t2, $t3)
  7: return $t1
}

============ after DeadStoreElimination: ================

[variant baseline]
fun m::add($t0: u64, $t1: u64): u64 {
     var $t2: u64
     var $t3: u64
  0: $t3 := move($t0)
  1: $t2 := +($t3, $t1)
  2: return $t2
}


[variant baseline]
public fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
  0: $t2 := copy($t0)
  1: $t5 := move($t0)
  2: $t6 := 1
  3: $t4 := +($t5, $t6)
  4: $t0 := move($t4)
  5: $t3 := move($t0)
  6: $t1 := m::add($t2, $t3)
  7: return $t1
}
