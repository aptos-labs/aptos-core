
Diagnostics:
error: constraint `integer` does not have required ability `key`
  ┌─ tests/ability-check/v1-typing/pack_constraint_not_satisfied.move:7:27
  │
7 │         R {r:_ } = R { r: 0 };
  │                           ^

error: type `Coin` is missing required ability `drop` (type was inferred)
  ┌─ tests/ability-check/v1-typing/pack_constraint_not_satisfied.move:8:9
  │
4 │     struct S<T: drop> has drop { c: T }
  │              - declaration of type parameter `T`
  ·
8 │         S { c: Coin {} };
  │         ^
  │
  = required by instantiating type parameter `T:drop` of struct `S`

error: type `R<*error*>` is missing required ability `key` (type was inferred)
   ┌─ tests/ability-check/v1-typing/pack_constraint_not_satisfied.move:12:30
   │
 3 │     struct R<T: key>  { r: T }
   │              - declaration of type parameter `T`
   ·
12 │         R {r: R { r: _ } } = R { r: R { r: 0 }};
   │                              ^
   │
   = required by instantiating type parameter `T:key` of struct `R`

error: type `R<key>` is missing required ability `key` (type was inferred)
   ┌─ tests/ability-check/v1-typing/pack_constraint_not_satisfied.move:12:30
   │
 3 │     struct R<T: key>  { r: T }
   │              - declaration of type parameter `T`
   ·
12 │         R {r: R { r: _ } } = R { r: R { r: 0 }};
   │                              ^
   │
   = required by instantiating type parameter `T:key` of struct `R`

error: constraint `integer` does not have required ability `key`
   ┌─ tests/ability-check/v1-typing/pack_constraint_not_satisfied.move:12:44
   │
12 │         R {r: R { r: _ } } = R { r: R { r: 0 }};
   │                                            ^

error: type `Coin` is missing required ability `drop` (type was inferred)
   ┌─ tests/ability-check/v1-typing/pack_constraint_not_satisfied.move:13:16
   │
 4 │     struct S<T: drop> has drop { c: T }
   │              - declaration of type parameter `T`
   ·
13 │         S { c: S { c: Coin {} } };
   │                ^
   │
   = required by instantiating type parameter `T:drop` of struct `S`
   = required by instantiating type parameter `T:drop` of struct `S`
