
Diagnostics:
warning: This assignment/binding to the left-hand-side variable `r` is unused. Consider removing this assignment/binding, or prefixing the left-hand-side variable with an underscore (e.g., `_r`), or renaming to `_`
  ┌─ tests/more-v1/locals/unused_resource.move:5:17
  │
5 │         let r = R{};
  │                 ^^^

warning: This assignment/binding to the left-hand-side variable `r` is unused. Consider removing this assignment/binding, or prefixing the left-hand-side variable with an underscore (e.g., `_r`), or renaming to `_`
   ┌─ tests/more-v1/locals/unused_resource.move:15:21
   │
15 │         if (cond) { r = R{}; };
   │                     ^^^^^^^

warning: This assignment/binding to the left-hand-side variable `r` is unused. Consider removing this assignment/binding, or prefixing the left-hand-side variable with an underscore (e.g., `_r`), or renaming to `_`
   ┌─ tests/more-v1/locals/unused_resource.move:20:29
   │
20 │         if (cond) {} else { r = R{}; };
   │                             ^^^^^^^

warning: This assignment/binding to the left-hand-side variable `r` is unused. Consider removing this assignment/binding, or prefixing the left-hand-side variable with an underscore (e.g., `_r`), or renaming to `_`
   ┌─ tests/more-v1/locals/unused_resource.move:25:24
   │
25 │         while (cond) { r = R{} };
   │                        ^^^^^^^

warning: This assignment/binding to the left-hand-side variable `r` is unused. Consider removing this assignment/binding, or prefixing the left-hand-side variable with an underscore (e.g., `_r`), or renaming to `_`
   ┌─ tests/more-v1/locals/unused_resource.move:29:24
   │
29 │         loop { let r = R{}; }
   │                        ^^^


Diagnostics:
error: local `r` of type `R` does not have the `drop` ability
  ┌─ tests/more-v1/locals/unused_resource.move:5:17
  │
5 │         let r = R{};
  │                 ^^^ implicitly dropped here since it is no longer used

error: local `_r` of type `R` does not have the `drop` ability
   ┌─ tests/more-v1/locals/unused_resource.move:10:18
   │
10 │         let _r = R{};
   │                  ^^^ implicitly dropped here since it is no longer used

error: local `r` of type `R` does not have the `drop` ability
   ┌─ tests/more-v1/locals/unused_resource.move:15:21
   │
15 │         if (cond) { r = R{}; };
   │                     ^^^^^^^ implicitly dropped here since it is no longer used

error: local `r` of type `R` does not have the `drop` ability
   ┌─ tests/more-v1/locals/unused_resource.move:20:29
   │
20 │         if (cond) {} else { r = R{}; };
   │                             ^^^^^^^ implicitly dropped here since it is no longer used

error: local `r` of type `R` does not have the `drop` ability
   ┌─ tests/more-v1/locals/unused_resource.move:25:24
   │
25 │         while (cond) { r = R{} };
   │                        ^^^^^^^ implicitly dropped here since it is no longer used

error: value of type `R` does not have the `drop` ability
   ┌─ tests/more-v1/locals/unused_resource.move:33:17
   │
33 │         let _ = &R{};
   │                 ^^^^ still borrowed but will be implicitly dropped later since it is no longer used

error: local `_x` of type `R` does not have the `drop` ability
   ┌─ tests/more-v1/locals/unused_resource.move:36:22
   │
36 │       fun t7<T>(_x: R) {
   │ ╭──────────────────────^
37 │ │     }
   │ ╰─────^ implicitly dropped here since it is no longer used
