Move prover returns: exiting with verification errors
error: post-condition does not hold
   ┌─ tests/sources/functional/choice.move:22:9
   │
22 │         ensures result == TRACE(choose x: u64 where x >= 4 && x <= 5);
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   │
   =     at tests/sources/functional/choice.move:16: simple_incorrect
   =         b = <redacted>
   =     at tests/sources/functional/choice.move:17: simple_incorrect
   =         return = <redacted>
   =     at tests/sources/functional/choice.move:17: simple_incorrect
   =         result = <redacted>
   =     at tests/sources/functional/choice.move:22: simple_incorrect (spec)
   =         `TRACE(choose x: u64 where x >= 4 && x <= 5)` = <redacted>

error: post-condition does not hold
   ┌─ tests/sources/functional/choice.move:56:9
   │
56 │         ensures choice == signer::address_of(s2);
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   │
   =     at tests/sources/functional/choice.move:46: populate_R
   =     at tests/sources/functional/choice.move:51: populate_R (spec)
   =     at tests/sources/functional/choice.move:52: populate_R (spec)
   =     at tests/sources/functional/choice.move:55: populate_R (spec)
   =     at tests/sources/functional/choice.move:54: populate_R (spec)
   =     at tests/sources/functional/choice.move:46: populate_R
   =         s1 = <redacted>
   =         s2 = <redacted>
   =     at tests/sources/functional/choice.move:47: populate_R
   =         <redacted> = <redacted>
   =     at tests/sources/functional/choice.move:48: populate_R
   =         <redacted> = <redacted>
   =     at tests/sources/functional/choice.move:49: populate_R
   =     at tests/sources/functional/choice.move:56: populate_R (spec)

error: post-condition does not hold
   ┌─ tests/sources/functional/choice.move:87:9
   │
87 │         ensures TRACE(choose i in 0..len(result) where result[i] == 2) == 1;
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   │
   =     at tests/sources/functional/choice.move:76: test_not_using_min_incorrect
   =         v = <redacted>
   =     at tests/sources/functional/choice.move:77: test_not_using_min_incorrect
   =         v_ref = <redacted>
   =     at tests/sources/functional/choice.move:78: test_not_using_min_incorrect
   =     at tests/sources/functional/choice.move:79: test_not_using_min_incorrect
   =     at tests/sources/functional/choice.move:80: test_not_using_min_incorrect
   =     at tests/sources/functional/choice.move:81: test_not_using_min_incorrect
   =     at tests/sources/functional/choice.move:82: test_not_using_min_incorrect
   =         v = <redacted>
   =     at tests/sources/functional/choice.move:83: test_not_using_min_incorrect
   =     at tests/sources/functional/choice.move:75: test_not_using_min_incorrect
   =         result = <redacted>
   =     at tests/sources/functional/choice.move:84: test_not_using_min_incorrect
   =     at tests/sources/functional/choice.move:87: test_not_using_min_incorrect (spec)
   =         `TRACE(choose i in 0..len(result) where result[i] == 2)` = <redacted>

error: post-condition does not hold
    ┌─ tests/sources/functional/choice.move:100:9
    │
100 │         ensures result == TRACE(choose y: u64 where y > x);
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/functional/choice.move:95: test_choice_dup_expected_fail
    =         x = <redacted>
    =     at tests/sources/functional/choice.move:96: test_choice_dup_expected_fail
    =         result = <redacted>
    =     at tests/sources/functional/choice.move:97: test_choice_dup_expected_fail
    =     at tests/sources/functional/choice.move:100: test_choice_dup_expected_fail (spec)
    =         `TRACE(choose y: u64 where y > x)` = <redacted>

error: post-condition does not hold
    ┌─ tests/sources/functional/choice.move:158:9
    │
158 │         ensures evidence1 == evidence2;
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/functional/choice.move:156: test_different_choice_via_let (spec)
    =     at tests/sources/functional/choice.move:157: test_different_choice_via_let (spec)
    =     at tests/sources/functional/choice.move:154: test_different_choice_via_let
    =     at tests/sources/functional/choice.move:158: test_different_choice_via_let (spec)

error: post-condition does not hold
    ┌─ tests/sources/functional/choice.move:182:9
    │
182 │         ensures choose_some_positive_u64() == choose_another_positive_u64();
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/functional/choice.move:180: test_different_choice_via_spec_fun
    =     at tests/sources/functional/choice.move:182: test_different_choice_via_spec_fun (spec)

error: post-condition does not hold
    ┌─ tests/sources/functional/choice.move:210:9
    │
210 │         ensures evidence1 == evidence2;
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/functional/choice.move:206: test_same_choice_different_args_via_spec_fun
    =     at tests/sources/functional/choice.move:208: test_same_choice_different_args_via_spec_fun (spec)
    =     at tests/sources/functional/choice.move:209: test_same_choice_different_args_via_spec_fun (spec)
    =     at tests/sources/functional/choice.move:206: test_same_choice_different_args_via_spec_fun
    =         x = <redacted>
    =         y = <redacted>
    =         result = <redacted>
    =     at tests/sources/functional/choice.move:210: test_same_choice_different_args_via_spec_fun (spec)

error: post-condition does not hold
    ┌─ tests/sources/functional/choice.move:219:9
    │
219 │         ensures result != (choose i: u64 where i >= k);
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    =     at tests/sources/functional/choice.move:236: test_same_choice_different_args_via_schema_2
    =         result = <redacted>
    =     at tests/sources/functional/choice.move:237: test_same_choice_different_args_via_schema_2
    =     at tests/sources/functional/choice.move:219

error: post-condition does not hold
    ┌─ tests/sources/functional/choice.move:302:9
    │
302 │ ╭         ensures !(get_ballot<Proposal>(signer::address_of(ballot_account), result).expiration_timestamp_secs
303 │ │             <= 0);
    │ ╰──────────────────^
    │
    =     at tests/sources/functional/choice.move:280: create_ballot
    =         ballot_account = <redacted>
    =     at tests/sources/functional/choice.move:284: create_ballot
    =     at tests/sources/functional/choice.move:283: create_ballot
    =         <redacted> = <redacted>
    =     at tests/sources/functional/choice.move:291
    =     at tests/sources/functional/choice.move:286: create_ballot
    =     at tests/sources/functional/choice.move:272: new_ballot_id
    =         counter = <redacted>
    =     at tests/sources/functional/choice.move:275: new_ballot_id
    =         result = <redacted>
    =     at tests/sources/functional/choice.move:278: new_ballot_id
    =     at tests/sources/functional/choice.move:282: create_ballot
    =         result = <redacted>
    =     at tests/sources/functional/choice.move:288: create_ballot
    =     at tests/sources/functional/choice.move:302: create_ballot (spec)
