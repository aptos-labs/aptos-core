Move prover returns: exiting with verification errors
error: abort not covered by any of the `aborts_if` clauses
   ┌─ tests/sources/functional/enum_abort.move:17:5
   │
14 │           common.z // aborts
   │           -------- abort happened here with execution failure
   ·
17 │ ╭     spec select_abort {
18 │ │         aborts_if false;
19 │ │     }
   │ ╰─────^
   │
   =     at tests/sources/functional/enum_abort.move:11: select_abort
   =     at tests/sources/functional/enum_abort.move:12: select_abort
   =     at tests/sources/functional/enum_abort.move:10: select_abort
   =         common = <redacted>
   =     at tests/sources/functional/enum_abort.move:14: select_abort
   =         ABORTED

error: abort not covered by any of the `aborts_if` clauses
   ┌─ tests/sources/functional/enum_abort.move:31:5
   │
27 │           let CommonFields::Foo {x, y: _y} = common; // aborts
   │               ---------------------------- abort happened here with execution failure
   ·
31 │ ╭     spec unpack_abort {
32 │ │         aborts_if false;
33 │ │     }
   │ ╰─────^
   │
   =     at tests/sources/functional/enum_abort.move:23: unpack_abort
   =     at tests/sources/functional/enum_abort.move:24: unpack_abort
   =     at tests/sources/functional/enum_abort.move:25: unpack_abort
   =     at tests/sources/functional/enum_abort.move:22: unpack_abort
   =     at tests/sources/functional/enum_abort.move:27: unpack_abort
   =         ABORTED

error: abort not covered by any of the `aborts_if` clauses
   ┌─ tests/sources/functional/enum_abort.move:61:5
   │
57 │           let CommonFields::Foo {x, y: _y} = &mut common; // aborts
   │               ---------------------------- abort happened here with execution failure
   ·
61 │ ╭     spec test_borrow_field_abort {
62 │ │         aborts_if false;
63 │ │     }
   │ ╰─────^
   │
   =     at tests/sources/functional/enum_abort.move:53: test_borrow_field_abort
   =     at tests/sources/functional/enum_abort.move:54: test_borrow_field_abort
   =     at tests/sources/functional/enum_abort.move:55: test_borrow_field_abort
   =     at tests/sources/functional/enum_abort.move:52: test_borrow_field_abort
   =         common = <redacted>
   =     at tests/sources/functional/enum_abort.move:57: test_borrow_field_abort
   =         <redacted> = <redacted>
   =     at tests/sources/functional/enum_abort.move:57: test_borrow_field_abort
   =         ABORTED

error: abort not covered by any of the `aborts_if` clauses
    ┌─ tests/sources/functional/enum_abort.move:102:5
    │
 98 │           let CommonFields::Foo {x, y: _y} = & common; // aborts
    │               ---------------------------- abort happened here with execution failure
    ·
102 │ ╭     spec test_get_field_abort {
103 │ │         aborts_if false;
104 │ │     }
    │ ╰─────^
    │
    =     at tests/sources/functional/enum_abort.move:94: test_get_field_abort
    =     at tests/sources/functional/enum_abort.move:95: test_get_field_abort
    =     at tests/sources/functional/enum_abort.move:96: test_get_field_abort
    =     at tests/sources/functional/enum_abort.move:93: test_get_field_abort
    =         common = <redacted>
    =     at tests/sources/functional/enum_abort.move:98: test_get_field_abort
    =         <redacted> = <redacted>
    =     at tests/sources/functional/enum_abort.move:98: test_get_field_abort
    =         ABORTED

error: abort not covered by any of the `aborts_if` clauses
    ┌─ tests/sources/functional/enum_abort.move:129:5
    │
123 │                   abort 30 // aborts
    │                   -------- abort happened here with code 0x1E
    ·
129 │ ╭     spec test_match_abort {
130 │ │         aborts_if false;
131 │ │     }
    │ ╰─────^
    │
    =     at tests/sources/functional/enum_abort.move:113: test_match_abort
    =     at tests/sources/functional/enum_abort.move:114: test_match_abort
    =     at tests/sources/functional/enum_abort.move:115: test_match_abort
    =     at tests/sources/functional/enum_abort.move:112: test_match_abort
    =         common = <redacted>
    =     at tests/sources/functional/enum_abort.move:118: test_match_abort
    =     at tests/sources/functional/enum_abort.move:117: test_match_abort
    =         _common_vector_2 = <redacted>
    =     at tests/sources/functional/enum_abort.move:121: test_match_abort
    =         <redacted> = <redacted>
    =     at tests/sources/functional/enum_abort.move:122: test_match_abort
    =         _x = <redacted>
    =         <redacted> = <redacted>
    =     at tests/sources/functional/enum_abort.move:122: test_match_abort
    =         _z = <redacted>
    =     at tests/sources/functional/enum_abort.move:122: test_match_abort
    =         <redacted> = <redacted>
    =     at tests/sources/functional/enum_abort.move:122: test_match_abort
    =     at tests/sources/functional/enum_abort.move:123: test_match_abort
    =         ABORTED
