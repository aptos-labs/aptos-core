processed 4 tasks
task 0 lines 1-18:  print-bytecode [// This is roughly equivalent to the following Move program:]
// Bytecode version v7
script
// Function definition at index 0
entry public fun main()
    local l0: u64
    ld_u64 0
    st_loc l0
l1: copy_loc l0
    ld_u64 5
    lt
    // @5
    br_false l0
    copy_loc l0
    ld_u64 1
    add
    st_loc l0
    // @10
    branch l1
l0: ret


task 1 lines 20-32:  print-bytecode [// `return` statements can appear anywhere, even within a loop.]
// Bytecode version v7
script
// Function definition at index 0
entry public fun main()
    local l0: u64
    ld_u64 0
    st_loc l0
l1: ld_true
    br_false l0
    ret
    // @5
    branch l1
l0: ret


task 2 lines 34-42:  print-bytecode [// This is roughly equivalent to the following Move code: `while (true) { break; }`.]
// Bytecode version v7
script
// Function definition at index 0
entry public fun main()
    ld_true
    br_false l0
    branch l0
l0: ret


task 3 lines 44-55:  print-bytecode [// This is roughly equivalent to the following Move code: `loop { loop { break; } break; }`.]
// Bytecode version v7
script
// Function definition at index 0
entry public fun main()
l1: branch l0
    branch l1
l0: branch l2
    branch l1
l2: ret


