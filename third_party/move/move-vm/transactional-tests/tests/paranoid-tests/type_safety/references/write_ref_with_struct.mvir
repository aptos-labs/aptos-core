//# publish
module 0x2.A {
  struct C has drop { x: u64 }
  struct D has drop { x: u64 }
  struct A has drop { c: Self.C }

  public make_c(): Self.C {
  label b0:
    return C { x: 0};
  }

  public make_d(): Self.D {
  label b0:
    return D { x: 0 };
  }

  public test_mutate() {
    let a: Self.A;
    let c_ref: &mut Self.C;
    let c: Self.C;
  label b0:
    a = A { c: C { x: 0 }};
    c_ref =  &mut (&mut a).A::c;
    *copy(c_ref) = C { x: 20u64 };
    return;
  }

  public test_invalid_mutate() {
    let a: Self.A;
    let c_ref: &mut Self.C;
  label b0:
    a = A { c: C { x: 0 }};
    c_ref =  &mut (&mut a).A::c;
    *move(c_ref) = D { x: 20 };
    return;
  }
}

//# run --signers 0x1
import 0x2.A;
main(account: signer) {
label b0:
    A.test_mutate();
    return;
}

//# run --signers 0x1
import 0x2.A;
main(account: signer) {
label b0:
    A.test_invalid_mutate();
    return;
}
