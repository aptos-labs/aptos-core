//# publish
module 0x2.A {
    struct G has key, drop { x: u64 }

    public make_g(): Self.G {
    label b0:
        return G {x: 1};
    }

    public borrow(g: &Self.G): &u64 {
    label b0:
        return &(move(g)).G::x;
    }

    public borrow_mut(g: &mut Self.G): &mut u64 {
    label b0:
        return &mut (move(g)).G::x;
    }
}

//# run --signers 0x1 
import 0x2.A;
main(account: signer) {
    let g: A.G;
    let u_ref: &u64;
    let x: u64;
label b0:
    g = A.make_g();
    u_ref = A.borrow(&g);
    x = *move(u_ref);
    return;
}

//# run --signers 0x1 
import 0x2.A;
main(account: signer) {
    let g: A.G;
    let u_ref: &u64;
    let x: u64;
label b0:
    g = A.make_g();
    u_ref = A.borrow(&g);
    *move(u_ref) = 10;
    return;
}

//# run --signers 0x1 
import 0x2.A;
main(account: signer) {
    let g: A.G;
    let u_ref: &u64;
    let x: u64;
label b0:
    g = A.make_g();
    u_ref = A.borrow_mut(&mut g);
    x = *move(u_ref);
    return;
}

//# run --signers 0x1 
import 0x2.A;
main(account: signer) {
    let g: A.G;
    let u_ref: &mut u64;
    let x: u64;
label b0:
    g = A.make_g();
    u_ref = A.borrow_mut(&mut g);
    *move(u_ref) = 10;
    return;
}
