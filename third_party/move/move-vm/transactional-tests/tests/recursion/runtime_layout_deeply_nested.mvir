//# publish
module 0x42.M {
    import 0x1.signer;

    struct Box<T> has key, store { x: T }
    struct Box3<T> has store { x: Self.Box<Self.Box<T>> }
    struct Box7<T> has store { x: Self.Box3<Self.Box3<T>> }
    struct Box15<T> has store { x: Self.Box7<Self.Box7<T>> }
    struct Box31<T> has store { x: Self.Box15<Self.Box15<T>> }
    struct Box63<T> has store { x: Self.Box31<Self.Box31<T>> }
    struct Box127<T> has key, store { x: Self.Box63<Self.Box63<T>> }
    struct Box255<T> has key, store { x: Self.Box127<Self.Box127<T>> }

    public box3<T>(x: T): Self.Box3<T> {
    label b0:
        return Box3<T> { x: Box<Self.Box<T>> { x: Box<T> { x: move(x) } } };
    }

    public box7<T>(x: T): Self.Box7<T> {
    label b0:
        return Box7<T> { x: Self.box3<Self.Box3<T>>(Self.box3<T>(move(x))) };
    }

    public box15<T>(x: T): Self.Box15<T> {
    label b0:
        return Box15<T> { x: Self.box7<Self.Box7<T>>(Self.box7<T>(move(x))) };
    }

    public box31<T>(x: T): Self.Box31<T> {
    label b0:
        return Box31<T> { x: Self.box15<Self.Box15<T>>(Self.box15<T>(move(x))) };
    }

    public box63<T>(x: T): Self.Box63<T> {
    label b0:
        return Box63<T> { x: Self.box31<Self.Box31<T>>(Self.box31<T>(move(x))) };
    }

    public box127<T>(x: T): Self.Box127<T> {
    label b0:
        return Box127<T> { x: Self.box63<Self.Box63<T>>(Self.box63<T>(move(x))) };
    }

    public box255<T>(x: T): Self.Box255<T> {
    label b0:
        return Box255<T> { x: Self.box127<Self.Box127<T>>(Self.box127<T>(move(x))) };
    }

    public publish_128(account: &signer) {
    label b0:
        move_to<Box127<bool>>(move(account), Self.box127<bool>(true));
        return;
    }

    public publish_256(account: &signer) {
    label b0:
        move_to<Box255<bool>>(move(account), Self.box255<bool>(true));
        return;
    }

    public publish_257(account: &signer) {
    label b0:
        move_to<Box<Self.Box255<bool>>>(move(account), Box<Self.Box255<bool>> { x: Self.box255<bool>(true) });
        return;
    }
}


//# run --signers 0x1
import 0x42.M;

main(account: signer) {
label b0:
    // hits VM_MAX_VALUE_DEPTH_REACHED
    M.publish_128(&account);
    return;
}

//# run --signers 0x2
import 0x42.M;

main(account: signer) {
label b0:
    M.publish_256(&account);
    return;
}


//# run --signers 0x3
import 0x42.M;

main(account: signer) {
label b0:
    M.publish_257(&account);
    return;
}
