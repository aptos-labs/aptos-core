env_vars:
  - key: "ACCOUNT"
    value: "velor-backup"
  - key: "CONTAINER"
    value: "backup-1"
  - key: "SUB_DIR"
    value: "e1"
  - key: "SAS"
    value: "?a=blah&b=blah&c=blah"
commands:
  create_backup: |
    # backup handle is the same with input backup name, output to stdout
    echo "$BACKUP_NAME"
  create_for_write: |
    # file handle is the file name under the folder with the name of the backup handle
    FILE_HANDLE="$BACKUP_HANDLE/$FILE_NAME"
    # output file handle to stdout
    echo "$FILE_HANDLE"
    # close stdout
    exec 1>&-
    # route stdin to file handle
    gzip -c | azcopy cp --from-to PipeBlob "https://$ACCOUNT.blob.core.windows.net/$CONTAINER/$SUB_DIR/$FILE_HANDLE$SAS" > /dev/null
  open_for_read: |
    # need to close stdin by "</dev/null" since azcopy gets confused about the direction of the pipe, even though we supply --from-to
    # route file handle content to stdout
    azcopy cp --from-to BlobPipe "https://$ACCOUNT.blob.core.windows.net/$CONTAINER/$SUB_DIR/$FILE_HANDLE$SAS" < /dev/null | gzip -cd
  save_metadata_line: |
    # save the line to a new file under the metadata folder
    FILE_HANDLE="metadata/$FILE_NAME"
    echo "$FILE_HANDLE"
    exec 1>&-
    gzip -c | azcopy cp --from-to PipeBlob "https://$ACCOUNT.blob.core.windows.net/$SUBDIR/$FILE_HANDLE$SAS" > /dev/null
  list_metadata_files: |
    # list files under the metadata folder
    (azcopy ls "https://$ACCOUNT.blob.core.windows.net/$CONTAINER/$SUB_DIR/metadata/$SAS" ||:) \
    | sed -ne "s#; .*##;s#INFO: \(.*\.meta\)#metadata/\1#p"
  backup_metadata_file: |
    # move metadata files 
    azcopy sync "https://$ACCOUNT.blob.core.windows.net/$CONTAINER/$SUB_DIR/metadata/$FILE_NAME$SAS" "https://$ACCOUNT.blob.core.windows.net/$CONTAINER/$SUB_DIR/metadata_backup/$FILE_NAME$SAS" --move=true

