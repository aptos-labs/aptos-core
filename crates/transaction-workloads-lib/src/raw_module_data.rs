// Copyright Â© Aptos Foundation
// SPDX-License-Identifier: Apache-2.0

// This file was generated. Do not modify!
//
// To update this code, run `cargo run -p module-publish` in aptos core.
// That test compiles the set of modules defined in
// `testsuite/simple/src/simple/sources/`
// and it writes the binaries here.
// The module name (prefixed with `MODULE_`) is a `Lazy` instance that returns the
// byte array of the module binary.
// This crate should also provide a Rust file that allows proper manipulation of each
// module defined below.

use aptos_transaction_generator_lib::entry_point_trait::PreBuiltPackages;
use once_cell::sync::Lazy;
use std::collections::HashMap;

#[rustfmt::skip]
pub static PACKAGE_NONCE_TABLE_METADATA: Lazy<Vec<u8>> = Lazy::new(|| {
	vec![
		11, 110, 111, 110, 99, 101, 95, 116, 97, 98, 108, 101, 1, 0, 0, 0, 0, 0,
		0, 0, 0, 64, 70, 65, 53, 50, 68, 67, 50, 55, 69, 48, 54, 69, 53, 57,
		53, 49, 70, 65, 51, 57, 53, 49, 49, 54, 55, 48, 70, 55, 51, 50, 55, 68,
		53, 51, 66, 66, 54, 50, 51, 68, 49, 69, 65, 49, 54, 68, 55, 55, 53, 52,
		69, 69, 51, 66, 66, 55, 68, 49, 66, 48, 48, 70, 65, 52, 158, 1, 31, 139,
		8, 0, 0, 0, 0, 0, 2, 255, 77, 141, 77, 10, 194, 48, 16, 133, 247, 57,
		69, 232, 38, 43, 211, 120, 0, 23, 85, 241, 18, 165, 148, 105, 50, 106, 104, 154,
		132, 76, 173, 130, 120, 119, 19, 168, 82, 152, 197, 188, 143, 247, 211, 70, 208, 35,
		220, 176, 99, 30, 38, 228, 7, 46, 124, 240, 26, 251, 25, 6, 135, 130, 45, 152,
		200, 6, 95, 248, 94, 42, 169, 4, 99, 173, 193, 136, 222, 160, 215, 22, 169, 99,
		77, 156, 3, 93, 82, 14, 63, 67, 26, 179, 241, 205, 93, 208, 224, 242, 87, 73,
		89, 111, 15, 138, 117, 55, 133, 5, 235, 235, 47, 176, 194, 191, 174, 248, 39, 79,
		128, 49, 9, 137, 74, 127, 124, 12, 206, 210, 29, 83, 191, 194, 82, 172, 94, 205,
		241, 116, 174, 190, 86, 212, 145, 224, 189, 0, 0, 0, 1, 11, 110, 111, 110, 99,
		101, 95, 116, 97, 98, 108, 101, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 1, 14, 65, 112, 116, 111, 115, 70, 114, 97, 109, 101,
		119, 111, 114, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
		11, 65, 112, 116, 111, 115, 83, 116, 100, 108, 105, 98, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 1, 10, 77, 111, 118, 101, 83, 116, 100, 108, 105,
		98, 0,
	]
});

#[rustfmt::skip]
pub static MODULE_NONCE_TABLE_NONCE_TABLE: Lazy<Vec<u8>> = Lazy::new(|| {
	vec![
		161, 28, 235, 11, 7, 0, 0, 10, 11, 1, 0, 14, 2, 14, 46, 3, 60, 87,
		4, 147, 1, 18, 5, 165, 1, 122, 7, 159, 2, 233, 2, 8, 136, 5, 64, 16,
		200, 5, 31, 10, 231, 5, 44, 12, 147, 6, 235, 1, 13, 254, 7, 6, 0, 0,
		1, 4, 1, 12, 1, 17, 1, 19, 1, 22, 1, 30, 0, 1, 7, 0, 1, 3,
		7, 2, 0, 0, 0, 0, 0, 5, 7, 0, 0, 6, 7, 0, 0, 10, 8, 0,
		2, 11, 4, 2, 3, 1, 0, 1, 0, 14, 8, 0, 3, 16, 6, 0, 6, 29,
		7, 1, 0, 0, 0, 18, 0, 1, 0, 1, 4, 20, 1, 2, 0, 1, 1, 21,
		1, 4, 2, 0, 0, 1, 5, 23, 5, 2, 1, 0, 1, 1, 24, 6, 1, 2,
		0, 0, 1, 2, 25, 8, 9, 2, 3, 0, 1, 2, 24, 10, 1, 2, 3, 0,
		1, 0, 26, 12, 1, 0, 1, 2, 27, 14, 15, 2, 3, 0, 1, 1, 28, 6,
		16, 2, 2, 0, 1, 0, 31, 17, 1, 0, 1, 2, 21, 1, 18, 2, 3, 4,
		1, 2, 3, 3, 2, 4, 3, 5, 7, 6, 7, 3, 13, 8, 7, 9, 3, 11,
		7, 1, 5, 0, 1, 3, 2, 8, 2, 3, 1, 11, 1, 2, 9, 0, 9, 1,
		1, 6, 9, 0, 3, 7, 11, 1, 2, 9, 0, 9, 1, 9, 0, 9, 1, 2,
		3, 8, 0, 2, 6, 11, 5, 2, 9, 0, 9, 1, 9, 0, 1, 1, 3, 7,
		11, 5, 2, 9, 0, 9, 1, 9, 0, 9, 1, 6, 3, 11, 1, 2, 8, 2,
		3, 3, 3, 8, 2, 7, 8, 4, 4, 5, 5, 3, 3, 1, 8, 2, 2, 7,
		11, 5, 2, 9, 0, 9, 1, 9, 0, 1, 7, 9, 1, 1, 11, 8, 1, 9,
		1, 1, 6, 12, 1, 11, 5, 2, 9, 0, 9, 1, 1, 8, 4, 11, 110, 111,
		110, 99, 101, 95, 116, 97, 98, 108, 101, 6, 66, 117, 99, 107, 101, 116, 6, 110,
		111, 110, 99, 101, 115, 10, 79, 114, 100, 101, 114, 101, 100, 77, 97, 112, 11, 111,
		114, 100, 101, 114, 101, 100, 95, 109, 97, 112, 8, 78, 111, 110, 99, 101, 75, 101,
		121, 10, 78, 111, 110, 99, 101, 69, 110, 116, 114, 121, 14, 115, 101, 110, 100, 101,
		114, 95, 97, 100, 100, 114, 101, 115, 115, 5, 110, 111, 110, 99, 101, 19, 116, 120,
		110, 95, 101, 120, 112, 105, 114, 97, 116, 105, 111, 110, 95, 116, 105, 109, 101, 12,
		78, 111, 110, 99, 101, 72, 105, 115, 116, 111, 114, 121, 5, 84, 97, 98, 108, 101,
		5, 116, 97, 98, 108, 101, 8, 110, 101, 120, 116, 95, 107, 101, 121, 21, 78, 111,
		110, 99, 101, 72, 105, 115, 116, 111, 114, 121, 83, 105, 103, 110, 101, 114, 67, 97,
		112, 10, 115, 105, 103, 110, 101, 114, 95, 99, 97, 112, 16, 83, 105, 103, 110, 101,
		114, 67, 97, 112, 97, 98, 105, 108, 105, 116, 121, 7, 97, 99, 99, 111, 117, 110,
		116, 16, 97, 100, 100, 95, 110, 111, 110, 99, 101, 95, 98, 117, 99, 107, 101, 116,
		9, 116, 105, 109, 101, 115, 116, 97, 109, 112, 11, 110, 111, 119, 95, 115, 101, 99,
		111, 110, 100, 115, 3, 110, 101, 119, 10, 97, 112, 116, 111, 115, 95, 104, 97, 115,
		104, 19, 115, 105, 112, 95, 104, 97, 115, 104, 95, 102, 114, 111, 109, 95, 118, 97,
		108, 117, 101, 3, 97, 100, 100, 8, 99, 111, 110, 116, 97, 105, 110, 115, 22, 99,
		104, 101, 99, 107, 95, 97, 110, 100, 95, 105, 110, 115, 101, 114, 116, 95, 110, 111,
		110, 99, 101, 10, 98, 111, 114, 114, 111, 119, 95, 109, 117, 116, 6, 117, 112, 115,
		101, 114, 116, 6, 79, 112, 116, 105, 111, 110, 6, 111, 112, 116, 105, 111, 110, 16,
		105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 95, 116, 97, 98, 108, 101, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 171, 205, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 1, 20, 99, 111, 109, 112, 105, 108, 97, 116, 105,
		111, 110, 95, 109, 101, 116, 97, 100, 97, 116, 97, 9, 0, 3, 50, 46, 48, 3,
		50, 46, 49, 0, 2, 1, 2, 11, 1, 2, 8, 2, 3, 3, 2, 3, 7, 5,
		8, 3, 9, 3, 4, 2, 2, 0, 11, 5, 2, 3, 8, 0, 13, 3, 2, 2,
		2, 7, 5, 8, 3, 6, 2, 1, 15, 8, 7, 0, 1, 4, 1, 2, 11, 62,
		10, 0, 41, 2, 3, 4, 5, 61, 17, 1, 12, 1, 56, 0, 12, 2, 6, 0,
		0, 0, 0, 0, 0, 0, 0, 12, 3, 10, 3, 6, 20, 0, 0, 0, 0, 0,
		0, 0, 35, 4, 34, 10, 0, 10, 1, 10, 3, 22, 12, 4, 14, 4, 56, 1,
		18, 3, 12, 5, 13, 2, 11, 5, 10, 1, 6, 220, 5, 0, 0, 0, 0, 0,
		0, 22, 56, 2, 11, 3, 6, 1, 0, 0, 0, 0, 0, 0, 0, 22, 12, 3,
		5, 10, 11, 0, 42, 2, 12, 6, 10, 6, 16, 0, 10, 6, 16, 1, 20, 56,
		3, 4, 45, 5, 53, 10, 6, 15, 0, 10, 6, 16, 1, 20, 11, 2, 18, 0,
		56, 4, 10, 6, 16, 1, 20, 6, 1, 0, 0, 0, 0, 0, 0, 0, 22, 11,
		6, 15, 1, 21, 2, 7, 3, 4, 1, 2, 13, 20, 11, 0, 42, 2, 11, 1,
		11, 2, 18, 3, 12, 4, 14, 4, 56, 5, 6, 232, 3, 0, 0, 0, 0, 0,
		0, 25, 12, 2, 15, 0, 11, 2, 56, 6, 15, 2, 11, 4, 11, 3, 56, 7,
		1, 2, 10, 3, 4, 0, 19, 8, 56, 8, 6, 0, 0, 0, 0, 0, 0, 0,
		0, 18, 2, 12, 1, 11, 0, 11, 1, 45, 2, 2, 2, 0, 2, 1, 0, 0,
		0,
	]
});

#[rustfmt::skip]
pub static MODULES_NONCE_TABLE: Lazy<Vec<Vec<u8>>> = Lazy::new(|| { vec![
	MODULE_NONCE_TABLE_NONCE_TABLE.to_vec(),
]});

#[rustfmt::skip]
pub static PACKAGE_TO_METADATA: Lazy<HashMap<String, Vec<u8>>> = Lazy::new(|| { HashMap::from([
	("nonce_table".to_string(), PACKAGE_NONCE_TABLE_METADATA.to_vec()),
])});

#[rustfmt::skip]
pub static PACKAGE_TO_MODULES: Lazy<HashMap<String, Vec<Vec<u8>>>> = Lazy::new(|| { HashMap::from([
	("nonce_table".to_string(), MODULES_NONCE_TABLE.to_vec()),
])});

#[rustfmt::skip]
pub static PACKAGE_TO_SCRIPT: Lazy<HashMap<String, Vec<u8>>> = Lazy::new(|| { HashMap::from([
])});

#[derive(Debug)]
pub struct PreBuiltPackagesImpl;

impl PreBuiltPackages for PreBuiltPackagesImpl {
    fn package_metadata(&self, package_name: &str) -> &[u8] {
        &PACKAGE_TO_METADATA[package_name]
    }

    fn package_modules(&self, package_name: &str) -> &[Vec<u8>] {
        &PACKAGE_TO_MODULES[package_name]
    }

    fn package_script(&self, package_name: &str) -> Option<&Vec<u8>> {
        PACKAGE_TO_SCRIPT.get(package_name)
    }
}
