[workspace]
resolver = "2"

members = [
    "api",
    "api/openapi-spec-generator",
    "api/test-context",
    "api/types",
    "velor-move/velor-abstract-gas-usage",
    "velor-move/velor-aggregator",
    "velor-move/velor-debugger",
    "velor-move/velor-e2e-comparison-testing",
    "velor-move/velor-gas-algebra",
    "velor-move/velor-gas-calibration",
    "velor-move/velor-gas-meter",
    "velor-move/velor-gas-profiling",
    "velor-move/velor-gas-schedule",
    "velor-move/velor-gas-schedule-updator",
    "velor-move/velor-memory-usage-tracker",
    "velor-move/velor-native-interface",
    "velor-move/velor-release-builder",
    "velor-move/velor-resource-viewer",
    "velor-move/velor-sdk-builder",
    "velor-move/velor-transaction-benchmarks",
    "velor-move/velor-transaction-simulation",
    "velor-move/velor-transactional-test-harness",
    "velor-move/velor-validator-interface",
    "velor-move/velor-vm",
    "velor-move/velor-vm-benchmarks",
    "velor-move/velor-vm-environment",
    "velor-move/velor-vm-logging",
    "velor-move/velor-vm-profiling",
    "velor-move/velor-vm-types",
    "velor-move/velor-workspace-server",
    "velor-move/block-executor",
    "velor-move/e2e-benchmark",
    "velor-move/e2e-move-tests",
    "velor-move/e2e-tests",
    "velor-move/e2e-testsuite",
    "velor-move/framework",
    "velor-move/framework/cached-packages",
    "velor-move/framework/table-natives",
    "velor-move/move-examples",
    "velor-move/mvhashmap",
    "velor-move/package-builder",
    "velor-move/replay-benchmark",
    "velor-move/script-composer",
    "velor-move/vm-genesis",
    "velor-node",
    "config",
    "config/global-constants",
    "consensus",
    "consensus/consensus-types",
    "consensus/safety-rules",
    "crates/velor",
    "crates/velor-admin-service",
    "crates/velor-api-tester",
    "crates/velor-bcs-utils",
    "crates/velor-bitvec",
    "crates/velor-build-info",
    "crates/velor-collections",
    "crates/velor-compression",
    "crates/velor-crypto",
    "crates/velor-crypto-derive",
    "crates/velor-debugger",
    "crates/velor-dkg",
    "crates/velor-drop-helper",
    "crates/velor-enum-conversion-derive",
    "crates/velor-faucet/cli",
    "crates/velor-faucet/core",
    "crates/velor-faucet/metrics-server",
    "crates/velor-faucet/service",
    "crates/velor-genesis",
    "crates/velor-github-client",
    "crates/velor-id-generator",
    "crates/velor-infallible",
    "crates/velor-inspection-service",
    "crates/velor-jwk-consensus",
    "crates/velor-keygen",
    "crates/velor-ledger",
    "crates/velor-localnet",
    "crates/velor-log-derive",
    "crates/velor-logger",
    "crates/velor-metrics-core",
    "crates/velor-network-checker",
    "crates/velor-node-identity",
    "crates/velor-openapi",
    "crates/velor-profiler",
    "crates/velor-proptest-helpers",
    "crates/velor-push-metrics",
    "crates/velor-rate-limiter",
    "crates/velor-rest-client",
    "crates/velor-retrier",
    "crates/velor-rosetta",
    "crates/velor-rosetta-cli",
    "crates/velor-runtimes",
    "crates/velor-speculative-state-helper",
    "crates/velor-system-utils",
    "crates/velor-telemetry",
    "crates/velor-telemetry-service",
    "crates/velor-temppath",
    "crates/velor-time-service",
    "crates/velor-transaction-filters",
    "crates/velor-warp-webserver",
    "crates/bounded-executor",
    "crates/channel",
    "crates/crash-handler",
    "crates/fallible",
    "crates/indexer",
    "crates/jwk-utils",
    "crates/node-resource-metrics",
    "crates/num-variants",
    "crates/proxy",
    "crates/reliable-broadcast",
    "crates/short-hex-str",
    "crates/transaction-emitter",
    "crates/transaction-emitter-lib",
    "crates/transaction-generator-lib",
    "crates/transaction-workloads-lib",
    "crates/validator-transaction-pool",
    "devtools/velor-cargo-cli",
    "dkg",
    "ecosystem/indexer-grpc/indexer-grpc-cache-worker",
    "ecosystem/indexer-grpc/indexer-grpc-data-service",
    "ecosystem/indexer-grpc/indexer-grpc-data-service-v2",
    "ecosystem/indexer-grpc/indexer-grpc-file-checker",
    "ecosystem/indexer-grpc/indexer-grpc-file-store",
    "ecosystem/indexer-grpc/indexer-grpc-file-store-backfiller",
    "ecosystem/indexer-grpc/indexer-grpc-fullnode",
    "ecosystem/indexer-grpc/indexer-grpc-in-memory-cache-benchmark",
    "ecosystem/indexer-grpc/indexer-grpc-manager",
    "ecosystem/indexer-grpc/indexer-grpc-server-framework",
    "ecosystem/indexer-grpc/indexer-grpc-table-info",
    "ecosystem/indexer-grpc/indexer-grpc-utils",
    "ecosystem/indexer-grpc/indexer-grpc-v2-file-store-backfiller",
    "ecosystem/indexer-grpc/indexer-test-transactions",
    "ecosystem/indexer-grpc/indexer-transaction-generator",
    "ecosystem/indexer-grpc/transaction-filter",
    "ecosystem/nft-metadata-crawler",
    "ecosystem/node-checker",
    "ecosystem/node-checker/fn-check-client",
    "execution/block-partitioner",
    "execution/executor",
    "execution/executor-benchmark",
    "execution/executor-service",
    "execution/executor-test-helpers",
    "execution/executor-types",
    "experimental/bulk-txn-submit",
    "experimental/execution/ptx-executor",
    "experimental/runtimes",
    "experimental/storage/hexy",
    "experimental/storage/layered-map",
    "keyless/pepper/common",
    "keyless/pepper/example-client-rust",
    "keyless/pepper/service",
    "mempool",
    "network/benchmark",
    "network/builder",
    "network/discovery",
    "network/framework",
    "network/memsocket",
    "network/netcore",
    "peer-monitoring-service/client",
    "peer-monitoring-service/server",
    "peer-monitoring-service/types",
    "protos/rust",
    "sdk",
    "secure/net",
    "secure/storage",
    "secure/storage/vault",
    "state-sync/velor-data-client",
    "state-sync/data-streaming-service",
    "state-sync/inter-component/consensus-notifications",
    "state-sync/inter-component/event-notifications",
    "state-sync/inter-component/mempool-notifications",
    "state-sync/inter-component/storage-service-notifications",
    "state-sync/state-sync-driver",
    "state-sync/storage-service/client",
    "state-sync/storage-service/server",
    "state-sync/storage-service/types",
    "storage/accumulator",
    "storage/velordb",
    "storage/backup/backup-cli",
    "storage/backup/backup-service",
    "storage/db-tool",
    "storage/indexer",
    "storage/indexer_schemas",
    "storage/jellyfish-merkle",
    "storage/rocksdb-options",
    "storage/schemadb",
    "storage/scratchpad",
    "storage/storage-interface",
    "testsuite/benchmark-workloads/package-generator",
    "testsuite/forge",
    "testsuite/forge-cli",
    "testsuite/fuzzer",
    "testsuite/fuzzer/fuzz",
    "testsuite/generate-format",
    "testsuite/smoke-test",
    "testsuite/testcases",
    "third_party/move/extensions/move-table-extension",
    "third_party/move/move-binary-format",
    "third_party/move/move-binary-format/serializer-tests",
    "third_party/move/move-borrow-graph",
    "third_party/move/move-bytecode-spec",
    "third_party/move/move-bytecode-verifier",
    "third_party/move/move-bytecode-verifier/bytecode-verifier-tests",
    "third_party/move/move-bytecode-verifier/fuzz",
    "third_party/move/move-bytecode-verifier/invalid-mutations",
    "third_party/move/move-bytecode-verifier/transactional-tests",
    "third_party/move/move-command-line-common",
    "third_party/move/move-compiler-v2",
    "third_party/move/move-compiler-v2/legacy-move-compiler",
    "third_party/move/move-compiler-v2/transactional-tests",
    "third_party/move/move-core/types",
    "third_party/move/move-examples",
    "third_party/move/move-ir-compiler",
    "third_party/move/move-ir-compiler/move-bytecode-source-map",
    "third_party/move/move-ir-compiler/move-ir-to-bytecode",
    "third_party/move/move-ir-compiler/move-ir-to-bytecode/syntax",
    "third_party/move/move-ir-compiler/transactional-tests",
    "third_party/move/move-ir/types",
    "third_party/move/move-model",
    "third_party/move/move-model/bytecode",
    "third_party/move/move-model/bytecode-test-utils",
    "third_party/move/move-model/bytecode/ast-generator-tests",
    "third_party/move/move-prover",
    "third_party/move/move-prover/boogie-backend",
    "third_party/move/move-prover/bytecode-pipeline",
    "third_party/move/move-prover/lab",
    "third_party/move/move-prover/move-abigen",
    "third_party/move/move-prover/move-docgen",
    "third_party/move/move-prover/move-errmapgen",
    "third_party/move/move-prover/test-utils",
    "third_party/move/move-symbol-pool",
    "third_party/move/move-vm/integration-tests",
    "third_party/move/move-vm/metrics",
    "third_party/move/move-vm/runtime",
    "third_party/move/move-vm/test-utils",
    "third_party/move/move-vm/transactional-tests",
    "third_party/move/move-vm/types",
    "third_party/move/testing-infra/transactional-test-runner",
    "third_party/move/tools/move-asm",
    "third_party/move/tools/move-bytecode-utils",
    "third_party/move/tools/move-bytecode-viewer",
    "third_party/move/tools/move-cli",
    "third_party/move/tools/move-coverage",
    "third_party/move/tools/move-decompiler",
    "third_party/move/tools/move-disassembler",
    "third_party/move/tools/move-linter",
    "third_party/move/tools/move-package",
    "third_party/move/tools/move-package-cache",
    "third_party/move/tools/move-package-manifest",
    "third_party/move/tools/move-package-resolver",
    "third_party/move/tools/move-resource-viewer",
    "third_party/move/tools/move-unit-test",
    "tools/calc-dep-sizes",
    "tools/compute-module-expansion-size",
    "types",
    "vm-validator",
]

# NOTE: default-members is the complete list of binaries that form the "production Velor codebase". These members should
# never include crates that require fuzzing features or test features. These are the crates we want built with no extra
# test-only code included.
#
# For more, see the "Conditional compilation for tests" section in documentation/coding_guidelines.md.
default-members = [
    "velor-node",
    "consensus/safety-rules",
    "crates/velor",
    "crates/velor-debugger",
    "crates/velor-faucet/service",
    "crates/velor-keygen",
    "crates/velor-rate-limiter",
    "crates/velor-rosetta",
    "crates/transaction-emitter",
    "velor-move/framework",
    "storage/backup/backup-cli",
    "ecosystem/node-checker",
]

# All workspace members should inherit these keys
# for package declarations.
[workspace.package]
authors = ["Velor Labs <opensource@velorlabs.com>"]
edition = "2021"
homepage = "https://velorlabs.com"
license = "Apache-2.0"
publish = false
repository = "https://github.com/velor-chain/velor-core"
rust-version = "1.85"

[workspace.dependencies]
# Internal crate dependencies.
# Please do not add any test features here: they should be declared by the individual crate.
velor = { path = "crates/velor" }
velor-accumulator = { path = "storage/accumulator" }
velor-admin-service = { path = "crates/velor-admin-service" }
velor-aggregator = { path = "velor-move/velor-aggregator" }
velor-api = { path = "api" }
velor-api-test-context = { path = "api/test-context" }
velor-api-types = { path = "api/types" }
velor-backup-cli = { path = "storage/backup/backup-cli" }
velor-backup-service = { path = "storage/backup/backup-service" }
velor-bcs-utils = { path = "crates/velor-bcs-utils" }
velor-bounded-executor = { path = "crates/bounded-executor" }
velor-block-executor = { path = "velor-move/block-executor" }
velor-bitvec = { path = "crates/velor-bitvec" }
velor-build-info = { path = "crates/velor-build-info" }
velor-cached-packages = { path = "velor-move/framework/cached-packages" }
velor-channels = { path = "crates/channel" }
velor-cli-common = { path = "crates/velor-cli-common" }
velor-collections = { path = "crates/velor-collections" }
velor-compression = { path = "crates/velor-compression" }
velor-consensus = { path = "consensus" }
velor-consensus-notifications = { path = "state-sync/inter-component/consensus-notifications" }
velor-consensus-types = { path = "consensus/consensus-types" }
velor-config = { path = "config" }
velor-crash-handler = { path = "crates/crash-handler" }
velor-crypto = { path = "crates/velor-crypto" }
velor-crypto-derive = { path = "crates/velor-crypto-derive" }
velor-data-client = { path = "state-sync/velor-data-client" }
velor-data-streaming-service = { path = "state-sync/data-streaming-service" }
velor-db = { path = "storage/velordb" }
velor-db-indexer = { path = "storage/indexer" }
velor-db-indexer-schemas = { path = "storage/indexer_schemas" }
velor-db-tool = { path = "storage/db-tool" }
velor-debugger = { path = "crates/velor-debugger" }
velor-dkg = { path = "crates/velor-dkg" }
velor-dkg-runtime = { path = "dkg" }
velor-drop-helper = { path = "crates/velor-drop-helper" }
velor-event-notifications = { path = "state-sync/inter-component/event-notifications" }
velor-executor = { path = "execution/executor" }
velor-block-partitioner = { path = "execution/block-partitioner" }
velor-enum-conversion-derive = { path = "crates/velor-enum-conversion-derive" }
velor-executor-service = { path = "execution/executor-service" }
velor-executor-test-helpers = { path = "execution/executor-test-helpers" }
velor-executor-types = { path = "execution/executor-types" }
velor-experimental-hexy = { path = "experimental/storage/hexy" }
velor-experimental-bulk-txn-submit = { path = "experimental/bulk-txn-submit" }
velor-experimental-layered-map = { path = "experimental/storage/layered-map" }
velor-experimental-ptx-executor = { path = "experimental/execution/ptx-executor" }
velor-experimental-runtimes = { path = "experimental/runtimes" }
velor-faucet-cli = { path = "crates/velor-faucet/cli" }
velor-faucet-core = { path = "crates/velor-faucet/core" }
velor-faucet-service = { path = "crates/velor-faucet/service" }
velor-faucet-metrics-server = { path = "crates/velor-faucet/metrics-server" }
velor-fallible = { path = "crates/fallible" }
velor-forge = { path = "testsuite/forge" }
velor-framework = { path = "velor-move/framework" }
fuzzer = { path = "testsuite/fuzzer" }
velor-abstract-gas-usage = { path = "velor-move/velor-abstract-gas-usage" }
velor-gas-meter = { path = "velor-move/velor-gas-meter" }
velor-gas-algebra = { path = "velor-move/velor-gas-algebra" }
velor-gas-calibration = { path = "velor-move/velor-gas-calibration" }
velor-gas-profiling = { path = "velor-move/velor-gas-profiling" }
velor-gas-schedule = { path = "velor-move/velor-gas-schedule" }
velor-gas-schedule-updator = { path = "velor-move/velor-gas-schedule-updator" }
velor-genesis = { path = "crates/velor-genesis" }
velor-github-client = { path = "crates/velor-github-client" }
velor-global-constants = { path = "config/global-constants" }
velor-id-generator = { path = "crates/velor-id-generator" }
velor-indexer = { path = "crates/indexer" }
velor-indexer-grpc-cache-worker = { path = "ecosystem/indexer-grpc/indexer-grpc-cache-worker" }
velor-indexer-grpc-data-service = { path = "ecosystem/indexer-grpc/indexer-grpc-data-service" }
velor-indexer-grpc-data-service-v2 = { path = "ecosystem/indexer-grpc/indexer-grpc-data-service-v2" }
velor-indexer-grpc-file-store = { path = "ecosystem/indexer-grpc/indexer-grpc-file-store" }
velor-indexer-grpc-file-checker = { path = "ecosystem/indexer-grpc/indexer-grpc-file-checker" }
velor-indexer-grpc-file-store-backfiller = { path = "ecosystem/indexer-grpc/indexer-grpc-file-store-backfiller" }
velor-indexer-grpc-fullnode = { path = "ecosystem/indexer-grpc/indexer-grpc-fullnode" }
velor-indexer-grpc-in-memory-cache-benchmark = { path = "ecosystem/indexer-grpc/indexer-grpc-in-memory-cache-benchmark" }
velor-indexer-grpc-manager = { path = "ecosystem/indexer-grpc/indexer-grpc-manager" }
velor-indexer-grpc-table-info = { path = "ecosystem/indexer-grpc/indexer-grpc-table-info" }
velor-indexer-test-transactions = { path = "ecosystem/indexer-grpc/indexer-test-transactions" }
velor-indexer-grpc-utils = { path = "ecosystem/indexer-grpc/indexer-grpc-utils" }
velor-indexer-grpc-v2-file-store-backfiller = { path = "ecosystem/indexer-grpc/indexer-grpc-v2-file-store-backfiller" }
velor-indexer-grpc-server-framework = { path = "ecosystem/indexer-grpc/indexer-grpc-server-framework" }
velor-indexer-transaction-generator = { path = "ecosystem/indexer-grpc/indexer-transaction-generator" }
velor-infallible = { path = "crates/velor-infallible" }
velor-inspection-service = { path = "crates/velor-inspection-service" }
velor-jellyfish-merkle = { path = "storage/jellyfish-merkle" }
velor-jwk-consensus = { path = "crates/velor-jwk-consensus" }
velor-jwk-utils = { path = "crates/jwk-utils" }
velor-keygen = { path = "crates/velor-keygen" }
velor-language-e2e-tests = { path = "velor-move/e2e-tests" }
velor-ledger = { path = "crates/velor-ledger" }
velor-localnet = { path = "crates/velor-localnet" }
velor-log-derive = { path = "crates/velor-log-derive" }
velor-logger = { path = "crates/velor-logger" }
velor-memory-usage-tracker = { path = "velor-move/velor-memory-usage-tracker" }
velor-mempool = { path = "mempool" }
velor-mempool-notifications = { path = "state-sync/inter-component/mempool-notifications" }
velor-memsocket = { path = "network/memsocket" }
velor-metrics-core = { path = "crates/velor-metrics-core" }
velor-move-debugger = { path = "velor-move/velor-debugger" }
velor-move-examples = { path = "velor-move/move-examples" }
velor-move-e2e-benchmark = { path = "velor-move/e2e-benchmark" }
velor-mvhashmap = { path = "velor-move/mvhashmap" }
velor-native-interface = { path = "velor-move/velor-native-interface" }
velor-netcore = { path = "network/netcore" }
velor-network = { path = "network/framework" }
velor-network-benchmark = { path = "network/benchmark" }
velor-network-builder = { path = "network/builder" }
velor-network-checker = { path = "crates/velor-network-checker" }
velor-network-discovery = { path = "network/discovery" }
velor-nft-metadata-crawler = { path = "ecosystem/nft-metadata-crawler" }
velor-node = { path = "velor-node" }
velor-node-checker = { path = "ecosystem/node-checker" }
velor-node-identity = { path = "crates/velor-node-identity" }
velor-node-resource-metrics = { path = "crates/node-resource-metrics" }
velor-num-variants = { path = "crates/num-variants" }
velor-openapi = { path = "crates/velor-openapi" }
velor-package-builder = { path = "velor-move/package-builder" }
velor-peer-monitoring-service-client = { path = "peer-monitoring-service/client" }
velor-peer-monitoring-service-server = { path = "peer-monitoring-service/server" }
velor-peer-monitoring-service-types = { path = "peer-monitoring-service/types" }
velor-keyless-common = { path = "keyless/common" }
velor-keyless-pepper-common = { path = "keyless/pepper/common" }
velor-keyless-pepper-service = { path = "keyless/pepper/service" }
velor-profiler = { path = "crates/velor-profiler" }
velor-proptest-helpers = { path = "crates/velor-proptest-helpers" }
velor-protos = { path = "protos/rust" }
velor-proxy = { path = "crates/proxy" }
velor-push-metrics = { path = "crates/velor-push-metrics" }
velor-rate-limiter = { path = "crates/velor-rate-limiter" }
velor-release-builder = { path = "velor-move/velor-release-builder" }
velor-reliable-broadcast = { path = "crates/reliable-broadcast" }
velor-replay-benchmark = { path = "velor-move/replay-benchmark" }
velor-resource-viewer = { path = "velor-move/velor-resource-viewer" }
velor-rest-client = { path = "crates/velor-rest-client" }
velor-retrier = { path = "crates/velor-retrier" }
velor-rocksdb-options = { path = "storage/rocksdb-options" }
velor-rosetta = { path = "crates/velor-rosetta" }
velor-runtimes = { path = "crates/velor-runtimes" }
velor-safety-rules = { path = "consensus/safety-rules" }
velor-schemadb = { path = "storage/schemadb" }
velor-scratchpad = { path = "storage/scratchpad" }
velor-script-composer = { path = "velor-move/script-composer" }
velor-sdk = { path = "sdk" }
velor-sdk-builder = { path = "velor-move/velor-sdk-builder" }
velor-secure-net = { path = "secure/net" }
velor-secure-storage = { path = "secure/storage" }
velor-short-hex-str = { path = "crates/short-hex-str" }
velor-speculative-state-helper = { path = "crates/velor-speculative-state-helper" }
velor-state-sync-driver = { path = "state-sync/state-sync-driver" }
velor-storage-interface = { path = "storage/storage-interface" }
velor-storage-service-client = { path = "state-sync/storage-service/client" }
velor-storage-service-notifications = { path = "state-sync/inter-component/storage-service-notifications" }
velor-storage-service-types = { path = "state-sync/storage-service/types" }
velor-storage-service-server = { path = "state-sync/storage-service/server" }
velor-system-utils = { path = "crates/velor-system-utils" }
velor-transaction-filter = { path = "ecosystem/indexer-grpc/transaction-filter" }
velor-transaction-filters = { path = "crates/velor-transaction-filters" }
velor-telemetry = { path = "crates/velor-telemetry" }
velor-telemetry-service = { path = "crates/velor-telemetry-service" }
velor-temppath = { path = "crates/velor-temppath" }
velor-testcases = { path = "testsuite/testcases" }
velor-time-service = { path = "crates/velor-time-service", features = [
    "async",
] }
velor-transaction-emitter-lib = { path = "crates/transaction-emitter-lib" }
velor-transaction-generator-lib = { path = "crates/transaction-generator-lib" }
velor-transaction-workloads-lib = { path = "crates/transaction-workloads-lib" }
velor-transaction-simulation = { path = "velor-move/velor-transaction-simulation" }
velor-transactional-test-harness = { path = "velor-move/velor-transactional-test-harness" }
velor-types = { path = "types" }
velor-validator-interface = { path = "velor-move/velor-validator-interface" }
velor-validator-transaction-pool = { path = "crates/validator-transaction-pool" }
velor-vault-client = { path = "secure/storage/vault" }
velor-vm = { path = "velor-move/velor-vm" }
velor-vm-environment = { path = "velor-move/velor-vm-environment" }
velor-vm-logging = { path = "velor-move/velor-vm-logging" }
velor-vm-genesis = { path = "velor-move/vm-genesis" }
velor-vm-types = { path = "velor-move/velor-vm-types" }
velor-vm-validator = { path = "vm-validator" }
velor-workspace-server = { path = "velor-move/velor-workspace-server" }
velor-warp-webserver = { path = "crates/velor-warp-webserver" }
velor-cargo-cli = { path = "devtools/velor-cargo-cli" }

# External crate dependencies.
# Please do not add any test features here: they should be declared by the individual crate.
aes-gcm = "0.10.3"
ahash = { version = "0.8.11", features = ["serde"] }
atty = "0.2.14"
nalgebra = "0.32"
float-cmp = "0.9.0"
again = "0.1.2"
ambassador = "0.4.1"
annotate-snippets = "0.11.5"
anyhow = "1.0.98"
anstyle = "1.0.1"
arbitrary = { version = "1.4.1", features = ["derive"] }
arc-swap = "1.6.0"
arr_macro = "0.2.1"
ark-bls12-381 = "0.4.0"
ark-bn254 = "0.4.0"
ark-ec = "0.4.0"
ark-ff = "0.4.0"
ark-groth16 = "0.4.0"
ark-relations = "0.4.0"
ark-serialize = "0.4.0"
ark-std = { version = "0.4.0", features = ["getrandom"] }
velor-indexer-processor-sdk = { git = "https://github.com/velor-chain/velor-indexer-processor-sdk.git", branch = "main", features = [
    "postgres_partial",
] }
velor-moving-average = { git = "https://github.com/velor-chain/velor-indexer-processors.git", branch = "main" }
assert_approx_eq = "1.1.0"
async-channel = "1.7.1"
async-mutex = "1.4.0"
async-recursion = "1.0.5"
async-trait = "0.1.53"
axum = "0.7.5"
base64 = "0.13.0"
backoff = { version = "0.4.0", features = ["tokio"] }
backtrace = "0.3.58"
bcs = { git = "https://github.com/velor-chain/bcs.git", rev = "d31fab9d81748e2594be5cd5cdf845786a30562d" }
better_any = "0.1.1"
bigdecimal = { version = "0.4.0", features = ["serde"] }
version-compare = "0.1.1"
bitvec = "1.0.1"
blake2 = "0.10.4"
blake2-rfc = "0.2.18"
blst = "0.3.11"
# The __private_bench feature exposes the Fp12 type which we need to implement a multi-threaded multi-pairing.
blstrs = { version = "0.7.1", features = ["serde", "__private_bench"] }
bollard = "0.15"
build_html = "2.5.0"
bulletproofs = { version = "4.0.0" }
byteorder = "1.4.3"
bytes = { version = "1.4.0", features = ["serde"] }
bytesize = { version = "1.3.0" }
camino = { version = "1.1.6" }
chrono = { version = "0.4.19", features = ["clock", "serde"] }
chrono-tz = "0.10.1"
cfg-if = "1.0.0"
ciborium = "0.2"
claims = "0.7"
clap = { version = "4.3.9", features = [
    "derive",
    "env",
    "unstable-styles",
    "wrap_help",
] }
clap-verbosity-flag = "2.1.1"
clap_complete = "4.4.1"
cloud-storage = { version = "0.11.1", features = [
    "global-client",
    "rustls-tls",
], default-features = false }
codespan = "0.11.1"
codespan-reporting = "0.11.1"
colored = "2.0.0"
concurrent-queue = "2.2.0"
console-subscriber = "0.3.0"
core_affinity = "0.8.1"
coset = "0.3"
criterion = "0.3.5"
criterion-cpu-time = "0.1.0"
crossbeam = "0.8.1"
crossbeam-channel = "0.5.4"
crossterm = "0.26.1"
csv = "1.2.1"
curve25519-dalek = "3"
curve25519-dalek-ng = "4"
dashmap = { version = "7.0.0-rc2", features = ["inline-more"] }
datatest-stable = "0.1.1"
debug-ignore = { version = "1.0.3", features = ["serde"] }
derivative = "2.2.0"
derivation-path = "0.2.0"
derive_builder = "0.20.0"
determinator = "0.12.0"
derive_more = "0.99.11"
diesel = { version = "2.2.0", features = ["uuid"] }
# Use the crate version once this feature gets released on crates.io:
# https://github.com/weiznich/diesel_async/commit/e165e8c96a6c540ebde2d6d7c52df5c5620a4bf1
diesel-async = { git = "https://github.com/weiznich/diesel_async.git", rev = "e3beac66cd41ab53d78a10328bb72f272103e5d1", features = [
    "async-connection-wrapper",
    "postgres",
    "bb8",
    "tokio",
] }
diesel_migrations = { version = "2.1.0", features = ["postgres"] }
difference = "2.0.0"
digest = "0.9.0"
dir-diff = "0.3.2"
dirs = "5.0.1"
dirs-next = "2.0.0"
dunce = "1.0.4"
ed25519-dalek = { version = "1.0.1", features = ["std", "serde"] }
ed25519-dalek-bip32 = "0.2.0"
either = "1.6.1"
enum_dispatch = "0.3.12"
env_logger = "0.10.0"
equivalent = "1.0"
erased-serde = "0.3.13"
ethnum = "1.5.0"
ethers = { version = "2" }
dearbitrary = { version = "1.0.4", features = ["derive"] }
fail = "0.5.0"
ff = { version = "0.13", features = ["derive"] }
field_count = "0.1.1"
figment = { version = "0.10.19", features = ["yaml", "env"] }
file_diff = "1.0.0"
firebase-token = { git = "https://github.com/velor-chain/firebase-token", rev = "34ea512d3d1fad6c11df3e7d82ff72beccc05836" }
firestore = "0.43.0"
fixed = "1.25.1"
flate2 = "1.0.24"
flexi_logger = "0.27.4"
futures = "0.3.29"
futures-channel = "0.3.29"
futures-core = "0.3.29"
futures-util = "0.3.29"
fxhash = "0.2.1"
fs2 = "0.4.3"
getrandom = "0.2.2"
gcp-bigquery-client = "0.16.8"
get_if_addrs = "0.5.3"
git2 = "0.16.1"
glob = "0.3.0"
goldenfile = "1.5.2"
google-cloud-storage = "0.13.0"
group = "0.13"
guppy = "0.17.5"
handlebars = "4.2.2"
hashbrown = "0.14.3"
heck = "0.4.1"
hex = { version = "0.4.3", features = ["serde"] }
hex-literal = "0.3.4"
hkdf = "0.10.0"
hmac = "0.12.0"
hostname = "0.3.1"
http = "0.2.9"
httpmock = "0.6.8"
hyper = { version = "0.14.18", features = ["full"] }
im = "15.0.0"
image = "0.24.5"
indexmap = "2.7.0"
indicatif = "0.15.0"
indoc = "1.0.6"
inferno = "0.11.14"
internment = { version = "0.5.0", features = ["arc"] }
ipnet = "2.5.0"
itertools = "0.13"
jemallocator = { package = "tikv-jemallocator", version = "0.6.0", features = [
    "profiling",
    "unprefixed_malloc_on_supported_platforms",
] }
jemalloc-ctl = { package = "tikv-jemalloc-ctl", version = "0.6.0" }
jemalloc-sys = { package = "tikv-jemalloc-sys", version = "0.6.0" }
json-patch = "0.2.6"
jsonwebtoken = "8.1"
jwt = "0.16.0"
lazy_static = "1.4.0"
libc = "0.2.147"
libfuzzer-sys = "0.4.6"
libsecp256k1 = "0.7.0"
libtest-mimic = "0.5.2"
log = "0.4.17"
lru = "0.16.0"
lz4 = "1.28.0"
maplit = "1.0.2"
merlin = "3"
memchr = "2.7.4"
memory-stats = "1.0.0"
mime = "0.3.16"
mini-moka = { version = "0.10.3", features = ["sync"] }
mirai-annotations = "1.12.0"
mockall = "0.11.4"
more-asserts = "0.3.0"
named-lock = "0.2.0"
native-tls = "0.2.10"
neptune = { version = "13.0.0", default-features = false }
ntest = "0.9.3"
num = "0.4.0"
num-bigint = { version = "0.3.2", features = ["rand"] }
num_cpus = "1.13.1"
num-derive = "0.4.2"
num-integer = "0.1.42"
num-traits = "0.2.19"
once_cell = "1.10.0"
open = "5.3.1"
ordered-float = "3.9.1"
ouroboros = "0.15.6"
owo-colors = "3.5.0"
p256 = { version = "0.13.2" }
prettydiff = "0.6.2"
primitive-types = { version = "0.10" }
signature = "2.1.0"
pairing = "0.23"
parking_lot = "0.12.0"
paste = "1.0.7"
pathsearch = "0.2.0"
passkey-authenticator = { version = "0.2.0", features = ["testable"] }
passkey-client = { version = "0.2.0" }
passkey-types = { version = "0.2.0" }
pbjson = "0.5.1"
percent-encoding = "2.1.0"
petgraph = "0.6.5"
pin-project = "1.0.10"
plotters = { version = "0.3.5", default-features = false }
poem = { version = "3.1.3", features = ["anyhow", "compression", "rustls"] }
poem-openapi = { version = "5.1.2", features = ["swagger-ui", "url"] }
poem-openapi-derive = "5.1.1"
poseidon-ark = { git = "https://github.com/arnaucube/poseidon-ark.git", rev = "6d2487aa1308d9d3860a2b724c485d73095c1c68" }
pprof = { version = "0.11", features = ["flamegraph", "protobuf-codec"] }
pretty = "0.10.0"
pretty_assertions = "1.2.1"
# We set default-features to false so we don't onboard the libpq dep. See more here:
# https://github.com/velor-chain/velor-core/pull/12568
processor = { git = "https://github.com/velor-chain/velor-indexer-processors-v2.git", branch = "main", default-features = false }
procfs = "0.14.1"
proc-macro2 = "1.0.38"
project-root = "0.2.2"
prometheus = { version = "0.13.3", default-features = false }
prometheus-http-query = "0.5.2"
prometheus-parse = "0.2.4"
proptest = "1.4.0"
proptest-derive = "0.5.1"
prost = { version = "0.13.4", features = ["no-recursion-limit"] }
prost-types = "0.13.3"
quanta = "0.10.1"
quick_cache = "0.5.1"
quick-junit = "0.5.0"
quote = "1.0.18"
rand = "0.7.3"
rand_core = "0.5.1"
random_word = "0.3.0"
rayon = "1.5.2"
redis = { version = "0.22.3", features = [
    "tokio-comp",
    "script",
    "connection-manager",
] }
redis-test = { version = "0.1.1", features = ["aio"] }
ref-cast = "1.0.6"
regex = "1.9.3"
reqwest = { version = "0.11.11", features = [
    "blocking",
    "cookies",
    "json",
    "multipart",
    "stream",
] }
reqwest-middleware = "0.2.0"
reqwest-retry = "0.2.1"
ring = { version = "0.16.20", features = ["std"] }
ripemd = "0.1.1"
rlimit = "0.10.2"
rocksdb = { version = "0.24.0", features = ["lz4"] }
rsa = { version = "0.9.6" }
rstack-self = { version = "0.3.0", features = ["dw"], default-features = false }
rstest = "0.15.0"
rusty-fork = "0.3.0"
rustversion = "1.0.14"
scopeguard = "1.2.0"
sha2 = "0.9.3"
sha256 = "1.4.0"
sha2_0_10_6 = { package = "sha2", version = "0.10.6" }
sha3 = "0.9.1"
shell-words = "1.0.0"
siphasher = "0.3.10"
serde = { version = "1.0.193", features = ["derive", "rc"] }
serde-big-array = "0.5.1"
serde_bytes = "0.11.6"
serde_json = { version = "1.0.81", features = [
    "preserve_order",
    "arbitrary_precision",
] } # Note: arbitrary_precision is required to parse u256 in JSON
serde_repr = "0.1"
serde_merge = "0.1.3"
serde-name = "0.1.1"
serde-generate = { git = "https://github.com/velor-chain/serde-reflection", rev = "73b6bbf748334b71ff6d7d09d06a29e3062ca075" }
serde-reflection = { git = "https://github.com/velor-chain/serde-reflection", rev = "73b6bbf748334b71ff6d7d09d06a29e3062ca075" }
serde_with = "3.4.0"
serde_yaml = "0.8.24"
set_env = "1.3.4"
shadow-rs = "0.16.2"
simplelog = "0.9.0"
smallbitvec = "2.5.1"
smallvec = "1.8.0"
static_assertions = "1.1.0"
status-line = "0.2.0"
strum = "0.27.1"
strum_macros = "0.27.1"
sugars = "3.0.1"
syn = { version = "1.0.92", features = ["derive", "extra-traits"] }
sysinfo = "0.28.4"
tar = "0.4.40"
tempfile = "3.3.0"
tera = "1.16.0"
termcolor = "1.1.2"
test-case = "3.1.0"
textwrap = "0.15.0"
thiserror = "1.0.37"
threadpool = "1.8.1"
thread_local = "1.1.7"
tiny-bip39 = "0.8.2"
tiny-keccak = { version = "2.0.2", features = ["keccak", "sha3"] }
tracing = "0.1.37"
tracing-subscriber = { version = "0.3.17", features = ["json", "env-filter"] }
trybuild = "1.0.80"
try_match = "0.4.2"
tokio = { version = "1.35.1", features = ["full"] }
tokio-io-timeout = "1.2.0"
tokio-retry = "0.3.0"
tokio-scoped = { version = "0.2.0" }
tokio-stream = { version = "0.1.14", features = ["fs"] }
tokio-test = "0.4.1"
tokio-util = { version = "0.7.2", features = ["compat", "codec"] }
toml = "0.7.4"
tonic = { version = "0.12.3", features = [
    "tls-roots",
    "transport",
    "prost",
    "gzip",
    "codegen",
    "zstd",
] }
tonic-reflection = "0.12.3"
topological-sort = "0.2.2"
triomphe = "0.1.9"
tui = "0.19.0"
typed-arena = "2.0.2"
typenum = "1.17.0"
uint = "0.9.4"
ureq = { version = "1.5.4", features = [
    "json",
    "native-tls",
], default-features = false }
url = { version = "2.4.0", features = ["serde"] }
uuid = { version = "1.0.0", features = ["v4", "serde"] }
variant_count = "1.1.0"
walkdir = "2.3.3"
warp = { version = "0.3.5", features = ["tls"] }
warp-reverse-proxy = "1.0.0"
wasm-bindgen = "0.2.100"
wasm-bindgen-futures = "0.4.50"
which = "4.2.5"
whoami = "1.5.0"
# This allows for zeroize 1.6 to be used. Version 1.2.0 of x25519-dalek locks zeroize to 1.3.
x25519-dalek = { git = "https://github.com/velor-chain/x25519-dalek", rev = "b9cdbaf36bf2a83438d9f660e5a708c82ed60d8e" }
z3tracer = "0.8.0"

# MOVE DEPENDENCIES
move-abigen = { path = "third_party/move/move-prover/move-abigen" }
move-asm = { path = "third_party/move/tools/move-asm" }
move-binary-format = { path = "third_party/move/move-binary-format" }
move-borrow-graph = { path = "third_party/move/move-borrow-graph" }
move-bytecode-source-map = { path = "third_party/move/move-ir-compiler/move-bytecode-source-map" }
move-bytecode-spec = { path = "third_party/move/move-bytecode-spec" }
move-bytecode-verifier = { path = "third_party/move/move-bytecode-verifier" }
move-bytecode-verifier-invalid-mutations = { path = "third_party/move/move-bytecode-verifier/invalid-mutations" }
move-bytecode-viewer = { path = "third_party/move/tools/move-bytecode-viewer" }
move-bytecode-utils = { path = "third_party/move/tools/move-bytecode-utils" }
move-cli = { path = "third_party/move/tools/move-cli" }
move-command-line-common = { path = "third_party/move/move-command-line-common" }
move-coverage = { path = "third_party/move/tools/move-coverage" }
legacy-move-compiler = { path = "third_party/move/move-compiler-v2/legacy-move-compiler" }
move-compiler-v2 = { path = "third_party/move/move-compiler-v2" }
move-core-types = { path = "third_party/move/move-core/types" }
move-decompiler = { path = "third_party/move/tools/move-decompiler" }
move-docgen = { path = "third_party/move/move-prover/move-docgen" }
move-disassembler = { path = "third_party/move/tools/move-disassembler" }
move-errmapgen = { path = "third_party/move/move-prover/move-errmapgen" }
move-ir-types = { path = "third_party/move/move-ir/types" }
move-ir-compiler = { path = "third_party/move/move-ir-compiler" }
move-ir-to-bytecode = { path = "third_party/move/move-ir-compiler/move-ir-to-bytecode" }
move-linter = { path = "third_party/move/tools/move-linter" }
move-model = { path = "third_party/move/move-model" }
move-package = { path = "third_party/move/tools/move-package" }
move-package-cache = { path = "third_party/move/tools/move-package-cache" }
move-package-manifest = { path = "third_party/move/tools/move-package-manifest" }
move-prover = { path = "third_party/move/move-prover" }
move-prover-boogie-backend = { path = "third_party/move/move-prover/boogie-backend" }
move-prover-bytecode-pipeline = { path = "third_party/move/move-prover/bytecode-pipeline" }
move-prover-test-utils = { path = "third_party/move/move-prover/test-utils" }
move-prover-lab = { path = "third_party/move/move-prover/lab" }
velor-move-stdlib = { path = "velor-move/framework/move-stdlib" }
velor-table-natives = { path = "velor-move/framework/table-natives" }
move-resource-viewer = { path = "third_party/move/tools/move-resource-viewer" }
move-stackless-bytecode = { path = "third_party/move/move-model/bytecode" }
move-stackless-bytecode-test-utils = { path = "third_party/move/move-model/bytecode-test-utils" }
move-symbol-pool = { path = "third_party/move/move-symbol-pool" }
move-table-extension = { path = "third_party/move/extensions/move-table-extension" }
move-transactional-test-runner = { path = "third_party/move/testing-infra/transactional-test-runner" }
move-unit-test = { path = "third_party/move/tools/move-unit-test", features = [
    "table-extension",
] }
move-vm-metrics = { path = "third_party/move/move-vm/metrics" }
move-vm-runtime = { path = "third_party/move/move-vm/runtime" }
move-vm-test-utils = { path = "third_party/move/move-vm/test-utils", features = [
    "table-extension",
] }
move-vm-types = { path = "third_party/move/move-vm/types" }

[profile.release]
debug = true
overflow-checks = true

# The performance build is not currently recommended
# for production deployments. It has not been widely tested.
[profile.performance]
inherits = "release"
opt-level = 3
debug = true
overflow-checks = true
lto = "thin"
codegen-units = 1

[profile.cli]
inherits = "release"
debug = false
opt-level = "z"
lto = "thin"
strip = true
codegen-units = 1

[profile.ci]
inherits = "release"
debug = "line-tables-only"
overflow-checks = true
debug-assertions = true

[profile.bench]
debug = true

[patch.crates-io]
serde-reflection = { git = "https://github.com/velor-chain/serde-reflection", rev = "73b6bbf748334b71ff6d7d09d06a29e3062ca075" }
merlin = { git = "https://github.com/velor-chain/merlin" }
futures = { git = "https://github.com/velor-chain/futures-rs", branch = "backport" }
futures-channel = { git = "https://github.com/velor-chain/futures-rs", branch = "backport" }
futures-executor = { git = "https://github.com/velor-chain/futures-rs", branch = "backport" }
futures-core = { git = "https://github.com/velor-chain/futures-rs", branch = "backport" }
futures-util = { git = "https://github.com/velor-chain/futures-rs", branch = "backport" }
futures-sink = { git = "https://github.com/velor-chain/futures-rs", branch = "backport" }
futures-io = { git = "https://github.com/velor-chain/futures-rs", branch = "backport" }
futures-task = { git = "https://github.com/velor-chain/futures-rs", branch = "backport" }
futures-macro = { git = "https://github.com/velor-chain/futures-rs", branch = "backport" }

# There is a circular dependency between velor-core, velor-indexer-processor-sdk, and velor-indexer-processors-v2,
# so we cannot simply change the version and package for `jemalloc-sys` in one repo without running into conflicts.
# We have to keep this shim until everything uses the same jemalloc dependency.
jemalloc-sys = { git = "https://github.com/velor-chain/jemalloc-sys-shim", rev = "e0920246dd74303fab9a14b990768c6ac990a59b" }
