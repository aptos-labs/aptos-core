name: Rust Unit Tests
description: Runs all Rust unit tests
inputs:
  GIT_CREDENTIALS:
    description: "Optional credentials to pass to git. Useful if you need to pull private repos for dependencies"
    required: false
  TRUNK_API_TOKEN:
    description: "Api key for uploading test results to trunk.io"
    required: false

runs:
  using: composite
  steps:
    # The source code must be checkout out by the workflow that invokes this action.

    # Check the VM features
    - name: Check VM features
      run: cargo test --profile ci --locked --features check-vm-features -p aptos-node
      shell: bash

    # Run the rust doc tests
    - name: Run rust doc tests
      run: cargo test --profile ci --locked --doc --workspace --exclude aptos-node-checker
      shell: bash

    # Run a postgres database
    - name: Run postgres database
      run: docker run --detach -p 5432:5432 cimg/postgres:14.2
      shell: bash

    # Run the rust unit tests
    - name: Run all unit tests with txn payload v1 format
      run: |
        cargo nextest run \
          --profile ci \
          --cargo-profile ci \
          --locked \
          --workspace \
          --exclude smoke-test \
          --exclude aptos-testcases \
          --exclude aptos-keyless-circuit \
          --retries 3 \
          --no-fail-fast \
          --message-format libtest-json > nextest_output.json || python3 .github/actions/rust-unit-tests/nextest_summary.py nextest_output.json "$GITHUB_STEP_SUMMARY" -f
        python3 .github/actions/rust-unit-tests/nextest_summary.py nextest_output.json "$GITHUB_STEP_SUMMARY" || echo "summary generation had an error"
        rm nextest_output.json
      shell: bash
      env:
        TXN_PAYLOAD_V2_FORMAT: "false",
        NEXTEST_EXPERIMENTAL_LIBTEST_JSON: 1
        INDEXER_DATABASE_URL: postgresql://postgres@localhost/postgres
        RUST_MIN_STACK: "4297152"
        MVP_TEST_ON_CI: "true"
        SOLC_EXE: /home/runner/bin/solc
        Z3_EXE: /home/runner/bin/z3
        CVC5_EXE: /home/runner/bin/cvc5
        DOTNET_ROOT: /home/runner/.dotnet
        BOOGIE_EXE: /home/runner/.dotnet/tools/boogie

    - name: Run all unit tests with txn payload v2 format
      run: |
        cargo nextest run \
          --profile ci \
          --cargo-profile ci \
          --locked \
          --workspace \
          --exclude smoke-test \
          --exclude aptos-testcases \
          --exclude aptos-keyless-circuit \
          --retries 3 \
          --no-fail-fast \
          --message-format libtest-json > nextest_output.json || python3 .github/actions/rust-unit-tests/nextest_summary.py nextest_output.json "$GITHUB_STEP_SUMMARY" -f
        python3 .github/actions/rust-unit-tests/nextest_summary.py nextest_output.json "$GITHUB_STEP_SUMMARY" || echo "summary generation had an error"
        rm nextest_output.json
      shell: bash
      env:
        TXN_PAYLOAD_V2_FORMAT: true,
        NEXTEST_EXPERIMENTAL_LIBTEST_JSON: 1
        INDEXER_DATABASE_URL: postgresql://postgres@localhost/postgres
        RUST_MIN_STACK: "4297152"
        MVP_TEST_ON_CI: "true"
        SOLC_EXE: /home/runner/bin/solc
        Z3_EXE: /home/runner/bin/z3
        CVC5_EXE: /home/runner/bin/cvc5
        DOTNET_ROOT: /home/runner/.dotnet
        BOOGIE_EXE: /home/runner/.dotnet/tools/boogie

    - name: Run all unit tests with orderless transactions enabled
      run: |
        cargo nextest run \
          --profile ci \
          --cargo-profile ci \
          --locked \
          --workspace \
          --exclude smoke-test \
          --exclude aptos-testcases \
          --exclude aptos-keyless-circuit \
          --retries 3 \
          --no-fail-fast \
          --message-format libtest-json > nextest_output.json || python3 .github/actions/rust-unit-tests/nextest_summary.py nextest_output.json "$GITHUB_STEP_SUMMARY" -f
        python3 .github/actions/rust-unit-tests/nextest_summary.py nextest_output.json "$GITHUB_STEP_SUMMARY" || echo "summary generation had an error"
        rm nextest_output.json
      shell: bash
      env:
        TXN_PAYLOAD_V2_FORMAT: true,
        USE_ORDERLESS_TXNS: true,
        NEXTEST_EXPERIMENTAL_LIBTEST_JSON: 1
        INDEXER_DATABASE_URL: postgresql://postgres@localhost/postgres
        RUST_MIN_STACK: "4297152"
        MVP_TEST_ON_CI: "true"
        Z3_EXE: /home/runner/bin/z3
        CVC5_EXE: /home/runner/bin/cvc5
        DOTNET_ROOT: /home/runner/.dotnet
        BOOGIE_EXE: /home/runner/.dotnet/tools/boogie

    - name: Upload results
      # Run this step even if the test step ahead fails
      if: "!cancelled() && ${{ inputs.TRUNK_API_TOKEN }}"
      uses: trunk-io/analytics-uploader@main
      with:
        # Configured in the nextest.toml file
        junit-paths: target/nextest/ci/junit.xml
        org-slug: aptoslabs
        token: ${{ inputs.TRUNK_API_TOKEN }}
      continue-on-error: true
