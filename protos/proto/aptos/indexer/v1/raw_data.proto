// Copyright Â© Aptos Foundation
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package aptos.indexer.v1;

import "aptos/indexer/v1/filter.proto";
import "aptos/transaction/v1/transaction.proto";

// This is for storage only.
message TransactionsInStorage {
  // Required; transactions data.
  repeated aptos.transaction.v1.Transaction transactions = 1;
  // Required; chain id.
  optional uint64 starting_version = 2;
}

message GetTransactionsRequest {
  // Required; start version of current stream.
  optional uint64 starting_version = 1 [jstype = JS_STRING];

  // Optional; number of transactions to return in current stream.
  // If not present, return an infinite stream of transactions.
  optional uint64 transactions_count = 2 [jstype = JS_STRING];

  // Optional; number of transactions in each `TransactionsResponse` for current stream.
  // If not present, default to 1000. If larger than 1000, request will be rejected.
  optional uint64 batch_size = 3;

  // If provided, only transactions that match the filter will be included.
  optional BooleanTransactionFilter transaction_filter = 4;
}

// TransactionsResponse is a batch of transactions.
message TransactionsResponse {
  // Required; transactions data.
  repeated aptos.transaction.v1.Transaction transactions = 1;

  // Required; chain id.
  optional uint64 chain_id = 2 [jstype = JS_STRING];
}

service RawData {
  // Get transactions batch without any filtering from starting version and end if transaction count is present.
  rpc GetTransactions(GetTransactionsRequest) returns (stream TransactionsResponse);
}
