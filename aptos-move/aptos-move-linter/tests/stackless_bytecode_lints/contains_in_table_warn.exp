
Diagnostics:
warning: [lint] table::borrow called without checking if key exists. Consider using table::contains first to avoid runtime errors.
    ┌─ tests/stackless_bytecode_lints/contains_in_table_warn.move:182:9
    │
182 │         table::borrow(&table.table, 1); // UNSAFE: no contains check
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(contains_in_table)]`.
    = For more information, see https://aptos.dev/en/build/smart-contracts/linter#contains_in_table.

warning: [lint] table::add called without ensuring key doesn't exist. This may fail if key already exists. Consider using table::upsert or check with table::contains first.
    ┌─ tests/stackless_bytecode_lints/contains_in_table_warn.move:193:9
    │
193 │         table::add(&mut table.table, 1, 100); // UNSAFE: no contains check
    │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(contains_in_table)]`.
    = For more information, see https://aptos.dev/en/build/smart-contracts/linter#contains_in_table.

warning: [lint] table::borrow called without checking if key exists. Consider using table::contains first to avoid runtime errors.
    ┌─ tests/stackless_bytecode_lints/contains_in_table_warn.move:205:13
    │
205 │             table::borrow(&table.table, 2); // UNSAFE: checked key 1, borrowing key 2
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(contains_in_table)]`.
    = For more information, see https://aptos.dev/en/build/smart-contracts/linter#contains_in_table.

warning: [lint] table::add called without ensuring key doesn't exist. This may fail if key already exists. Consider using table::upsert or check with table::contains first.
    ┌─ tests/stackless_bytecode_lints/contains_in_table_warn.move:218:13
    │
218 │             table::add(&mut table.table, 2, 200); // UNSAFE: checked key 1, adding key 2
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(contains_in_table)]`.
    = For more information, see https://aptos.dev/en/build/smart-contracts/linter#contains_in_table.

warning: [lint] table::borrow called without checking if key exists. Consider using table::contains first to avoid runtime errors.
    ┌─ tests/stackless_bytecode_lints/contains_in_table_warn.move:231:13
    │
231 │             table::borrow(&table.table, 1); // UNSAFE: key doesn't exist
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(contains_in_table)]`.
    = For more information, see https://aptos.dev/en/build/smart-contracts/linter#contains_in_table.

warning: [lint] table::borrow called without checking if key exists. Consider using table::contains first to avoid runtime errors.
    ┌─ tests/stackless_bytecode_lints/contains_in_table_warn.move:245:13
    │
245 │             table::borrow(&table.table, 2); // UNSAFE - checked key 1, borrowing key 2
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(contains_in_table)]`.
    = For more information, see https://aptos.dev/en/build/smart-contracts/linter#contains_in_table.

warning: [lint] table::borrow called without checking if key exists. Consider using table::contains first to avoid runtime errors.
    ┌─ tests/stackless_bytecode_lints/contains_in_table_warn.move:289:13
    │
289 │             table::borrow(&table.table, 1); // Should be SAFE - linter does not handle this correctly!
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(contains_in_table)]`.
    = For more information, see https://aptos.dev/en/build/smart-contracts/linter#contains_in_table.

warning: [lint] table::borrow called without checking if key exists. Consider using table::contains first to avoid runtime errors.
    ┌─ tests/stackless_bytecode_lints/contains_in_table_warn.move:304:13
    │
304 │             table::borrow(&table.table, 1); // Should be SAFE - linter does not handle this correctly!
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(contains_in_table)]`.
    = For more information, see https://aptos.dev/en/build/smart-contracts/linter#contains_in_table.

warning: [lint] table::borrow called without checking if key exists. Consider using table::contains first to avoid runtime errors.
    ┌─ tests/stackless_bytecode_lints/contains_in_table_warn.move:366:13
    │
366 │             table::borrow(&table.table, 1); // CORRECTLY FLAGGED - unsafe when other_condition=true, linter ignores this!
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(contains_in_table)]`.
    = For more information, see https://aptos.dev/en/build/smart-contracts/linter#contains_in_table.

warning: [lint] table::borrow called without checking if key exists. Consider using table::contains first to avoid runtime errors.
    ┌─ tests/stackless_bytecode_lints/contains_in_table_warn.move:387:13
    │
387 │             table::borrow(&table2.table, 1); // UNSAFE: different table
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(contains_in_table)]`.
    = For more information, see https://aptos.dev/en/build/smart-contracts/linter#contains_in_table.

warning: [lint] table::borrow called without checking if key exists. Consider using table::contains first to avoid runtime errors.
    ┌─ tests/stackless_bytecode_lints/contains_in_table_warn.move:454:17
    │
454 │                 table::borrow(&table.table, (i as u64)); // Should be SAFE - linter does not handle this correctly!
    │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(contains_in_table)]`.
    = For more information, see https://aptos.dev/en/build/smart-contracts/linter#contains_in_table.

warning: [lint] table::add called without ensuring key doesn't exist. This may fail if key already exists. Consider using table::upsert or check with table::contains first.
    ┌─ tests/stackless_bytecode_lints/contains_in_table_warn.move:469:13
    │
469 │             table::add(&mut table.table, 2, 200); // Modifying table (but different key) -> This add is not safe
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    = To suppress this warning, annotate the function/module with the attribute `#[lint::skip(contains_in_table)]`.
    = For more information, see https://aptos.dev/en/build/smart-contracts/linter#contains_in_table.
